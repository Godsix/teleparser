# -*- coding: utf-8 -*-
"""
Created on Fri Dec  9 09:12:01 2022

@author: C. David
"""
# pylint: disable=protected-access,too-many-lines,too-many-public-methods,line-too-long
from functools import wraps, lru_cache
from construct import (Struct, Computed, Int32ul, Int64ul, Double, Hex,
                       FlagsEnum, Array, If, Peek,
                       Const, LazyBound, Switch, this,
                       setGlobalPrintFullStrings, setGlobalPrintPrivateEntries)
import logger
from .common import TString, TBytes, TBool, TTimestamp
# -----------------------------------------------------------------------------

INFO = {}

STRUCT_CACHE = {}


def constructor(cid, name, use_lru=False):
    INFO[cid] = name

    if not use_lru:  # pylint: disable=R1705
        def decorator(func):
            @wraps(func)
            def wrapper(*args, **kwargs):
                if cid in STRUCT_CACHE:
                    ret = STRUCT_CACHE[cid]
                else:
                    result = func(*args, **kwargs)
                    if isinstance(result, (list, tuple)):
                        ret = Struct('sname' / Computed(name),
                                     'signature' / Hex(Const(cid, Int32ul)),
                                     *result)
                    elif isinstance(result, dict):
                        ret = Struct('sname' / Computed(name),
                                     'signature' / Hex(Const(cid, Int32ul)),
                                     **result)
                    else:
                        ret = result
                    STRUCT_CACHE[cid] = ret
                return ret
            return wrapper
        return decorator
    else:
        return lru_cache()


structures = lru_cache()

# -----------------------------------------------------------------------------

def raise_exception(text, *args):
    string = text % args
    raise ValueError(string)


class TLStruct:
    LAYER = 198

    def __init__(self, raise_error=True):
        setGlobalPrintFullStrings(True)
        setGlobalPrintPrivateEntries(False)
        self.raise_error = raise_error
    
    @property
    def raise_error(self):
        return self._raise_error
    
    @raise_error.setter
    def raise_error(self, value):
        if value:
            self.exception = raise_exception
        else:
            self.exception = logger.exception
        self._raise_error = value

    def parse_blob(self, data):
        result = self.parse(data)
        if not result:
            return None
        elif len(result) == 1:
            return result[0]
        else:
            return result

    def get_parser(self, data):
        signature = int.from_bytes(data[:4], 'little')
        return getattr(self, f'struct_0x{signature:08x}', None)

    def parse(self, data):
        result = []
        parser = self.get_parser(data)
        if parser is None:
            count = int.from_bytes(data[:4], 'little')
            unparsed = data[4:]
            parsed_len = 4
            unknown = count
        else:
            count = 256
            unparsed = data
            parsed_len = 0
            unknown = None
        data_len = len(data)
        for _ in range(count):
            parser = self.get_parser(unparsed)
            if parser:
                ret = parser().parse(unparsed)
                result.append(ret)
                parsed_len += ret._io.tell()
                if data_len == parsed_len:
                    break
                unparsed = data[parsed_len:]
            else:
                signature = int.from_bytes(unparsed[:4], 'little')
                if signature in INFO:
                    name = INFO.get(signature)
                    self.exception('Not all data parsed for object: %s [0x%08x], '
                                   'input: %d, parsed: %d, missed: %s',
                                   name, signature, data_len, parsed_len,
                                   data[parsed_len:])
                else:

                    self.exception('unknown signature: 0x%08x,'
                                   'data: %s',
                                   unknown or signature, data)
        return result

    # ---------------------------- Common start -------------------------------

    @constructor(0x1cb5c415, 'vector', use_lru=True)
    def vector(self, datatype, name: str):
        return Struct(
            'sname' / Computed('vector'),
            'signature' / Hex(Const(0x1cb5c415, Int32ul)),
            'count' / Int32ul,
            'content' / Array(this.count, datatype))

    # ---------------------------- Common end ---------------------------------

    # -------------------------------------------------------------------------

    @constructor(0xc9b9e2b9, 'account_business_away_message_schedule_always')
    def struct_0xc9b9e2b9(self):
        return []

    @constructor(0xc3f2f501, 'account_business_away_message_schedule_outside_work_hours')
    def struct_0xc3f2f501(self):
        return []

    @constructor(0xcc4d9ecc, 'account_business_away_message_schedule_custom')
    def struct_0xcc4d9ecc(self):
        return (
            'start_date' / TTimestamp,
            'end_date' / TTimestamp)

    @structures
    def account_business_away_message_schedule_structures(self, name):
        tag_map = {
            0xc9b9e2b9: LazyBound(self.struct_0xc9b9e2b9),
            0xc3f2f501: LazyBound(self.struct_0xc3f2f501),
            0xcc4d9ecc: LazyBound(self.struct_0xcc4d9ecc)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2b96cd1b, 'account_email_verified')
    def struct_0x2b96cd1b(self):
        return ['email' / TString]

    @constructor(0xe1bb0d61, 'account_email_verified_login')
    def struct_0xe1bb0d61(self):
        return (
            'email' / TString,
            'sent_code' / self.auth_sent_code_structures('sent_code'))

    @structures
    def account_email_verified_structures(self, name):
        tag_map = {
            0x2b96cd1b: LazyBound(self.struct_0x2b96cd1b),
            0xe1bb0d61: LazyBound(self.struct_0xe1bb0d61)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd08ce645, 'account_emoji_statuses_not_modified')
    def struct_0xd08ce645(self):
        return []

    @constructor(0x90c467d1, 'account_emoji_statuses')
    def struct_0x90c467d1(self):
        return (
            'hash' / Int64ul,
            'statuses' / self.vector(self.emoji_status_structures('statuses'), 'statuses'))

    @structures
    def account_emoji_statuses_structures(self, name):
        tag_map = {
            0xd08ce645: LazyBound(self.struct_0xd08ce645),
            0x90c467d1: LazyBound(self.struct_0x90c467d1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x957b50fb, 'account_password')
    def struct_0x957b50fb(self):
        return Struct(
            'sname' / Computed('account_password'),
            'signature' / Hex(Const(0x957b50fb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_recovery=1,
                                has_secure_values=2,
                                has_password=4,
                                has_hint=8,
                                has_email_unconfirmed_pattern=16,
                                has_pending_reset_date=32,
                                has_login_email_pattern=64),
            'current_algo' / If(this.flags.has_password, self.password_kdf_algo_structures('current_algo')),
            'srp_b' / If(this.flags.has_password, TBytes),
            'srp_id' / If(this.flags.has_password, Int64ul),
            'hint' / If(this.flags.has_hint, TString),
            'email_unconfirmed_pattern' / If(this.flags.has_email_unconfirmed_pattern, TString),
            'new_algo' / self.password_kdf_algo_structures('new_algo'),
            'new_secure_algo' / self.secure_password_kdf_algo_structures('new_secure_algo'),
            'secure_random' / TBytes,
            'pending_reset_date' / If(this.flags.has_pending_reset_date, TTimestamp),
            'login_email_pattern' / If(this.flags.has_login_email_pattern, TString))

    @constructor(0x185b184f, 'account_password_layer144')
    def struct_0x185b184f(self):
        return Struct(
            'sname' / Computed('account_password_layer144'),
            'signature' / Hex(Const(0x185b184f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_recovery=1,
                                has_secure_values=2,
                                has_password=4,
                                has_hint=8,
                                has_email_unconfirmed_pattern=16,
                                has_pending_reset_date=32),
            'current_algo' / If(this.flags.has_password, self.password_kdf_algo_structures('current_algo')),
            'srp_b' / If(this.flags.has_password, TBytes),
            'srp_id' / If(this.flags.has_password, Int64ul),
            'hint' / If(this.flags.has_hint, TString),
            'email_unconfirmed_pattern' / If(this.flags.has_email_unconfirmed_pattern, TString),
            'new_algo' / self.password_kdf_algo_structures('new_algo'),
            'new_secure_algo' / self.secure_password_kdf_algo_structures('new_secure_algo'),
            'secure_random' / TBytes,
            'pending_reset_date' / If(this.flags.has_pending_reset_date, TTimestamp))

    @structures
    def account_password_structures(self, name):
        tag_map = {
            0x957b50fb: LazyBound(self.struct_0x957b50fb),
            0x185b184f: LazyBound(self.struct_0x185b184f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbac3a61a, 'account_reaction_notifications_from_contacts')
    def struct_0xbac3a61a(self):
        return []

    @constructor(0x4b9e22a0, 'account_reaction_notifications_from_all')
    def struct_0x4b9e22a0(self):
        return []

    @structures
    def account_reaction_notifications_from_structures(self, name):
        tag_map = {
            0xbac3a61a: LazyBound(self.struct_0xbac3a61a),
            0x4b9e22a0: LazyBound(self.struct_0x4b9e22a0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe3779861, 'account_reset_password_failed_wait')
    def struct_0xe3779861(self):
        return ['retry_date' / TTimestamp]

    @constructor(0xe9effc7d, 'account_reset_password_requested_wait')
    def struct_0xe9effc7d(self):
        return ['until_date' / TTimestamp]

    @constructor(0xe926d63e, 'account_reset_password_ok')
    def struct_0xe926d63e(self):
        return []

    @structures
    def account_reset_password_result_structures(self, name):
        tag_map = {
            0xe3779861: LazyBound(self.struct_0xe3779861),
            0xe9effc7d: LazyBound(self.struct_0xe9effc7d),
            0xe926d63e: LazyBound(self.struct_0xe926d63e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1f307eb7, 'account_saved_ringtone_converted')
    def struct_0x1f307eb7(self):
        return ['document' / self.document_structures('document')]

    @constructor(0xb7263f6d, 'account_saved_ringtone')
    def struct_0xb7263f6d(self):
        return []

    @structures
    def account_saved_ringtone_structures(self, name):
        tag_map = {
            0x1f307eb7: LazyBound(self.struct_0x1f307eb7),
            0xb7263f6d: LazyBound(self.struct_0xb7263f6d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfbf6e8b1, 'account_saved_ringtones_not_modified')
    def struct_0xfbf6e8b1(self):
        return []

    @constructor(0xc1e92cc5, 'account_saved_ringtones')
    def struct_0xc1e92cc5(self):
        return (
            'hash' / Int64ul,
            'ringtones' / self.vector(self.document_structures('ringtones'), 'ringtones'))

    @structures
    def account_saved_ringtones_structures(self, name):
        tag_map = {
            0xfbf6e8b1: LazyBound(self.struct_0xfbf6e8b1),
            0xc1e92cc5: LazyBound(self.struct_0xc1e92cc5)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9a3d8c6d, 'account_themes')
    def struct_0x9a3d8c6d(self):
        return (
            'hash' / Int64ul,
            'themes' / self.vector(self.theme_structures('themes'), 'themes'))

    @constructor(0xf41eb622, 'account_themes_not_modified')
    def struct_0xf41eb622(self):
        return []

    @structures
    def account_themes_structures(self, name):
        tag_map = {
            0x9a3d8c6d: LazyBound(self.struct_0x9a3d8c6d),
            0xf41eb622: LazyBound(self.struct_0xf41eb622)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1c199183, 'account_wall_papers_not_modified')
    def struct_0x1c199183(self):
        return []

    @constructor(0xcdc3858c, 'account_wall_papers')
    def struct_0xcdc3858c(self):
        return (
            'hash' / Int64ul,
            'wallpapers' / self.vector(self.wall_paper_structures('wallpapers'), 'wallpapers'))

    @structures
    def account_wall_papers_structures(self, name):
        tag_map = {
            0x1c199183: LazyBound(self.struct_0x1c199183),
            0xcdc3858c: LazyBound(self.struct_0xcdc3858c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd90d8dfe, 'attach_menu_bot')
    def struct_0xd90d8dfe(self):
        return Struct(
            'sname' / Computed('attach_menu_bot'),
            'signature' / Hex(Const(0xd90d8dfe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inactive=1,
                                has_settings=2,
                                is_request_write_access=4,
                                is_show_in_attach_menu=8,
                                is_show_in_side_menu=16,
                                is_side_menu_disclaimer_needed=32),
            'bot_id' / Int64ul,
            'short_name' / TString,
            'peer_types' / self.vector(self.attach_menu_peer_type_structures('peer_types'), 'peer_types'),
            'icons' / self.vector(self.struct_0xb2a7386b(), 'icons'))

    @constructor(0xc8aa2cd2, 'attach_menu_bot_layer162')
    def struct_0xc8aa2cd2(self):
        return Struct(
            'sname' / Computed('attach_menu_bot_layer162'),
            'signature' / Hex(Const(0xc8aa2cd2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inactive=1,
                                has_settings=2,
                                is_request_write_access=4),
            'bot_id' / Int64ul,
            'short_name' / TString,
            'peer_types' / self.vector(self.attach_menu_peer_type_structures('peer_types'), 'peer_types'),
            'icons' / self.vector(self.struct_0xb2a7386b(), 'icons'))

    @constructor(0xe93cb772, 'attach_menu_bot_layer140')
    def struct_0xe93cb772(self):
        return Struct(
            'sname' / Computed('attach_menu_bot_layer140'),
            'signature' / Hex(Const(0xe93cb772, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inactive=1),
            'bot_id' / Int64ul,
            'short_name' / TString,
            'icons' / self.vector(self.struct_0xb2a7386b(), 'icons'))

    @structures
    def attach_menu_bot_structures(self, name):
        tag_map = {
            0xd90d8dfe: LazyBound(self.struct_0xd90d8dfe),
            0xc8aa2cd2: LazyBound(self.struct_0xc8aa2cd2),
            0xe93cb772: LazyBound(self.struct_0xe93cb772)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf1d88a5c, 'attach_menu_bots_not_modified')
    def struct_0xf1d88a5c(self):
        return []

    @constructor(0x3c4301c0, 'attach_menu_bots')
    def struct_0x3c4301c0(self):
        return (
            'hash' / Int64ul,
            'bots' / self.vector(self.attach_menu_bot_structures('bots'), 'bots'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def attach_menu_bots_structures(self, name):
        tag_map = {
            0xf1d88a5c: LazyBound(self.struct_0xf1d88a5c),
            0x3c4301c0: LazyBound(self.struct_0x3c4301c0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc32bfa1a, 'attach_menu_peer_type_bot_pm')
    def struct_0xc32bfa1a(self):
        return []

    @constructor(0xf146d31f, 'attach_menu_peer_type_pm')
    def struct_0xf146d31f(self):
        return []

    @constructor(0x7bfbdefc, 'attach_menu_peer_type_broadcast')
    def struct_0x7bfbdefc(self):
        return []

    @constructor(0x0509113f, 'attach_menu_peer_type_chat')
    def struct_0x0509113f(self):
        return []

    @constructor(0x7d6be90e, 'attach_menu_peer_type_same_bot_pm')
    def struct_0x7d6be90e(self):
        return []

    @structures
    def attach_menu_peer_type_structures(self, name):
        tag_map = {
            0xc32bfa1a: LazyBound(self.struct_0xc32bfa1a),
            0xf146d31f: LazyBound(self.struct_0xf146d31f),
            0x7bfbdefc: LazyBound(self.struct_0x7bfbdefc),
            0x0509113f: LazyBound(self.struct_0x0509113f),
            0x7d6be90e: LazyBound(self.struct_0x7d6be90e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x586988d8, 'audio_empty_layer45')
    def struct_0x586988d8(self):
        return ['id' / Int64ul]

    @constructor(0xf9e35055, 'audio_layer45')
    def struct_0xf9e35055(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'dc_id' / Int32ul)

    @constructor(0x427425e7, 'audio_old')
    def struct_0x427425e7(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'size' / Int32ul,
            'dc_id' / Int32ul)

    @constructor(0x555555f6, 'audio_encrypted')
    def struct_0x555555f6(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'size' / Int32ul,
            'dc_id' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0xc7ac6496, 'audio_old2')
    def struct_0xc7ac6496(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'dc_id' / Int32ul)

    @structures
    def audio_structures(self, name):
        tag_map = {
            0x586988d8: LazyBound(self.struct_0x586988d8),
            0xf9e35055: LazyBound(self.struct_0xf9e35055),
            0x427425e7: LazyBound(self.struct_0x427425e7),
            0x555555f6: LazyBound(self.struct_0x555555f6),
            0xc7ac6496: LazyBound(self.struct_0xc7ac6496)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x44747e9a, 'auth_authorization_sign_up_required')
    def struct_0x44747e9a(self):
        return Struct(
            'sname' / Computed('auth_authorization_sign_up_required'),
            'signature' / Hex(Const(0x44747e9a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_terms_of_service=1),
            'terms_of_service' / If(this.flags.has_terms_of_service, self.struct_0x780a0310()))

    @constructor(0x33fb7bb8, 'auth_authorization_old')
    def struct_0x33fb7bb8(self):
        return Struct(
            'sname' / Computed('auth_authorization_old'),
            'signature' / Hex(Const(0x33fb7bb8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_setup_password_required=2,
                                has_tmp_sessions=1,
                                has_future_auth_token=4),
            'otherwise_relogin_days' / If(this.flags.is_setup_password_required, Int32ul),
            'tmp_sessions' / If(this.flags.has_tmp_sessions, Int32ul),
            'future_auth_token' / If(this.flags.has_future_auth_token, TBytes),
            'user' / self.user_structures('user'))

    @constructor(0x2ea2c0d4, 'auth_authorization')
    def struct_0x2ea2c0d4(self):
        return Struct(
            'sname' / Computed('auth_authorization'),
            'signature' / Hex(Const(0x2ea2c0d4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_setup_password_required=2,
                                has_tmp_sessions=1,
                                has_future_auth_token=4),
            'otherwise_relogin_days' / If(this.flags.is_setup_password_required, Int32ul),
            'tmp_sessions' / If(this.flags.has_tmp_sessions, Int32ul),
            'future_auth_token' / If(this.flags.has_future_auth_token, TBytes),
            'user' / self.user_structures('user'))

    @structures
    def auth_authorization_structures(self, name):
        tag_map = {
            0x44747e9a: LazyBound(self.struct_0x44747e9a),
            0x33fb7bb8: LazyBound(self.struct_0x33fb7bb8),
            0x2ea2c0d4: LazyBound(self.struct_0x2ea2c0d4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x72a3158c, 'auth_code_type_sms')
    def struct_0x72a3158c(self):
        return []

    @constructor(0x741cd3e3, 'auth_code_type_call')
    def struct_0x741cd3e3(self):
        return []

    @constructor(0x226ccefb, 'auth_code_type_flash_call')
    def struct_0x226ccefb(self):
        return []

    @constructor(0xd61ad6ee, 'auth_code_type_missed_call')
    def struct_0xd61ad6ee(self):
        return []

    @constructor(0x06ed998c, 'auth_code_type_fragment_sms')
    def struct_0x06ed998c(self):
        return []

    @structures
    def auth_code_type_structures(self, name):
        tag_map = {
            0x72a3158c: LazyBound(self.struct_0x72a3158c),
            0x741cd3e3: LazyBound(self.struct_0x741cd3e3),
            0x226ccefb: LazyBound(self.struct_0x226ccefb),
            0xd61ad6ee: LazyBound(self.struct_0xd61ad6ee),
            0x06ed998c: LazyBound(self.struct_0x06ed998c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x629f1980, 'auth_login_token')
    def struct_0x629f1980(self):
        return (
            'expires' / Int32ul,
            'token' / TBytes)

    @constructor(0x068e9916, 'auth_login_token_migrate_to')
    def struct_0x068e9916(self):
        return (
            'dc_id' / Int32ul,
            'token' / TBytes)

    @constructor(0x390d5c5e, 'auth_login_token_success')
    def struct_0x390d5c5e(self):
        return ['authorization' / self.auth_authorization_structures('authorization')]

    @structures
    def auth_login_token_structures(self, name):
        tag_map = {
            0x629f1980: LazyBound(self.struct_0x629f1980),
            0x068e9916: LazyBound(self.struct_0x068e9916),
            0x390d5c5e: LazyBound(self.struct_0x390d5c5e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2390fe44, 'auth_sent_code_success')
    def struct_0x2390fe44(self):
        return ['authorization' / self.auth_authorization_structures('authorization')]

    @constructor(0x5e002502, 'auth_sent_code')
    def struct_0x5e002502(self):
        return Struct(
            'sname' / Computed('auth_sent_code'),
            'signature' / Hex(Const(0x5e002502, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_type=2,
                                has_timeout=4),
            'type' / self.auth_sent_code_type_structures('type'),
            'phone_code_hash' / TString,
            'next_type' / If(this.flags.has_next_type, self.auth_code_type_structures('next_type')),
            'timeout' / If(this.flags.has_timeout, Int32ul))

    @structures
    def auth_sent_code_structures(self, name):
        tag_map = {
            0x2390fe44: LazyBound(self.struct_0x2390fe44),
            0x5e002502: LazyBound(self.struct_0x5e002502)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3dbb5986, 'auth_sent_code_type_app')
    def struct_0x3dbb5986(self):
        return ['length' / Int32ul]

    @constructor(0x5353e5a7, 'auth_sent_code_type_call')
    def struct_0x5353e5a7(self):
        return ['length' / Int32ul]

    @constructor(0xf450f59b, 'auth_sent_code_type_email_code')
    def struct_0xf450f59b(self):
        return Struct(
            'sname' / Computed('auth_sent_code_type_email_code'),
            'signature' / Hex(Const(0xf450f59b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_apple_signin_allowed=1,
                                is_google_signin_allowed=2,
                                has_reset_available_period=8,
                                has_reset_pending_date=16),
            'email_pattern' / TString,
            'length' / Int32ul,
            'reset_available_period' / If(this.flags.has_reset_available_period, Int32ul),
            'reset_pending_date' / If(this.flags.has_reset_pending_date, TTimestamp))

    @constructor(0xa5491dea, 'auth_sent_code_type_set_up_email_required')
    def struct_0xa5491dea(self):
        return Struct(
            'sname' / Computed('auth_sent_code_type_set_up_email_required'),
            'signature' / Hex(Const(0xa5491dea, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_apple_signin_allowed=1,
                                is_google_signin_allowed=2))

    @constructor(0xab03c6d9, 'auth_sent_code_type_flash_call')
    def struct_0xab03c6d9(self):
        return ['pattern' / TString]

    @constructor(0x82006484, 'auth_sent_code_type_missed_call')
    def struct_0x82006484(self):
        return (
            'prefix' / TString,
            'length' / Int32ul)

    @constructor(0xc000bba2, 'auth_sent_code_type_sms')
    def struct_0xc000bba2(self):
        return ['length' / Int32ul]

    @constructor(0xd9565c39, 'auth_sent_code_type_fragment_sms')
    def struct_0xd9565c39(self):
        return (
            'url' / TString,
            'length' / Int32ul)

    @constructor(0x009fd736, 'auth_sent_code_type_firebase_sms')
    def struct_0x009fd736(self):
        return Struct(
            'sname' / Computed('auth_sent_code_type_firebase_sms'),
            'signature' / Hex(Const(0x009fd736, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_nonce=1,
                                has_play_integrity_nonce=4,
                                has_receipt=2),
            'nonce' / If(this.flags.has_nonce, TBytes),
            'play_integrity_nonce' / If(this.flags.has_play_integrity_nonce, TBytes),
            'receipt' / If(this.flags.has_receipt, TString),
            'push_timeout' / If(this.flags.has_receipt, Int32ul),
            'length' / Int32ul)

    @constructor(0xa416ac81, 'auth_sent_code_type_sms_word')
    def struct_0xa416ac81(self):
        return Struct(
            'sname' / Computed('auth_sent_code_type_sms_word'),
            'signature' / Hex(Const(0xa416ac81, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_beginning=1),
            'beginning' / If(this.flags.has_beginning, TString))

    @constructor(0xb37794af, 'auth_sent_code_type_sms_phrase')
    def struct_0xb37794af(self):
        return Struct(
            'sname' / Computed('auth_sent_code_type_sms_phrase'),
            'signature' / Hex(Const(0xb37794af, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_beginning=1),
            'beginning' / If(this.flags.has_beginning, TString))

    @structures
    def auth_sent_code_type_structures(self, name):
        tag_map = {
            0x3dbb5986: LazyBound(self.struct_0x3dbb5986),
            0x5353e5a7: LazyBound(self.struct_0x5353e5a7),
            0xf450f59b: LazyBound(self.struct_0xf450f59b),
            0xa5491dea: LazyBound(self.struct_0xa5491dea),
            0xab03c6d9: LazyBound(self.struct_0xab03c6d9),
            0x82006484: LazyBound(self.struct_0x82006484),
            0xc000bba2: LazyBound(self.struct_0xc000bba2),
            0xd9565c39: LazyBound(self.struct_0xd9565c39),
            0x009fd736: LazyBound(self.struct_0x009fd736),
            0xa416ac81: LazyBound(self.struct_0xa416ac81),
            0xb37794af: LazyBound(self.struct_0xb37794af)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5b11125a, 'base_theme_arctic')
    def struct_0x5b11125a(self):
        return []

    @constructor(0xb7b31ea8, 'base_theme_night')
    def struct_0xb7b31ea8(self):
        return []

    @constructor(0xc3a12462, 'base_theme_classic')
    def struct_0xc3a12462(self):
        return []

    @constructor(0x6d5f77ee, 'base_theme_tinted')
    def struct_0x6d5f77ee(self):
        return []

    @constructor(0xfbd81688, 'base_theme_day')
    def struct_0xfbd81688(self):
        return []

    @structures
    def base_theme_structures(self, name):
        tag_map = {
            0x5b11125a: LazyBound(self.struct_0x5b11125a),
            0xb7b31ea8: LazyBound(self.struct_0xb7b31ea8),
            0xc3a12462: LazyBound(self.struct_0xc3a12462),
            0x6d5f77ee: LazyBound(self.struct_0x6d5f77ee),
            0xfbd81688: LazyBound(self.struct_0xfbd81688)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x997275b5, 'bool_true')
    def struct_0x997275b5(self):
        return []

    @constructor(0xbc799737, 'bool_false')
    def struct_0xbc799737(self):
        return []

    @structures
    def bool_structures(self, name):
        tag_map = {
            0x997275b5: LazyBound(self.struct_0x997275b5),
            0xbc799737: LazyBound(self.struct_0xbc799737)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5da674b7, 'bot_app_not_modified')
    def struct_0x5da674b7(self):
        return []

    @constructor(0x95fcd1d6, 'bot_app')
    def struct_0x95fcd1d6(self):
        return Struct(
            'sname' / Computed('bot_app'),
            'signature' / Hex(Const(0x95fcd1d6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_document=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'short_name' / TString,
            'title' / TString,
            'description' / TString,
            'photo' / self.photo_structures('photo'),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'hash' / Int64ul)

    @structures
    def bot_app_structures(self, name):
        tag_map = {
            0x5da674b7: LazyBound(self.struct_0x5da674b7),
            0x95fcd1d6: LazyBound(self.struct_0x95fcd1d6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe4169b5d, 'bot_info_layer140')
    def struct_0xe4169b5d(self):
        return (
            'user_id' / Int64ul,
            'description' / TString,
            'commands' / self.vector(self.struct_0xc27ac8c7(), 'commands'),
            'menu_button' / self.bot_menu_button_structures('menu_button'))

    @constructor(0xbb2e37ce, 'bot_info_empty_layer48')
    def struct_0xbb2e37ce(self):
        return []

    @constructor(0x98e81d3a, 'bot_info_layer131')
    def struct_0x98e81d3a(self):
        return (
            'user_id' / Int32ul,
            'description' / TString,
            'commands' / self.vector(self.struct_0xc27ac8c7(), 'commands'))

    @constructor(0x09cf585d, 'bot_info_layer48')
    def struct_0x09cf585d(self):
        return (
            'user_id' / Int32ul,
            'version' / Int32ul,
            'restriction_reason' / TString,
            'description' / TString,
            'commands' / self.vector(self.struct_0xc27ac8c7(), 'commands'))

    @constructor(0x1b74b335, 'bot_info_layer139')
    def struct_0x1b74b335(self):
        return (
            'user_id' / Int64ul,
            'description' / TString,
            'commands' / self.vector(self.struct_0xc27ac8c7(), 'commands'))

    @constructor(0x8f300b57, 'bot_info_layer185')
    def struct_0x8f300b57(self):
        return Struct(
            'sname' / Computed('bot_info_layer185'),
            'signature' / Hex(Const(0x8f300b57, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_preview_medias=64,
                                has_user_id=1,
                                has_description=2,
                                has_description_photo=16,
                                has_description_document=32,
                                has_commands=4,
                                has_menu_button=8),
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'description' / If(this.flags.has_description, TString),
            'description_photo' / If(this.flags.has_description_photo, self.photo_structures('description_photo')),
            'description_document' / If(this.flags.has_description_document, self.document_structures('description_document')),
            'commands' / If(this.flags.has_commands, self.vector(self.struct_0xc27ac8c7(), 'commands')),
            'menu_button' / If(this.flags.has_menu_button, self.bot_menu_button_structures('menu_button')))

    @constructor(0x82437e74, 'bot_info_layer192')
    def struct_0x82437e74(self):
        return Struct(
            'sname' / Computed('bot_info_layer192'),
            'signature' / Hex(Const(0x82437e74, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_preview_medias=64,
                                has_user_id=1,
                                has_description=2,
                                has_description_photo=16,
                                has_description_document=32,
                                has_commands=4,
                                has_menu_button=8,
                                has_privacy_policy_url=128),
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'description' / If(this.flags.has_description, TString),
            'description_photo' / If(this.flags.has_description_photo, self.photo_structures('description_photo')),
            'description_document' / If(this.flags.has_description_document, self.document_structures('description_document')),
            'commands' / If(this.flags.has_commands, self.vector(self.struct_0xc27ac8c7(), 'commands')),
            'menu_button' / If(this.flags.has_menu_button, self.bot_menu_button_structures('menu_button')),
            'privacy_policy_url' / If(this.flags.has_privacy_policy_url, TString))

    @constructor(0x36607333, 'bot_info_layer195')
    def struct_0x36607333(self):
        return Struct(
            'sname' / Computed('bot_info_layer195'),
            'signature' / Hex(Const(0x36607333, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_preview_medias=64,
                                has_user_id=1,
                                has_description=2,
                                has_description_photo=16,
                                has_description_document=32,
                                has_commands=4,
                                has_menu_button=8,
                                has_privacy_policy_url=128,
                                has_app_settings=256),
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'description' / If(this.flags.has_description, TString),
            'description_photo' / If(this.flags.has_description_photo, self.photo_structures('description_photo')),
            'description_document' / If(this.flags.has_description_document, self.document_structures('description_document')),
            'commands' / If(this.flags.has_commands, self.vector(self.struct_0xc27ac8c7(), 'commands')),
            'menu_button' / If(this.flags.has_menu_button, self.bot_menu_button_structures('menu_button')),
            'privacy_policy_url' / If(this.flags.has_privacy_policy_url, TString),
            'app_settings' / If(this.flags.has_app_settings, self.struct_0xc99b1950()))

    @constructor(0x4d8a0299, 'bot_info')
    def struct_0x4d8a0299(self):
        return Struct(
            'sname' / Computed('bot_info'),
            'signature' / Hex(Const(0x4d8a0299, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_preview_medias=64,
                                has_user_id=1,
                                has_description=2,
                                has_description_photo=16,
                                has_description_document=32,
                                has_commands=4,
                                has_menu_button=8,
                                has_privacy_policy_url=128,
                                has_app_settings=256,
                                has_verifier_settings=512),
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'description' / If(this.flags.has_description, TString),
            'description_photo' / If(this.flags.has_description_photo, self.photo_structures('description_photo')),
            'description_document' / If(this.flags.has_description_document, self.document_structures('description_document')),
            'commands' / If(this.flags.has_commands, self.vector(self.struct_0xc27ac8c7(), 'commands')),
            'menu_button' / If(this.flags.has_menu_button, self.bot_menu_button_structures('menu_button')),
            'privacy_policy_url' / If(this.flags.has_privacy_policy_url, TString),
            'app_settings' / If(this.flags.has_app_settings, self.struct_0xc99b1950()),
            'verifier_settings' / If(this.flags.has_verifier_settings, self.struct_0xb0cd6617()))

    @structures
    def bot_info_structures(self, name):
        tag_map = {
            0xe4169b5d: LazyBound(self.struct_0xe4169b5d),
            0xbb2e37ce: LazyBound(self.struct_0xbb2e37ce),
            0x98e81d3a: LazyBound(self.struct_0x98e81d3a),
            0x09cf585d: LazyBound(self.struct_0x09cf585d),
            0x1b74b335: LazyBound(self.struct_0x1b74b335),
            0x8f300b57: LazyBound(self.struct_0x8f300b57),
            0x82437e74: LazyBound(self.struct_0x82437e74),
            0x36607333: LazyBound(self.struct_0x36607333),
            0x4d8a0299: LazyBound(self.struct_0x4d8a0299)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4366232e, 'bot_inline_message_media_venue_layer77')
    def struct_0x4366232e(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_venue_layer77'),
            'signature' / Hex(Const(0x4366232e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'geo' / self.geo_point_structures('geo'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x8a86659c, 'bot_inline_message_media_venue')
    def struct_0x8a86659c(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_venue'),
            'signature' / Hex(Const(0x8a86659c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'geo' / self.geo_point_structures('geo'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString,
            'venue_type' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x3a8fd8b8, 'bot_inline_message_media_geo_layer71')
    def struct_0x3a8fd8b8(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_geo_layer71'),
            'signature' / Hex(Const(0x3a8fd8b8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'geo' / self.geo_point_structures('geo'),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x764cf810, 'bot_inline_message_media_auto')
    def struct_0x764cf810(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_auto'),
            'signature' / Hex(Const(0x764cf810, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=2,
                                has_reply_markup=4),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x0a74b15b, 'bot_inline_message_media_auto_layer74')
    def struct_0x0a74b15b(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_auto_layer74'),
            'signature' / Hex(Const(0x0a74b15b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'message' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x35edb4d4, 'bot_inline_message_media_contact_layer81')
    def struct_0x35edb4d4(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_contact_layer81'),
            'signature' / Hex(Const(0x35edb4d4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x18d1cdc2, 'bot_inline_message_media_contact')
    def struct_0x18d1cdc2(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_contact'),
            'signature' / Hex(Const(0x18d1cdc2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'vcard' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x8c7f65e2, 'bot_inline_message_text')
    def struct_0x8c7f65e2(self):
        return Struct(
            'sname' / Computed('bot_inline_message_text'),
            'signature' / Hex(Const(0x8c7f65e2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=1,
                                has_entities=2,
                                has_reply_markup=4),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0xb722de65, 'bot_inline_message_media_geo_layer119')
    def struct_0xb722de65(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_geo_layer119'),
            'signature' / Hex(Const(0xb722de65, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reply_markup=4),
            'geo' / self.geo_point_structures('geo'),
            'period' / Int32ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x051846fd, 'bot_inline_message_media_geo')
    def struct_0x051846fd(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_geo'),
            'signature' / Hex(Const(0x051846fd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_heading=1,
                                has_period=2,
                                has_proximity_notification_radius=8,
                                has_reply_markup=4),
            'geo' / self.geo_point_structures('geo'),
            'heading' / If(this.flags.has_heading, Int32ul),
            'period' / If(this.flags.has_period, Int32ul),
            'proximity_notification_radius' / If(this.flags.has_proximity_notification_radius, Int32ul),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x354a9b09, 'bot_inline_message_media_invoice')
    def struct_0x354a9b09(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_invoice'),
            'signature' / Hex(Const(0x354a9b09, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_shipping_address_requested=2,
                                is_test=8,
                                has_photo=1,
                                has_reply_markup=4),
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'currency' / TString,
            'total_amount' / Int64ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @constructor(0x809ad9a6, 'bot_inline_message_media_web_page')
    def struct_0x809ad9a6(self):
        return Struct(
            'sname' / Computed('bot_inline_message_media_web_page'),
            'signature' / Hex(Const(0x809ad9a6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_invert_media=8,
                                is_force_large_media=16,
                                is_force_small_media=32,
                                is_manual=128,
                                is_safe=256,
                                has_entities=2,
                                has_reply_markup=4),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'url' / TString,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')))

    @structures
    def bot_inline_message_structures(self, name):
        tag_map = {
            0x4366232e: LazyBound(self.struct_0x4366232e),
            0x8a86659c: LazyBound(self.struct_0x8a86659c),
            0x3a8fd8b8: LazyBound(self.struct_0x3a8fd8b8),
            0x764cf810: LazyBound(self.struct_0x764cf810),
            0x0a74b15b: LazyBound(self.struct_0x0a74b15b),
            0x35edb4d4: LazyBound(self.struct_0x35edb4d4),
            0x18d1cdc2: LazyBound(self.struct_0x18d1cdc2),
            0x8c7f65e2: LazyBound(self.struct_0x8c7f65e2),
            0xb722de65: LazyBound(self.struct_0xb722de65),
            0x051846fd: LazyBound(self.struct_0x051846fd),
            0x354a9b09: LazyBound(self.struct_0x354a9b09),
            0x809ad9a6: LazyBound(self.struct_0x809ad9a6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x11965f3a, 'bot_inline_result')
    def struct_0x11965f3a(self):
        return Struct(
            'sname' / Computed('bot_inline_result'),
            'signature' / Hex(Const(0x11965f3a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=2,
                                has_description=4,
                                has_url=8,
                                has_thumb=16,
                                has_content=32),
            'id' / TString,
            'type' / TString,
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'url' / If(this.flags.has_url, TString),
            'thumb' / If(this.flags.has_thumb, self.web_document_structures('thumb')),
            'content' / If(this.flags.has_content, self.web_document_structures('content')),
            'send_message' / self.bot_inline_message_structures('send_message'))

    @constructor(0x17db940b, 'bot_inline_media_result')
    def struct_0x17db940b(self):
        return Struct(
            'sname' / Computed('bot_inline_media_result'),
            'signature' / Hex(Const(0x17db940b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=1,
                                has_document=2,
                                has_title=4,
                                has_description=8),
            'id' / TString,
            'type' / TString,
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'send_message' / self.bot_inline_message_structures('send_message'))

    @structures
    def bot_inline_result_structures(self, name):
        tag_map = {
            0x11965f3a: LazyBound(self.struct_0x11965f3a),
            0x17db940b: LazyBound(self.struct_0x17db940b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc7b57ce6, 'bot_menu_button')
    def struct_0xc7b57ce6(self):
        return (
            'text' / TString,
            'url' / TString)

    @constructor(0x7533a588, 'bot_menu_button_default')
    def struct_0x7533a588(self):
        return []

    @constructor(0x4258c205, 'bot_menu_button_commands')
    def struct_0x4258c205(self):
        return []

    @structures
    def bot_menu_button_structures(self, name):
        tag_map = {
            0xc7b57ce6: LazyBound(self.struct_0xc7b57ce6),
            0x7533a588: LazyBound(self.struct_0x7533a588),
            0x4258c205: LazyBound(self.struct_0x4258c205)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc3ff71e7, 'broadcast_revenue_balances')
    def struct_0xc3ff71e7(self):
        return Struct(
            'sname' / Computed('broadcast_revenue_balances'),
            'signature' / Hex(Const(0xc3ff71e7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_withdrawal_enabled=1),
            'current_balance' / Int64ul,
            'available_balance' / Int64ul,
            'overall_revenue' / Int64ul)

    @constructor(0x8438f1c6, 'broadcast_revenue_balances_layer186')
    def struct_0x8438f1c6(self):
        return (
            'current_balance' / Int64ul,
            'available_balance' / Int64ul,
            'overall_revenue' / Int64ul)

    @structures
    def broadcast_revenue_balances_structures(self, name):
        tag_map = {
            0xc3ff71e7: LazyBound(self.struct_0xc3ff71e7),
            0x8438f1c6: LazyBound(self.struct_0x8438f1c6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xdb9f9140, 'channel_admin_log_event_action_discard_group_call')
    def struct_0xdb9f9140(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0xb1c3caa7, 'channel_admin_log_event_action_change_sticker_set')
    def struct_0xb1c3caa7(self):
        return (
            'prev_stickerset' / self.input_sticker_set_structures('prev_stickerset'),
            'new_stickerset' / self.input_sticker_set_structures('new_stickerset'))

    @constructor(0x46d840ab, 'channel_admin_log_event_action_change_emoji_sticker_set')
    def struct_0x46d840ab(self):
        return (
            'prev_stickerset' / self.input_sticker_set_structures('prev_stickerset'),
            'new_stickerset' / self.input_sticker_set_structures('new_stickerset'))

    @constructor(0xf92424d2, 'channel_admin_log_event_action_participant_mute')
    def struct_0xf92424d2(self):
        return ['participant' / self.struct_0xeba636fe()]

    @constructor(0x2df5fc0a, 'channel_admin_log_event_action_default_banned_rights')
    def struct_0x2df5fc0a(self):
        return (
            'prev_banned_rights' / self.struct_0x9f120418(),
            'new_banned_rights' / self.struct_0x9f120418())

    @constructor(0xfe69018d, 'channel_admin_log_event_action_change_theme')
    def struct_0xfe69018d(self):
        return (
            'prev_value' / TString,
            'new_value' / TString)

    @constructor(0xf89777f2, 'channel_admin_log_event_action_participant_leave')
    def struct_0xf89777f2(self):
        return []

    @constructor(0x709b2405, 'channel_admin_log_event_action_edit_message')
    def struct_0x709b2405(self):
        return (
            'prev_message' / self.message_structures('prev_message'),
            'new_message' / self.message_structures('new_message'))

    @constructor(0xe90ebb59, 'channel_admin_log_event_action_exported_invite_edit')
    def struct_0xe90ebb59(self):
        return (
            'prev_invite' / self.exported_chat_invite_structures('prev_invite'),
            'new_invite' / self.exported_chat_invite_structures('new_invite'))

    @constructor(0x6a4afc38, 'channel_admin_log_event_action_change_username')
    def struct_0x6a4afc38(self):
        return (
            'prev_value' / TString,
            'new_value' / TString)

    @constructor(0x0e6b76ae, 'channel_admin_log_event_action_change_location')
    def struct_0x0e6b76ae(self):
        return (
            'prev_value' / self.channel_location_structures('prev_value'),
            'new_value' / self.channel_location_structures('new_value'))

    @constructor(0x434bd2af, 'channel_admin_log_event_action_change_photo')
    def struct_0x434bd2af(self):
        return (
            'prev_photo' / self.photo_structures('prev_photo'),
            'new_photo' / self.photo_structures('new_photo'))

    @constructor(0xd5676710, 'channel_admin_log_event_action_participant_toggle_admin')
    def struct_0xd5676710(self):
        return (
            'prev_participant' / self.channel_participant_structures('prev_participant'),
            'new_participant' / self.channel_participant_structures('new_participant'))

    @constructor(0x53909779, 'channel_admin_log_event_action_toggle_slow_mode')
    def struct_0x53909779(self):
        return (
            'prev_value' / Int32ul,
            'new_value' / Int32ul)

    @constructor(0xfe9fc158, 'channel_admin_log_event_action_participant_join_by_invite')
    def struct_0xfe9fc158(self):
        return Struct(
            'sname' / Computed('channel_admin_log_event_action_participant_join_by_invite'),
            'signature' / Hex(Const(0xfe9fc158, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_chatlist=1),
            'invite' / self.exported_chat_invite_structures('invite'))

    @constructor(0x410a134e, 'channel_admin_log_event_action_exported_invite_revoke')
    def struct_0x410a134e(self):
        return ['invite' / self.exported_chat_invite_structures('invite')]

    @constructor(0x8f079643, 'channel_admin_log_event_action_stop_poll')
    def struct_0x8f079643(self):
        return ['message' / self.message_structures('message')]

    @constructor(0x5a50fca4, 'channel_admin_log_event_action_exported_invite_delete')
    def struct_0x5a50fca4(self):
        return ['invite' / self.exported_chat_invite_structures('invite')]

    @constructor(0x26ae0971, 'channel_admin_log_event_action_toggle_signatures')
    def struct_0x26ae0971(self):
        return ['new_value' / TBool]

    @constructor(0x3e7f6847, 'channel_admin_log_event_action_participant_volume')
    def struct_0x3e7f6847(self):
        return ['participant' / self.struct_0xeba636fe()]

    @constructor(0x02cc6383, 'channel_admin_log_event_action_toggle_forum')
    def struct_0x02cc6383(self):
        return ['new_value' / TBool]

    @constructor(0xf06fe208, 'channel_admin_log_event_action_edit_topic')
    def struct_0xf06fe208(self):
        return (
            'prev_topic' / self.forum_topic_structures('prev_topic'),
            'new_topic' / self.forum_topic_structures('new_topic'))

    @constructor(0x5d8d353b, 'channel_admin_log_event_action_pin_topic')
    def struct_0x5d8d353b(self):
        return Struct(
            'sname' / Computed('channel_admin_log_event_action_pin_topic'),
            'signature' / Hex(Const(0x5d8d353b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_prev_topic=1,
                                has_new_topic=2),
            'prev_topic' / If(this.flags.has_prev_topic, self.forum_topic_structures('prev_topic')),
            'new_topic' / If(this.flags.has_new_topic, self.forum_topic_structures('new_topic')))

    @constructor(0xe6d83d7e, 'channel_admin_log_event_action_participant_toggle_ban')
    def struct_0xe6d83d7e(self):
        return (
            'prev_participant' / self.channel_participant_structures('prev_participant'),
            'new_participant' / self.channel_participant_structures('new_participant'))

    @constructor(0x183040d3, 'channel_admin_log_event_action_participant_join')
    def struct_0x183040d3(self):
        return []

    @constructor(0x5f5c95f1, 'channel_admin_log_event_action_toggle_pre_history_hidden')
    def struct_0x5f5c95f1(self):
        return ['new_value' / TBool]

    @constructor(0xafb6144a, 'channel_admin_log_event_action_participant_join_by_request')
    def struct_0xafb6144a(self):
        return (
            'invite' / self.exported_chat_invite_structures('invite'),
            'approved_by' / Int64ul)

    @constructor(0xe9e82c18, 'channel_admin_log_event_action_update_pinned')
    def struct_0xe9e82c18(self):
        return ['message' / self.message_structures('message')]

    @constructor(0x56d6a247, 'channel_admin_log_event_action_toggle_group_call_setting')
    def struct_0x56d6a247(self):
        return ['join_muted' / TBool]

    @constructor(0xe31c34d8, 'channel_admin_log_event_action_participant_invite')
    def struct_0xe31c34d8(self):
        return ['participant' / self.channel_participant_structures('participant')]

    @constructor(0x55188a2e, 'channel_admin_log_event_action_change_about')
    def struct_0x55188a2e(self):
        return (
            'prev_value' / TString,
            'new_value' / TString)

    @constructor(0x23209745, 'channel_admin_log_event_action_start_group_call')
    def struct_0x23209745(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0xbe4e0ef8, 'channel_admin_log_event_action_change_available_reactions')
    def struct_0xbe4e0ef8(self):
        return (
            'prev_value' / self.chat_reactions_structures('prev_value'),
            'new_value' / self.chat_reactions_structures('new_value'))

    @constructor(0x050c7ac8, 'channel_admin_log_event_action_change_linked_chat')
    def struct_0x050c7ac8(self):
        return (
            'prev_value' / Int64ul,
            'new_value' / Int64ul)

    @constructor(0x1b7907ae, 'channel_admin_log_event_action_toggle_invites')
    def struct_0x1b7907ae(self):
        return ['new_value' / TBool]

    @constructor(0xe64429c0, 'channel_admin_log_event_action_participant_unmute')
    def struct_0xe64429c0(self):
        return ['participant' / self.struct_0xeba636fe()]

    @constructor(0x42e047bb, 'channel_admin_log_event_action_delete_message')
    def struct_0x42e047bb(self):
        return ['message' / self.message_structures('message')]

    @constructor(0xe6dfb825, 'channel_admin_log_event_action_change_title')
    def struct_0xe6dfb825(self):
        return (
            'prev_value' / TString,
            'new_value' / TString)

    @constructor(0x6e941a38, 'channel_admin_log_event_action_change_history_ttl')
    def struct_0x6e941a38(self):
        return (
            'prev_value' / Int32ul,
            'new_value' / Int32ul)

    @constructor(0xcb2ac766, 'channel_admin_log_event_action_toggle_no_forwards')
    def struct_0xcb2ac766(self):
        return ['new_value' / TBool]

    @constructor(0xf04fb3a9, 'channel_admin_log_event_action_change_usernames')
    def struct_0xf04fb3a9(self):
        return (
            'prev_value' / self.vector(TString, 'prev_value'),
            'new_value' / self.vector(TString, 'new_value'))

    @constructor(0x58707d28, 'channel_admin_log_event_action_create_topic')
    def struct_0x58707d28(self):
        return ['topic' / self.forum_topic_structures('topic')]

    @constructor(0xae168909, 'channel_admin_log_event_action_delete_topic')
    def struct_0xae168909(self):
        return ['topic' / self.forum_topic_structures('topic')]

    @constructor(0x64f36dfc, 'channel_admin_log_event_action_toggle_anti_spam')
    def struct_0x64f36dfc(self):
        return ['new_value' / TBool]

    @constructor(0x3c2b247b, 'channel_admin_log_event_action_change_color')
    def struct_0x3c2b247b(self):
        return (
            'prev_value' / Int32ul,
            'new_value' / Int32ul)

    @constructor(0x445fc434, 'channel_admin_log_event_action_change_background_emoji')
    def struct_0x445fc434(self):
        return (
            'prev_value' / Int64ul,
            'new_value' / Int64ul)

    @constructor(0x5796e780, 'channel_admin_log_event_action_change_peer_color')
    def struct_0x5796e780(self):
        return (
            'prev_value' / self.struct_0xb54b5acf(),
            'new_value' / self.struct_0xb54b5acf())

    @constructor(0x5e477b25, 'channel_admin_log_event_action_change_profile_peer_color')
    def struct_0x5e477b25(self):
        return (
            'prev_value' / self.struct_0xb54b5acf(),
            'new_value' / self.struct_0xb54b5acf())

    @constructor(0x31bb5d52, 'channel_admin_log_event_action_change_wallpaper')
    def struct_0x31bb5d52(self):
        return (
            'prev_value' / self.wall_paper_structures('prev_value'),
            'new_value' / self.wall_paper_structures('new_value'))

    @constructor(0x3ea9feb1, 'channel_admin_log_event_action_change_emoji_status')
    def struct_0x3ea9feb1(self):
        return (
            'prev_value' / self.emoji_status_structures('prev_value'),
            'new_value' / self.emoji_status_structures('new_value'))

    @constructor(0x60a79c79, 'channel_admin_log_event_action_toggle_signature_profiles')
    def struct_0x60a79c79(self):
        return ['value' / TBool]

    @constructor(0x64642db3, 'channel_admin_log_event_action_participant_sub_extend')
    def struct_0x64642db3(self):
        return (
            'prev_participant' / self.channel_participant_structures('prev_participant'),
            'new_participant' / self.channel_participant_structures('new_participant'))

    @structures
    def channel_admin_log_event_action_structures(self, name):
        tag_map = {
            0xdb9f9140: LazyBound(self.struct_0xdb9f9140),
            0xb1c3caa7: LazyBound(self.struct_0xb1c3caa7),
            0x46d840ab: LazyBound(self.struct_0x46d840ab),
            0xf92424d2: LazyBound(self.struct_0xf92424d2),
            0x2df5fc0a: LazyBound(self.struct_0x2df5fc0a),
            0xfe69018d: LazyBound(self.struct_0xfe69018d),
            0xf89777f2: LazyBound(self.struct_0xf89777f2),
            0x709b2405: LazyBound(self.struct_0x709b2405),
            0xe90ebb59: LazyBound(self.struct_0xe90ebb59),
            0x6a4afc38: LazyBound(self.struct_0x6a4afc38),
            0x0e6b76ae: LazyBound(self.struct_0x0e6b76ae),
            0x434bd2af: LazyBound(self.struct_0x434bd2af),
            0xd5676710: LazyBound(self.struct_0xd5676710),
            0x53909779: LazyBound(self.struct_0x53909779),
            0xfe9fc158: LazyBound(self.struct_0xfe9fc158),
            0x410a134e: LazyBound(self.struct_0x410a134e),
            0x8f079643: LazyBound(self.struct_0x8f079643),
            0x5a50fca4: LazyBound(self.struct_0x5a50fca4),
            0x26ae0971: LazyBound(self.struct_0x26ae0971),
            0x3e7f6847: LazyBound(self.struct_0x3e7f6847),
            0x02cc6383: LazyBound(self.struct_0x02cc6383),
            0xf06fe208: LazyBound(self.struct_0xf06fe208),
            0x5d8d353b: LazyBound(self.struct_0x5d8d353b),
            0xe6d83d7e: LazyBound(self.struct_0xe6d83d7e),
            0x183040d3: LazyBound(self.struct_0x183040d3),
            0x5f5c95f1: LazyBound(self.struct_0x5f5c95f1),
            0xafb6144a: LazyBound(self.struct_0xafb6144a),
            0xe9e82c18: LazyBound(self.struct_0xe9e82c18),
            0x56d6a247: LazyBound(self.struct_0x56d6a247),
            0xe31c34d8: LazyBound(self.struct_0xe31c34d8),
            0x55188a2e: LazyBound(self.struct_0x55188a2e),
            0x23209745: LazyBound(self.struct_0x23209745),
            0xbe4e0ef8: LazyBound(self.struct_0xbe4e0ef8),
            0x050c7ac8: LazyBound(self.struct_0x050c7ac8),
            0x1b7907ae: LazyBound(self.struct_0x1b7907ae),
            0xe64429c0: LazyBound(self.struct_0xe64429c0),
            0x42e047bb: LazyBound(self.struct_0x42e047bb),
            0xe6dfb825: LazyBound(self.struct_0xe6dfb825),
            0x6e941a38: LazyBound(self.struct_0x6e941a38),
            0xcb2ac766: LazyBound(self.struct_0xcb2ac766),
            0xf04fb3a9: LazyBound(self.struct_0xf04fb3a9),
            0x58707d28: LazyBound(self.struct_0x58707d28),
            0xae168909: LazyBound(self.struct_0xae168909),
            0x64f36dfc: LazyBound(self.struct_0x64f36dfc),
            0x3c2b247b: LazyBound(self.struct_0x3c2b247b),
            0x445fc434: LazyBound(self.struct_0x445fc434),
            0x5796e780: LazyBound(self.struct_0x5796e780),
            0x5e477b25: LazyBound(self.struct_0x5e477b25),
            0x31bb5d52: LazyBound(self.struct_0x31bb5d52),
            0x3ea9feb1: LazyBound(self.struct_0x3ea9feb1),
            0x60a79c79: LazyBound(self.struct_0x60a79c79),
            0x64642db3: LazyBound(self.struct_0x64642db3)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbfb5ad8b, 'channel_location_empty')
    def struct_0xbfb5ad8b(self):
        return []

    @constructor(0x209b82db, 'channel_location')
    def struct_0x209b82db(self):
        return (
            'geo_point' / self.geo_point_structures('geo_point'),
            'address' / TString)

    @structures
    def channel_location_structures(self, name):
        tag_map = {
            0xbfb5ad8b: LazyBound(self.struct_0xbfb5ad8b),
            0x209b82db: LazyBound(self.struct_0x209b82db)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x94d42ee7, 'channel_messages_filter_empty')
    def struct_0x94d42ee7(self):
        return []

    @constructor(0xcd77d957, 'channel_messages_filter')
    def struct_0xcd77d957(self):
        return Struct(
            'sname' / Computed('channel_messages_filter'),
            'signature' / Hex(Const(0xcd77d957, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_new_messages=2),
            'ranges' / self.vector(self.struct_0x0ae30253(), 'ranges'))

    @structures
    def channel_messages_filter_structures(self, name):
        tag_map = {
            0x94d42ee7: LazyBound(self.struct_0x94d42ee7),
            0xcd77d957: LazyBound(self.struct_0xcd77d957)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x222c1886, 'channel_participant_banned_layer92')
    def struct_0x222c1886(self):
        return Struct(
            'sname' / Computed('channel_participant_banned_layer92'),
            'signature' / Hex(Const(0x222c1886, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_left=1),
            'peer_user_id' / Int32ul,
            'kicked_by' / Int32ul,
            'date' / TTimestamp,
            'banned_rights_layer92' / self.struct_0x58cf4249())

    @constructor(0x15ebac1d, 'channel_participant_layer131')
    def struct_0x15ebac1d(self):
        return (
            'peer_user_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0x808d15a4, 'channel_participant_creator_layer118')
    def struct_0x808d15a4(self):
        return Struct(
            'sname' / Computed('channel_participant_creator_layer118'),
            'signature' / Hex(Const(0x808d15a4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_rank=1),
            'peer_user_id' / Int32ul,
            'rank' / If(this.flags.has_rank, TString))

    @constructor(0x447dca4b, 'channel_participant_creator_layer131')
    def struct_0x447dca4b(self):
        return Struct(
            'sname' / Computed('channel_participant_creator_layer131'),
            'signature' / Hex(Const(0x447dca4b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_rank=1),
            'peer_user_id' / Int32ul,
            'admin_rights' / self.struct_0x5fb224d5(),
            'rank' / If(this.flags.has_rank, TString))

    @constructor(0xe3e2e1f9, 'channel_participant_creator_layer103')
    def struct_0xe3e2e1f9(self):
        return ['peer_user_id' / Int32ul]

    @constructor(0xa3289a6d, 'channel_participant_self_layer131')
    def struct_0xa3289a6d(self):
        return (
            'peer_user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0x6df8014e, 'channel_participant_banned')
    def struct_0x6df8014e(self):
        return Struct(
            'sname' / Computed('channel_participant_banned'),
            'signature' / Hex(Const(0x6df8014e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_left=1),
            'peer' / self.peer_structures('peer'),
            'kicked_by' / Int64ul,
            'date' / TTimestamp,
            'banned_rights' / self.struct_0x9f120418())

    @constructor(0x34c3bb53, 'channel_participant_admin')
    def struct_0x34c3bb53(self):
        return Struct(
            'sname' / Computed('channel_participant_admin'),
            'signature' / Hex(Const(0x34c3bb53, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_edit=1,
                                is_self=2,
                                has_rank=4),
            'peer_user_id' / Int64ul,
            'inviter_id' / If(this.flags.is_self, Int64ul),
            'promoted_by' / Int64ul,
            'date' / TTimestamp,
            'admin_rights' / self.struct_0x5fb224d5(),
            'rank' / If(this.flags.has_rank, TString))

    @constructor(0xcb397619, 'channel_participant')
    def struct_0xcb397619(self):
        return Struct(
            'sname' / Computed('channel_participant'),
            'signature' / Hex(Const(0xcb397619, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_subscription_until_date=1),
            'peer_user_id' / Int64ul,
            'date' / TTimestamp,
            'subscription_until_date' / If(this.flags.has_subscription_until_date, TTimestamp))

    @constructor(0xc00c07c0, 'channel_participant_layer185')
    def struct_0xc00c07c0(self):
        return (
            'peer_user_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0x2fe601d3, 'channel_participant_creator')
    def struct_0x2fe601d3(self):
        return Struct(
            'sname' / Computed('channel_participant_creator'),
            'signature' / Hex(Const(0x2fe601d3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_rank=1),
            'peer_user_id' / Int64ul,
            'admin_rights' / self.struct_0x5fb224d5(),
            'rank' / If(this.flags.has_rank, TString))

    @constructor(0xccbebbaf, 'channel_participant_admin_layer131')
    def struct_0xccbebbaf(self):
        return Struct(
            'sname' / Computed('channel_participant_admin_layer131'),
            'signature' / Hex(Const(0xccbebbaf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_edit=1,
                                is_self=2,
                                has_rank=4),
            'peer_user_id' / Int32ul,
            'inviter_id' / If(this.flags.is_self, Int32ul),
            'promoted_by' / Int32ul,
            'date' / TTimestamp,
            'admin_rights' / self.struct_0x5fb224d5(),
            'rank' / If(this.flags.has_rank, TString))

    @constructor(0xa82fa898, 'channel_participant_admin_layer92')
    def struct_0xa82fa898(self):
        return Struct(
            'sname' / Computed('channel_participant_admin_layer92'),
            'signature' / Hex(Const(0xa82fa898, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_edit=1),
            'peer_user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'promoted_by' / Int32ul,
            'date' / TTimestamp,
            'admin_rights_layer92' / self.struct_0x5d7ceba5())

    @constructor(0x4f607bef, 'channel_participant_self')
    def struct_0x4f607bef(self):
        return Struct(
            'sname' / Computed('channel_participant_self'),
            'signature' / Hex(Const(0x4f607bef, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_invite=1,
                                has_subscription_until_date=2),
            'user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp,
            'subscription_until_date' / If(this.flags.has_subscription_until_date, TTimestamp))

    @constructor(0x35a8bfa7, 'channel_participant_self_layer185')
    def struct_0x35a8bfa7(self):
        return Struct(
            'sname' / Computed('channel_participant_self_layer185'),
            'signature' / Hex(Const(0x35a8bfa7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_invite=1),
            'user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0x28a8bc67, 'channel_participant_self_layer133')
    def struct_0x28a8bc67(self):
        return (
            'peer_user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0x50a1dfd6, 'channel_participant_banned_layer131')
    def struct_0x50a1dfd6(self):
        return Struct(
            'sname' / Computed('channel_participant_banned_layer131'),
            'signature' / Hex(Const(0x50a1dfd6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_left=1),
            'peer' / self.peer_structures('peer'),
            'kicked_by' / Int32ul,
            'date' / TTimestamp,
            'banned_rights' / self.struct_0x9f120418())

    @constructor(0x98192d61, 'channel_participant_editor_layer67')
    def struct_0x98192d61(self):
        return (
            'peer_user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0x1b03f006, 'channel_participant_left')
    def struct_0x1b03f006(self):
        return ['peer' / self.peer_structures('peer')]

    @constructor(0x1c0facaf, 'channel_participant_banned_layer125')
    def struct_0x1c0facaf(self):
        return Struct(
            'sname' / Computed('channel_participant_banned_layer125'),
            'signature' / Hex(Const(0x1c0facaf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_left=1),
            'peer_user_id' / Int32ul,
            'kicked_by' / Int32ul,
            'date' / TTimestamp,
            'banned_rights' / self.struct_0x9f120418())

    @constructor(0x5daa6e23, 'channel_participant_admin_layer103')
    def struct_0x5daa6e23(self):
        return Struct(
            'sname' / Computed('channel_participant_admin_layer103'),
            'signature' / Hex(Const(0x5daa6e23, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_edit=1,
                                is_self=2),
            'peer_user_id' / Int32ul,
            'inviter_id' / If(this.flags.is_self, Int32ul),
            'promoted_by' / Int32ul,
            'date' / TTimestamp,
            'admin_rights' / self.struct_0x5fb224d5())

    @constructor(0xc3c6796b, 'channel_participant_left_layer125')
    def struct_0xc3c6796b(self):
        return ['peer_user_id' / Int32ul]

    @constructor(0x91057fef, 'channel_participant_moderator_layer67')
    def struct_0x91057fef(self):
        return (
            'peer_user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0x8cc5e69a, 'channel_participant_kicked_layer67')
    def struct_0x8cc5e69a(self):
        return (
            'peer_user_id' / Int32ul,
            'kicked_by' / Int32ul,
            'date' / TTimestamp)

    @structures
    def channel_participant_structures(self, name):
        tag_map = {
            0x222c1886: LazyBound(self.struct_0x222c1886),
            0x15ebac1d: LazyBound(self.struct_0x15ebac1d),
            0x808d15a4: LazyBound(self.struct_0x808d15a4),
            0x447dca4b: LazyBound(self.struct_0x447dca4b),
            0xe3e2e1f9: LazyBound(self.struct_0xe3e2e1f9),
            0xa3289a6d: LazyBound(self.struct_0xa3289a6d),
            0x6df8014e: LazyBound(self.struct_0x6df8014e),
            0x34c3bb53: LazyBound(self.struct_0x34c3bb53),
            0xcb397619: LazyBound(self.struct_0xcb397619),
            0xc00c07c0: LazyBound(self.struct_0xc00c07c0),
            0x2fe601d3: LazyBound(self.struct_0x2fe601d3),
            0xccbebbaf: LazyBound(self.struct_0xccbebbaf),
            0xa82fa898: LazyBound(self.struct_0xa82fa898),
            0x4f607bef: LazyBound(self.struct_0x4f607bef),
            0x35a8bfa7: LazyBound(self.struct_0x35a8bfa7),
            0x28a8bc67: LazyBound(self.struct_0x28a8bc67),
            0x50a1dfd6: LazyBound(self.struct_0x50a1dfd6),
            0x98192d61: LazyBound(self.struct_0x98192d61),
            0x1b03f006: LazyBound(self.struct_0x1b03f006),
            0x1c0facaf: LazyBound(self.struct_0x1c0facaf),
            0x5daa6e23: LazyBound(self.struct_0x5daa6e23),
            0xc3c6796b: LazyBound(self.struct_0xc3c6796b),
            0x91057fef: LazyBound(self.struct_0x91057fef),
            0x8cc5e69a: LazyBound(self.struct_0x8cc5e69a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe04b5ceb, 'channel_participants_mentions')
    def struct_0xe04b5ceb(self):
        return Struct(
            'sname' / Computed('channel_participants_mentions'),
            'signature' / Hex(Const(0xe04b5ceb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_q=1,
                                has_top_msg_id=2),
            'q' / If(this.flags.has_q, TString),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul))

    @constructor(0xbb6ae88d, 'channel_participants_contacts')
    def struct_0xbb6ae88d(self):
        return ['q' / TString]

    @constructor(0xb4608969, 'channel_participants_admins')
    def struct_0xb4608969(self):
        return []

    @constructor(0xa3b54985, 'channel_participants_kicked')
    def struct_0xa3b54985(self):
        return ['q' / TString]

    @constructor(0x0656ac4b, 'channel_participants_search')
    def struct_0x0656ac4b(self):
        return ['q' / TString]

    @constructor(0xb0d1865b, 'channel_participants_bots')
    def struct_0xb0d1865b(self):
        return []

    @constructor(0x1427a5e1, 'channel_participants_banned')
    def struct_0x1427a5e1(self):
        return ['q' / TString]

    @constructor(0xde3f3c79, 'channel_participants_recent')
    def struct_0xde3f3c79(self):
        return []

    @structures
    def channel_participants_filter_structures(self, name):
        tag_map = {
            0xe04b5ceb: LazyBound(self.struct_0xe04b5ceb),
            0xbb6ae88d: LazyBound(self.struct_0xbb6ae88d),
            0xb4608969: LazyBound(self.struct_0xb4608969),
            0xa3b54985: LazyBound(self.struct_0xa3b54985),
            0x0656ac4b: LazyBound(self.struct_0x0656ac4b),
            0xb0d1865b: LazyBound(self.struct_0xb0d1865b),
            0x1427a5e1: LazyBound(self.struct_0x1427a5e1),
            0xde3f3c79: LazyBound(self.struct_0xde3f3c79)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9ab0feaf, 'channels_channel_participants')
    def struct_0x9ab0feaf(self):
        return (
            'count' / Int32ul,
            'participants' / self.vector(self.channel_participant_structures('participants'), 'participants'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf0173fe9, 'channels_channel_participants_not_modified')
    def struct_0xf0173fe9(self):
        return []

    @structures
    def channels_channel_participants_structures(self, name):
        tag_map = {
            0x9ab0feaf: LazyBound(self.struct_0x9ab0feaf),
            0xf0173fe9: LazyBound(self.struct_0xf0173fe9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x846f9e42, 'channels_sponsored_message_report_result_choose_option')
    def struct_0x846f9e42(self):
        return (
            'title' / TString,
            'options' / self.vector(self.struct_0x430d3150(), 'options'))

    @constructor(0x3e3bcf2f, 'channels_sponsored_message_report_result_ads_hidden')
    def struct_0x3e3bcf2f(self):
        return []

    @constructor(0xad798849, 'channels_sponsored_message_report_result_reported')
    def struct_0xad798849(self):
        return []

    @structures
    def channels_sponsored_message_report_result_structures(self, name):
        tag_map = {
            0x846f9e42: LazyBound(self.struct_0x846f9e42),
            0x3e3bcf2f: LazyBound(self.struct_0x3e3bcf2f),
            0xad798849: LazyBound(self.struct_0xad798849)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2633421b, 'chat_full')
    def struct_0x2633421b(self):
        return Struct(
            'sname' / Computed('chat_full'),
            'signature' / Hex(Const(0x2633421b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536,
                                has_requests_pending=131072,
                                has_available_reactions=262144,
                                has_reactions_limit=1048576),
            'id' / Int64ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'reactions_limit' / If(this.flags.has_reactions_limit, Int32ul))

    @constructor(0xc9d31138, 'chat_full_layer177')
    def struct_0xc9d31138(self):
        return Struct(
            'sname' / Computed('chat_full_layer177'),
            'signature' / Hex(Const(0xc9d31138, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536,
                                has_requests_pending=131072,
                                has_available_reactions=262144),
            'id' / Int64ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')))

    @constructor(0x52d6806b, 'channel_full')
    def struct_0x52d6806b(self):
        return Struct(
            'sname' / Computed('channel_full'),
            'signature' / Hex(Const(0x52d6806b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 is_restricted_sponsored=2048,
                                 is_can_view_revenue=4096,
                                 is_paid_media_allowed=16384,
                                 is_can_view_stars_revenue=32768,
                                 is_paid_reactions_available=65536,
                                 is_stargifts_available=524288,
                                 has_reactions_limit=8192,
                                 has_stories=16,
                                 has_wallpaper=128,
                                 has_boosts_applied=256,
                                 has_boosts_unrestrict=512,
                                 has_emojiset=1024,
                                 has_bot_verification=131072,
                                 has_stargifts_count=262144),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'reactions_limit' / If(this.flags2.has_reactions_limit, Int32ul),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'boosts_applied' / If(this.flags2.has_boosts_applied, Int32ul),
            'boosts_unrestrict' / If(this.flags2.has_boosts_unrestrict, Int32ul),
            'emojiset' / If(this.flags2.has_emojiset, self.sticker_set_structures('emojiset')),
            'bot_verification' / If(this.flags2.has_bot_verification, self.struct_0xf93cd45c()),
            'stargifts_count' / If(this.flags2.has_stargifts_count, Int32ul))

    @constructor(0x9ff3b858, 'channel_full_layer197')
    def struct_0x9ff3b858(self):
        return Struct(
            'sname' / Computed('channel_full_layer197'),
            'signature' / Hex(Const(0x9ff3b858, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 is_restricted_sponsored=2048,
                                 is_can_view_revenue=4096,
                                 is_paid_media_allowed=16384,
                                 is_can_view_stars_revenue=32768,
                                 is_paid_reactions_available=65536,
                                 has_reactions_limit=8192,
                                 has_stories=16,
                                 has_wallpaper=128,
                                 has_boosts_applied=256,
                                 has_boosts_unrestrict=512,
                                 has_emojiset=1024,
                                 has_bot_verification=131072),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'reactions_limit' / If(this.flags2.has_reactions_limit, Int32ul),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'boosts_applied' / If(this.flags2.has_boosts_applied, Int32ul),
            'boosts_unrestrict' / If(this.flags2.has_boosts_unrestrict, Int32ul),
            'emojiset' / If(this.flags2.has_emojiset, self.sticker_set_structures('emojiset')),
            'bot_verification' / If(this.flags2.has_bot_verification, self.struct_0xf93cd45c()))

    @constructor(0xbbab348d, 'channel_full_layer195')
    def struct_0xbbab348d(self):
        return Struct(
            'sname' / Computed('channel_full_layer195'),
            'signature' / Hex(Const(0xbbab348d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 is_restricted_sponsored=2048,
                                 is_can_view_revenue=4096,
                                 is_paid_media_allowed=16384,
                                 is_can_view_stars_revenue=32768,
                                 is_paid_reactions_available=65536,
                                 has_reactions_limit=8192,
                                 has_stories=16,
                                 has_wallpaper=128,
                                 has_boosts_applied=256,
                                 has_boosts_unrestrict=512,
                                 has_emojiset=1024),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'reactions_limit' / If(this.flags2.has_reactions_limit, Int32ul),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'boosts_applied' / If(this.flags2.has_boosts_applied, Int32ul),
            'boosts_unrestrict' / If(this.flags2.has_boosts_unrestrict, Int32ul),
            'emojiset' / If(this.flags2.has_emojiset, self.sticker_set_structures('emojiset')))

    @constructor(0x44c054a7, 'channel_full_layer177')
    def struct_0x44c054a7(self):
        return Struct(
            'sname' / Computed('channel_full_layer177'),
            'signature' / Hex(Const(0x44c054a7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 is_restricted_sponsored=2048,
                                 is_can_view_revenue=4096,
                                 is_can_view_stars_revenue=32768,
                                 has_stories=16,
                                 has_wallpaper=128,
                                 has_boosts_applied=256,
                                 has_boosts_unrestrict=512,
                                 has_emojiset=1024),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'boosts_applied' / If(this.flags2.has_boosts_applied, Int32ul),
            'boosts_unrestrict' / If(this.flags2.has_boosts_unrestrict, Int32ul),
            'emojiset' / If(this.flags2.has_emojiset, self.sticker_set_structures('emojiset')))

    @constructor(0x680b773c, 'channel_full_layer176')
    def struct_0x680b773c(self):
        return Struct(
            'sname' / Computed('channel_full_layer176'),
            'signature' / Hex(Const(0x680b773c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 has_stories=16,
                                 has_wallpaper=128,
                                 has_boosts_applied=256,
                                 has_boosts_unrestrict=512,
                                 has_emojiset=1024),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'boosts_applied' / If(this.flags2.has_boosts_applied, Int32ul),
            'boosts_unrestrict' / If(this.flags2.has_boosts_unrestrict, Int32ul),
            'emojiset' / If(this.flags2.has_emojiset, self.sticker_set_structures('emojiset')))

    @constructor(0x723027bd, 'channel_full_layer167')
    def struct_0x723027bd(self):
        return Struct(
            'sname' / Computed('channel_full_layer167'),
            'signature' / Hex(Const(0x723027bd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 has_stories=16),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')))

    @constructor(0x0f2bcb6f, 'channel_full_layer173')
    def struct_0x0f2bcb6f(self):
        return Struct(
            'sname' / Computed('channel_full_layer173'),
            'signature' / Hex(Const(0x0f2bcb6f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8,
                                 is_stories_pinned_available=32,
                                 is_view_forum_as_messages=64,
                                 has_stories=16,
                                 has_wallpaper=128),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')),
            'stories' / If(this.flags2.has_stories, self.stories_peer_stories_structures('stories')),
            'wallpaper' / If(this.flags2.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @constructor(0xf2355507, 'channel_full_layer162')
    def struct_0xf2355507(self):
        return Struct(
            'sname' / Computed('channel_full_layer162'),
            'signature' / Hex(Const(0xf2355507, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1,
                                 is_antispam=2,
                                 is_participants_hidden=4,
                                 is_translations_disabled=8),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions' / If(this.flags.has_available_reactions, self.chat_reactions_structures('available_reactions')))

    @constructor(0xd18ee226, 'chat_full_layer144')
    def struct_0xd18ee226(self):
        return Struct(
            'sname' / Computed('chat_full_layer144'),
            'signature' / Hex(Const(0xd18ee226, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536,
                                has_requests_pending=131072,
                                has_available_reactions_legacy=262144),
            'id' / Int64ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'available_reactions_legacy' / If(this.flags.has_available_reactions_legacy, self.vector(TString, 'available_reactions_legacy')))

    @constructor(0xea68a619, 'channel_full_layer144')
    def struct_0xea68a619(self):
        return Struct(
            'sname' / Computed('channel_full_layer144'),
            'signature' / Hex(Const(0xea68a619, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions_legacy=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_can_delete_channel=1),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions_legacy' / If(this.flags.has_available_reactions_legacy, self.vector(TString, 'available_reactions_legacy')))

    @constructor(0xe13c3d20, 'channel_full_layer139')
    def struct_0xe13c3d20(self):
        return Struct(
            'sname' / Computed('channel_full_layer139'),
            'signature' / Hex(Const(0xe13c3d20, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912,
                                has_available_reactions_legacy=1073741824),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')),
            'available_reactions_legacy' / If(this.flags.has_available_reactions_legacy, self.vector(TString, 'available_reactions_legacy')))

    @constructor(0x56662e2e, 'channel_full_layer135')
    def struct_0x56662e2e(self):
        return Struct(
            'sname' / Computed('channel_full_layer135'),
            'signature' / Hex(Const(0x56662e2e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456,
                                has_default_send_as=536870912),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')),
            'default_send_as' / If(this.flags.has_default_send_as, self.peer_structures('default_send_as')))

    @constructor(0x59cff963, 'channel_full_layer134')
    def struct_0x59cff963(self):
        return Struct(
            'sname' / Computed('channel_full_layer134'),
            'signature' / Hex(Const(0x59cff963, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728,
                                has_requests_pending=268435456),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')))

    @constructor(0x1c87a71a, 'channel_full_layer98')
    def struct_0x1c87a71a(self):
        return Struct(
            'sname' / Computed('channel_full_layer98'),
            'signature' / Hex(Const(0x1c87a71a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_view_stats=4096,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul))

    @constructor(0x03648977, 'channel_full_layer99')
    def struct_0x03648977(self):
        return Struct(
            'sname' / Computed('channel_full_layer99'),
            'signature' / Hex(Const(0x03648977, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_view_stats=4096,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'pts' / Int32ul)

    @constructor(0x2e02a614, 'chat_full_layer87')
    def struct_0x2e02a614(self):
        return (
            'id' / Int32ul,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'))

    @constructor(0xef3a6acd, 'channel_full_layer122')
    def struct_0xef3a6acd(self):
        return Struct(
            'sname' / Computed('channel_full_layer122'),
            'signature' / Hex(Const(0xef3a6acd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()))

    @constructor(0xf0e6672a, 'channel_full_layer121')
    def struct_0xf0e6672a(self):
        return Struct(
            'sname' / Computed('channel_full_layer121'),
            'signature' / Hex(Const(0xf0e6672a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul)

    @constructor(0x2d895c74, 'channel_full_layer110')
    def struct_0x2d895c74(self):
        return Struct(
            'sname' / Computed('channel_full_layer110'),
            'signature' / Hex(Const(0x2d895c74, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_view_stats=4096,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'pts' / Int32ul)

    @constructor(0x10916653, 'channel_full_layer103')
    def struct_0x10916653(self):
        return Struct(
            'sname' / Computed('channel_full_layer103'),
            'signature' / Hex(Const(0x10916653, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_view_stats=4096,
                                is_can_set_location=65536,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'pts' / Int32ul)

    @constructor(0x9882e516, 'channel_full_layer101')
    def struct_0x9882e516(self):
        return Struct(
            'sname' / Computed('channel_full_layer101'),
            'signature' / Hex(Const(0x9882e516, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_view_stats=4096,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_online_count, Int32ul),
            'pts' / Int32ul)

    @constructor(0x17f45fcf, 'channel_full_layer71')
    def struct_0x17f45fcf(self):
        return Struct(
            'sname' / Computed('channel_full_layer71'),
            'signature' / Hex(Const(0x17f45fcf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')))

    @constructor(0x76af5481, 'channel_full_layer72')
    def struct_0x76af5481(self):
        return Struct(
            'sname' / Computed('channel_full_layer72'),
            'signature' / Hex(Const(0x76af5481, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul))

    @constructor(0x97bee562, 'channel_full_layer52')
    def struct_0x97bee562(self):
        return Struct(
            'sname' / Computed('channel_full_layer52'),
            'signature' / Hex(Const(0x97bee562, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_important_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul))

    @constructor(0xc3d5512f, 'channel_full_layer67')
    def struct_0xc3d5512f(self):
        return Struct(
            'sname' / Computed('channel_full_layer67'),
            'signature' / Hex(Const(0xc3d5512f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul))

    @constructor(0x9e341ddf, 'channel_full_layer48')
    def struct_0x9e341ddf(self):
        return Struct(
            'sname' / Computed('channel_full_layer48'),
            'signature' / Hex(Const(0x9e341ddf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_important_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul))

    @constructor(0x0dc8c181, 'chat_full_layer122')
    def struct_0x0dc8c181(self):
        return Struct(
            'sname' / Computed('chat_full_layer122'),
            'signature' / Hex(Const(0x0dc8c181, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()))

    @constructor(0xf3474af6, 'chat_full_layer123')
    def struct_0xf3474af6(self):
        return Struct(
            'sname' / Computed('chat_full_layer123'),
            'signature' / Hex(Const(0xf3474af6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()))

    @constructor(0x7a7de4f7, 'channel_full_layer123')
    def struct_0x7a7de4f7(self):
        return Struct(
            'sname' / Computed('channel_full_layer123'),
            'signature' / Hex(Const(0x7a7de4f7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()))

    @constructor(0xf06c4018, 'chat_full_layer124')
    def struct_0xf06c4018(self):
        return Struct(
            'sname' / Computed('chat_full_layer124'),
            'signature' / Hex(Const(0xf06c4018, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x2548c037, 'channel_full_layer124')
    def struct_0x2548c037(self):
        return Struct(
            'sname' / Computed('channel_full_layer124'),
            'signature' / Hex(Const(0x2548c037, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')))

    @constructor(0x8a1e2983, 'chat_full_layer131')
    def struct_0x8a1e2983(self):
        return Struct(
            'sname' / Computed('chat_full_layer131'),
            'signature' / Hex(Const(0x8a1e2983, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')))

    @constructor(0x548c3f93, 'channel_full_layer131')
    def struct_0x548c3f93(self):
        return Struct(
            'sname' / Computed('channel_full_layer131'),
            'signature' / Hex(Const(0x548c3f93, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')))

    @constructor(0x49a0a5d9, 'chat_full_layer132')
    def struct_0x49a0a5d9(self):
        return Struct(
            'sname' / Computed('chat_full_layer132'),
            'signature' / Hex(Const(0x49a0a5d9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString))

    @constructor(0x2f532f3c, 'channel_full_layer132')
    def struct_0x2f532f3c(self):
        return Struct(
            'sname' / Computed('channel_full_layer132'),
            'signature' / Hex(Const(0x2f532f3c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int32ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString))

    @constructor(0x4dbdc099, 'chat_full_layer133')
    def struct_0x4dbdc099(self):
        return Struct(
            'sname' / Computed('chat_full_layer133'),
            'signature' / Hex(Const(0x4dbdc099, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536),
            'id' / Int64ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString))

    @constructor(0xe9b27a17, 'channel_full_layer133')
    def struct_0xe9b27a17(self):
        return Struct(
            'sname' / Computed('channel_full_layer133'),
            'signature' / Hex(Const(0xe9b27a17, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                is_can_set_location=65536,
                                has_scheduled=524288,
                                is_can_view_stats=1048576,
                                is_blocked=4194304,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_online_count=8192,
                                has_exported_invite=8388608,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_folder_id=2048,
                                has_linked_chat_id=16384,
                                has_location=32768,
                                has_slowmode_seconds=131072,
                                has_slowmode_next_send_date=262144,
                                has_stats_dc=4096,
                                has_call=2097152,
                                has_ttl_period=16777216,
                                has_pending_suggestions=33554432,
                                has_groupcall_default_join_as=67108864,
                                has_theme_emoticon=134217728),
            'id' / Int64ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'online_count' / If(this.flags.has_online_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int64ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'linked_chat_id' / If(this.flags.has_linked_chat_id, Int64ul),
            'location' / If(this.flags.has_location, self.channel_location_structures('location')),
            'slowmode_seconds' / If(this.flags.has_slowmode_seconds, Int32ul),
            'slowmode_next_send_date' / If(this.flags.has_slowmode_next_send_date, TTimestamp),
            'stats_dc' / If(this.flags.has_stats_dc, Int32ul),
            'pts' / Int32ul,
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'pending_suggestions' / If(this.flags.has_pending_suggestions, self.vector(TString, 'pending_suggestions')),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString))

    @constructor(0x1b7c9db3, 'chat_full_layer121')
    def struct_0x1b7c9db3(self):
        return Struct(
            'sname' / Computed('chat_full_layer121'),
            'signature' / Hex(Const(0x1b7c9db3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul))

    @constructor(0x22a235da, 'chat_full_layer98')
    def struct_0x22a235da(self):
        return Struct(
            'sname' / Computed('chat_full_layer98'),
            'signature' / Hex(Const(0x22a235da, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_chat_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64),
            'id' / Int32ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul))

    @constructor(0xedd2a791, 'chat_full_layer92')
    def struct_0xedd2a791(self):
        return Struct(
            'sname' / Computed('chat_full_layer92'),
            'signature' / Hex(Const(0xedd2a791, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_chat_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64),
            'id' / Int32ul,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul))

    @constructor(0x46a6ffb4, 'chat_full_layer135')
    def struct_0x46a6ffb4(self):
        return Struct(
            'sname' / Computed('chat_full_layer135'),
            'signature' / Hex(Const(0x46a6ffb4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_set_username=128,
                                has_scheduled=256,
                                has_chat_photo=4,
                                has_exported_invite=8192,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_call=4096,
                                has_ttl_period=16384,
                                has_groupcall_default_join_as=32768,
                                has_theme_emoticon=65536,
                                has_requests_pending=131072),
            'id' / Int64ul,
            'about' / TString,
            'participants' / self.chat_participants_structures('participants'),
            'chat_photo' / If(this.flags.has_chat_photo, self.photo_structures('chat_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / If(this.flags.has_exported_invite, self.exported_chat_invite_structures('exported_invite')),
            'bot_info' / If(this.flags.has_bot_info, self.vector(self.bot_info_structures('bot_info'), 'bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'call' / If(this.flags.has_call, self.struct_0xd8aa840f()),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'groupcall_default_join_as' / If(this.flags.has_groupcall_default_join_as, self.peer_structures('groupcall_default_join_as')),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'requests_pending' / If(this.flags.has_requests_pending, Int32ul),
            'recent_requesters' / If(this.flags.has_requests_pending, self.vector(Int64ul, 'recent_requesters')))

    @constructor(0xfab31aa3, 'channel_full_old')
    def struct_0xfab31aa3(self):
        return Struct(
            'sname' / Computed('channel_full_old'),
            'signature' / Hex(Const(0xfab31aa3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_important_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'))

    @constructor(0x95cb5f57, 'channel_full_layer70')
    def struct_0x95cb5f57(self):
        return Struct(
            'sname' / Computed('channel_full_layer70'),
            'signature' / Hex(Const(0x95cb5f57, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul))

    @constructor(0xcbb62890, 'channel_full_layer89')
    def struct_0xcbb62890(self):
        return Struct(
            'sname' / Computed('channel_full_layer89'),
            'signature' / Hex(Const(0xcbb62890, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_view_participants=8,
                                is_can_set_username=64,
                                is_can_set_stickers=128,
                                is_hidden_prehistory=1024,
                                has_participants_count=1,
                                has_admins_count=2,
                                has_kicked_count=4,
                                has_migrated_from_chat_id=16,
                                has_pinned_msg_id=32,
                                has_stickerset=256,
                                has_available_min_id=512,
                                has_call_msg_id=2048),
            'id' / Int32ul,
            'about' / TString,
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'admins_count' / If(this.flags.has_admins_count, Int32ul),
            'kicked_count' / If(this.flags.has_kicked_count, Int32ul),
            'banned_count' / If(this.flags.has_kicked_count, Int32ul),
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'chat_photo' / self.photo_structures('chat_photo'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'exported_invite' / self.exported_chat_invite_structures('exported_invite'),
            'bot_info' / self.vector(self.bot_info_structures('bot_info'), 'bot_info'),
            'migrated_from_chat_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'migrated_from_max_id' / If(this.flags.has_migrated_from_chat_id, Int32ul),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'stickerset' / If(this.flags.has_stickerset, self.sticker_set_structures('stickerset')),
            'available_min_id' / If(this.flags.has_available_min_id, Int32ul),
            'call_msg_id' / If(this.flags.has_call_msg_id, Int32ul))

    @structures
    def chat_full_structures(self, name):
        tag_map = {
            0x2633421b: LazyBound(self.struct_0x2633421b),
            0xc9d31138: LazyBound(self.struct_0xc9d31138),
            0x52d6806b: LazyBound(self.struct_0x52d6806b),
            0x9ff3b858: LazyBound(self.struct_0x9ff3b858),
            0xbbab348d: LazyBound(self.struct_0xbbab348d),
            0x44c054a7: LazyBound(self.struct_0x44c054a7),
            0x680b773c: LazyBound(self.struct_0x680b773c),
            0x723027bd: LazyBound(self.struct_0x723027bd),
            0x0f2bcb6f: LazyBound(self.struct_0x0f2bcb6f),
            0xf2355507: LazyBound(self.struct_0xf2355507),
            0xd18ee226: LazyBound(self.struct_0xd18ee226),
            0xea68a619: LazyBound(self.struct_0xea68a619),
            0xe13c3d20: LazyBound(self.struct_0xe13c3d20),
            0x56662e2e: LazyBound(self.struct_0x56662e2e),
            0x59cff963: LazyBound(self.struct_0x59cff963),
            0x1c87a71a: LazyBound(self.struct_0x1c87a71a),
            0x03648977: LazyBound(self.struct_0x03648977),
            0x2e02a614: LazyBound(self.struct_0x2e02a614),
            0xef3a6acd: LazyBound(self.struct_0xef3a6acd),
            0xf0e6672a: LazyBound(self.struct_0xf0e6672a),
            0x2d895c74: LazyBound(self.struct_0x2d895c74),
            0x10916653: LazyBound(self.struct_0x10916653),
            0x9882e516: LazyBound(self.struct_0x9882e516),
            0x17f45fcf: LazyBound(self.struct_0x17f45fcf),
            0x76af5481: LazyBound(self.struct_0x76af5481),
            0x97bee562: LazyBound(self.struct_0x97bee562),
            0xc3d5512f: LazyBound(self.struct_0xc3d5512f),
            0x9e341ddf: LazyBound(self.struct_0x9e341ddf),
            0x0dc8c181: LazyBound(self.struct_0x0dc8c181),
            0xf3474af6: LazyBound(self.struct_0xf3474af6),
            0x7a7de4f7: LazyBound(self.struct_0x7a7de4f7),
            0xf06c4018: LazyBound(self.struct_0xf06c4018),
            0x2548c037: LazyBound(self.struct_0x2548c037),
            0x8a1e2983: LazyBound(self.struct_0x8a1e2983),
            0x548c3f93: LazyBound(self.struct_0x548c3f93),
            0x49a0a5d9: LazyBound(self.struct_0x49a0a5d9),
            0x2f532f3c: LazyBound(self.struct_0x2f532f3c),
            0x4dbdc099: LazyBound(self.struct_0x4dbdc099),
            0xe9b27a17: LazyBound(self.struct_0xe9b27a17),
            0x1b7c9db3: LazyBound(self.struct_0x1b7c9db3),
            0x22a235da: LazyBound(self.struct_0x22a235da),
            0xedd2a791: LazyBound(self.struct_0xedd2a791),
            0x46a6ffb4: LazyBound(self.struct_0x46a6ffb4),
            0xfab31aa3: LazyBound(self.struct_0xfab31aa3),
            0x95cb5f57: LazyBound(self.struct_0x95cb5f57),
            0xcbb62890: LazyBound(self.struct_0xcbb62890)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5c9d3702, 'chat_invite')
    def struct_0x5c9d3702(self):
        return Struct(
            'sname' / Computed('chat_invite'),
            'signature' / Hex(Const(0x5c9d3702, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_channel=1,
                                is_broadcast=2,
                                is_public=4,
                                is_megagroup=8,
                                has_about=32,
                                is_request_needed=64,
                                is_verified=128,
                                is_scam=256,
                                is_fake=512,
                                is_can_refulfill_subscription=2048,
                                has_participants=16,
                                has_subscription_pricing=1024,
                                has_subscription_form_id=4096,
                                has_bot_verification=8192),
            'title' / TString,
            'about' / If(this.flags.has_about, TString),
            'photo' / self.photo_structures('photo'),
            'participants_count' / Int32ul,
            'participants' / If(this.flags.has_participants, self.vector(self.user_structures('participants'), 'participants')),
            'color' / Int32ul,
            'subscription_pricing' / If(this.flags.has_subscription_pricing, self.struct_0x05416d58()),
            'subscription_form_id' / If(this.flags.has_subscription_form_id, Int64ul),
            'bot_verification' / If(this.flags.has_bot_verification, self.struct_0xf93cd45c()))

    @constructor(0xfe65389d, 'chat_invite_layer195')
    def struct_0xfe65389d(self):
        return Struct(
            'sname' / Computed('chat_invite_layer195'),
            'signature' / Hex(Const(0xfe65389d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_channel=1,
                                is_broadcast=2,
                                is_public=4,
                                is_megagroup=8,
                                has_about=32,
                                is_request_needed=64,
                                is_verified=128,
                                is_scam=256,
                                is_fake=512,
                                is_can_refulfill_subscription=2048,
                                has_participants=16,
                                has_subscription_pricing=1024,
                                has_subscription_form_id=4096),
            'title' / TString,
            'about' / If(this.flags.has_about, TString),
            'photo' / self.photo_structures('photo'),
            'participants_count' / Int32ul,
            'participants' / If(this.flags.has_participants, self.vector(self.user_structures('participants'), 'participants')),
            'color' / Int32ul,
            'subscription_pricing' / If(this.flags.has_subscription_pricing, self.struct_0x05416d58()),
            'subscription_form_id' / If(this.flags.has_subscription_form_id, Int64ul))

    @constructor(0xcde0ec40, 'chat_invite_layer185')
    def struct_0xcde0ec40(self):
        return Struct(
            'sname' / Computed('chat_invite_layer185'),
            'signature' / Hex(Const(0xcde0ec40, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_channel=1,
                                is_broadcast=2,
                                is_public=4,
                                is_megagroup=8,
                                has_about=32,
                                is_request_needed=64,
                                is_verified=128,
                                is_scam=256,
                                is_fake=512,
                                has_participants=16),
            'title' / TString,
            'about' / If(this.flags.has_about, TString),
            'photo' / self.photo_structures('photo'),
            'participants_count' / Int32ul,
            'participants' / If(this.flags.has_participants, self.vector(self.user_structures('participants'), 'participants')),
            'color' / Int32ul)

    @constructor(0x300c44c1, 'chat_invite_layer165')
    def struct_0x300c44c1(self):
        return Struct(
            'sname' / Computed('chat_invite_layer165'),
            'signature' / Hex(Const(0x300c44c1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_channel=1,
                                is_broadcast=2,
                                is_public=4,
                                is_megagroup=8,
                                has_about=32,
                                is_request_needed=64,
                                is_verified=128,
                                is_scam=256,
                                is_fake=512,
                                has_participants=16,
                                has_color=1024),
            'title' / TString,
            'about' / If(this.flags.has_about, TString),
            'photo' / self.photo_structures('photo'),
            'participants_count' / Int32ul,
            'participants' / If(this.flags.has_participants, self.vector(self.user_structures('participants'), 'participants')),
            'color' / If(this.flags.has_color, Int32ul))

    @constructor(0x61695cb0, 'chat_invite_peek')
    def struct_0x61695cb0(self):
        return (
            'chat' / self.chat_structures('chat'),
            'expires' / Int32ul)

    @constructor(0x5a686d7c, 'chat_invite_already')
    def struct_0x5a686d7c(self):
        return ['chat' / self.chat_structures('chat')]

    @structures
    def chat_invite_structures(self, name):
        tag_map = {
            0x5c9d3702: LazyBound(self.struct_0x5c9d3702),
            0xfe65389d: LazyBound(self.struct_0xfe65389d),
            0xcde0ec40: LazyBound(self.struct_0xcde0ec40),
            0x300c44c1: LazyBound(self.struct_0x300c44c1),
            0x61695cb0: LazyBound(self.struct_0x61695cb0),
            0x5a686d7c: LazyBound(self.struct_0x5a686d7c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe2d6e436, 'chat_participant_admin_layer131')
    def struct_0xe2d6e436(self):
        return (
            'user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0xa0933f5b, 'chat_participant_admin')
    def struct_0xa0933f5b(self):
        return (
            'user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0xc8d7493e, 'chat_participant_layer131')
    def struct_0xc8d7493e(self):
        return (
            'user_id' / Int32ul,
            'inviter_id' / Int32ul,
            'date' / TTimestamp)

    @constructor(0xda13538a, 'chat_participant_creator_layer131')
    def struct_0xda13538a(self):
        return ['user_id' / Int32ul]

    @constructor(0xc02d4007, 'chat_participant')
    def struct_0xc02d4007(self):
        return (
            'user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0xe46bcee4, 'chat_participant_creator')
    def struct_0xe46bcee4(self):
        return ['user_id' / Int64ul]

    @structures
    def chat_participant_structures(self, name):
        tag_map = {
            0xe2d6e436: LazyBound(self.struct_0xe2d6e436),
            0xa0933f5b: LazyBound(self.struct_0xa0933f5b),
            0xc8d7493e: LazyBound(self.struct_0xc8d7493e),
            0xda13538a: LazyBound(self.struct_0xda13538a),
            0xc02d4007: LazyBound(self.struct_0xc02d4007),
            0xe46bcee4: LazyBound(self.struct_0xe46bcee4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfc900c2b, 'chat_participants_forbidden_layer131')
    def struct_0xfc900c2b(self):
        return Struct(
            'sname' / Computed('chat_participants_forbidden_layer131'),
            'signature' / Hex(Const(0xfc900c2b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_self_participant=1),
            'chat_id' / Int32ul,
            'self_participant' / If(this.flags.has_self_participant, self.chat_participant_structures('self_participant')))

    @constructor(0x3f460fed, 'chat_participants_layer131')
    def struct_0x3f460fed(self):
        return (
            'chat_id' / Int32ul,
            'participants' / self.vector(self.chat_participant_structures('participants'), 'participants'),
            'version' / Int32ul)

    @constructor(0x8763d3e1, 'chat_participants_forbidden')
    def struct_0x8763d3e1(self):
        return Struct(
            'sname' / Computed('chat_participants_forbidden'),
            'signature' / Hex(Const(0x8763d3e1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_self_participant=1),
            'chat_id' / Int64ul,
            'self_participant' / If(this.flags.has_self_participant, self.chat_participant_structures('self_participant')))

    @constructor(0x3cbc93f8, 'chat_participants')
    def struct_0x3cbc93f8(self):
        return (
            'chat_id' / Int64ul,
            'participants' / self.vector(self.chat_participant_structures('participants'), 'participants'),
            'version' / Int32ul)

    @constructor(0x7841b415, 'chat_participants_old')
    def struct_0x7841b415(self):
        return (
            'chat_id' / Int32ul,
            'admin_id' / Int32ul,
            'participants' / self.vector(self.chat_participant_structures('participants'), 'participants'),
            'version' / Int32ul)

    @constructor(0x0fd2bb8a, 'chat_participants_forbidden_old')
    def struct_0x0fd2bb8a(self):
        return ['chat_id' / Int32ul]

    @structures
    def chat_participants_structures(self, name):
        tag_map = {
            0xfc900c2b: LazyBound(self.struct_0xfc900c2b),
            0x3f460fed: LazyBound(self.struct_0x3f460fed),
            0x8763d3e1: LazyBound(self.struct_0x8763d3e1),
            0x3cbc93f8: LazyBound(self.struct_0x3cbc93f8),
            0x7841b415: LazyBound(self.struct_0x7841b415),
            0x0fd2bb8a: LazyBound(self.struct_0x0fd2bb8a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1c6e1c11, 'chat_photo')
    def struct_0x1c6e1c11(self):
        return Struct(
            'sname' / Computed('chat_photo'),
            'signature' / Hex(Const(0x1c6e1c11, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1,
                                has_stripped_thumb=2),
            'photo_id' / Int64ul,
            'stripped_thumb' / If(this.flags.has_stripped_thumb, TBytes),
            'dc_id' / Int32ul)

    @constructor(0x475cdbd5, 'chat_photo_layer115')
    def struct_0x475cdbd5(self):
        return (
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'dc_id' / Int32ul)

    @constructor(0x37c1011c, 'chat_photo_empty')
    def struct_0x37c1011c(self):
        return []

    @constructor(0x6153276a, 'chat_photo_layer97')
    def struct_0x6153276a(self):
        return (
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'))

    @constructor(0xd20b9f3c, 'chat_photo_layer126')
    def struct_0xd20b9f3c(self):
        return Struct(
            'sname' / Computed('chat_photo_layer126'),
            'signature' / Hex(Const(0xd20b9f3c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1),
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'dc_id' / Int32ul)

    @constructor(0x4790ee05, 'chat_photo_layer127')
    def struct_0x4790ee05(self):
        return Struct(
            'sname' / Computed('chat_photo_layer127'),
            'signature' / Hex(Const(0x4790ee05, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1,
                                has_stripped_thumb=2),
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'stripped_thumb' / If(this.flags.has_stripped_thumb, TBytes),
            'dc_id' / Int32ul)

    @structures
    def chat_photo_structures(self, name):
        tag_map = {
            0x1c6e1c11: LazyBound(self.struct_0x1c6e1c11),
            0x475cdbd5: LazyBound(self.struct_0x475cdbd5),
            0x37c1011c: LazyBound(self.struct_0x37c1011c),
            0x6153276a: LazyBound(self.struct_0x6153276a),
            0xd20b9f3c: LazyBound(self.struct_0xd20b9f3c),
            0x4790ee05: LazyBound(self.struct_0x4790ee05)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x661d4037, 'chat_reactions_some')
    def struct_0x661d4037(self):
        return ['reactions' / self.vector(self.reaction_structures('reactions'), 'reactions')]

    @constructor(0xeafc32bc, 'chat_reactions_none')
    def struct_0xeafc32bc(self):
        return []

    @constructor(0x52928bca, 'chat_reactions_all')
    def struct_0x52928bca(self):
        return Struct(
            'sname' / Computed('chat_reactions_all'),
            'signature' / Hex(Const(0x52928bca, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_allow_custom=1))

    @structures
    def chat_reactions_structures(self, name):
        tag_map = {
            0x661d4037: LazyBound(self.struct_0x661d4037),
            0xeafc32bc: LazyBound(self.struct_0xeafc32bc),
            0x52928bca: LazyBound(self.struct_0x52928bca)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2d85832c, 'channel_forbidden_layer52')
    def struct_0x2d85832c(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'title' / TString)

    @constructor(0x9ba2d800, 'chat_empty_layer131')
    def struct_0x9ba2d800(self):
        return ['id' / Int32ul]

    @constructor(0x07328bdb, 'chat_forbidden_layer131')
    def struct_0x07328bdb(self):
        return (
            'id' / Int32ul,
            'title' / TString)

    @constructor(0x4df30834, 'channel_layer104')
    def struct_0x4df30834(self):
        return Struct(
            'sname' / Computed('channel_layer104'),
            'signature' / Hex(Const(0x4df30834, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul))

    @constructor(0xe00998b7, 'channel')
    def struct_0xe00998b7(self):
        return Struct(
            'sname' / Computed('channel'),
            'signature' / Hex(Const(0xe00998b7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 is_signature_profiles=4096,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256,
                                 has_emoji_status=512,
                                 has_level=1024,
                                 has_subscription_until_date=2048,
                                 has_bot_verification_icon=8192),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'emoji_status' / If(this.flags2.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'level' / If(this.flags2.has_level, Int32ul),
            'subscription_until_date' / If(this.flags2.has_subscription_until_date, TTimestamp),
            'bot_verification_icon' / If(this.flags2.has_bot_verification_icon, Int64ul))

    @constructor(0x46aeac06, 'channel_layer196_1')
    def struct_0x46aeac06(self):
        return Struct(
            'sname' / Computed('channel_layer196_1'),
            'signature' / Hex(Const(0x46aeac06, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 is_signature_profiles=4096,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256,
                                 has_emoji_status=512,
                                 has_level=1024,
                                 has_subscription_until_date=2048,
                                 has_bot_verification_icon=8192),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'emoji_status' / If(this.flags2.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'level' / If(this.flags2.has_level, Int32ul),
            'subscription_until_date' / If(this.flags2.has_subscription_until_date, TTimestamp),
            'bot_verification_icon' / If(this.flags2.has_bot_verification_icon, Int64ul))

    @constructor(0xfe4478bd, 'channel_layer195')
    def struct_0xfe4478bd(self):
        return Struct(
            'sname' / Computed('channel_layer195'),
            'signature' / Hex(Const(0xfe4478bd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 is_signature_profiles=4096,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256,
                                 has_emoji_status=512,
                                 has_level=1024,
                                 has_subscription_until_date=2048),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'emoji_status' / If(this.flags2.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'level' / If(this.flags2.has_level, Int32ul),
            'subscription_until_date' / If(this.flags2.has_subscription_until_date, TTimestamp))

    @constructor(0x0aadfc8f, 'channel_layer185')
    def struct_0x0aadfc8f(self):
        return Struct(
            'sname' / Computed('channel_layer185'),
            'signature' / Hex(Const(0x0aadfc8f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256,
                                 has_emoji_status=512,
                                 has_level=1024),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'emoji_status' / If(this.flags2.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'level' / If(this.flags2.has_level, Int32ul))

    @constructor(0x0db12acb, 'channel_layer167_3')
    def struct_0x0db12acb(self):
        return Struct(
            'sname' / Computed('channel_layer167_3'),
            'signature' / Hex(Const(0x0db12acb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256,
                                 has_emoji_status=512),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'emoji_status' / If(this.flags2.has_emoji_status, self.emoji_status_structures('emoji_status')))

    @constructor(0xa636a3e2, 'channel_layer167_2')
    def struct_0xa636a3e2(self):
        return Struct(
            'sname' / Computed('channel_layer167_2'),
            'signature' / Hex(Const(0xa636a3e2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128,
                                 has_profile_color=256),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()))

    @constructor(0x8e87ccd8, 'channel_layer167')
    def struct_0x8e87ccd8(self):
        return Struct(
            'sname' / Computed('channel_layer167'),
            'signature' / Hex(Const(0x8e87ccd8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=128),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()))

    @constructor(0x1981ea7e, 'channel_layer166')
    def struct_0x1981ea7e(self):
        return Struct(
            'sname' / Computed('channel_layer166'),
            'signature' / Hex(Const(0x1981ea7e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16,
                                 has_color=64,
                                 has_background_emoji_id=32),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, Int32ul),
            'background_emoji_id' / If(this.flags2.has_background_emoji_id, Int64ul))

    @constructor(0x94f592db, 'channel_layer165')
    def struct_0x94f592db(self):
        return Struct(
            'sname' / Computed('channel_layer165'),
            'signature' / Hex(Const(0x94f592db, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 is_stories_unavailable=8,
                                 has_usernames=1,
                                 has_stories_max_id=16),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul))

    @constructor(0x450b7115, 'channel_layer77')
    def struct_0x450b7115(self):
        return Struct(
            'sname' / Computed('channel_layer77'),
            'signature' / Hex(Const(0x450b7115, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights_layer92=16384,
                                has_banned_rights_layer92=32768,
                                has_participants_count=131072),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'admin_rights_layer92' / If(this.flags.has_admin_rights_layer92, self.struct_0x5d7ceba5()),
            'banned_rights_layer92' / If(this.flags.has_banned_rights_layer92, self.struct_0x58cf4249()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul))

    @constructor(0x29562865, 'chat_empty')
    def struct_0x29562865(self):
        return ['id' / Int64ul]

    @constructor(0x41cbf256, 'chat')
    def struct_0x41cbf256(self):
        return Struct(
            'sname' / Computed('chat'),
            'signature' / Hex(Const(0x41cbf256, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_deactivated=32,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_noforwards=33554432,
                                has_migrated_to=64,
                                has_admin_rights=16384,
                                has_default_banned_rights=262144),
            'id' / Int64ul,
            'title' / TString,
            'photo' / self.chat_photo_structures('photo'),
            'participants_count' / Int32ul,
            'date' / TTimestamp,
            'version' / Int32ul,
            'migrated_to' / If(this.flags.has_migrated_to, self.input_channel_structures('migrated_to')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()))

    @constructor(0xd31a961e, 'channel_layer131')
    def struct_0xd31a961e(self):
        return Struct(
            'sname' / Computed('channel_layer131'),
            'signature' / Hex(Const(0xd31a961e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul))

    @constructor(0x4b1b7506, 'channel_layer48')
    def struct_0x4b1b7506(self):
        return Struct(
            'sname' / Computed('channel_layer48'),
            'signature' / Hex(Const(0x4b1b7506, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_moderator=16,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                has_username=64),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString))

    @constructor(0x678e9587, 'channel_old')
    def struct_0x678e9587(self):
        return Struct(
            'sname' / Computed('channel_old'),
            'signature' / Hex(Const(0x678e9587, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_moderator=16,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_explicit_content=512,
                                has_username=64),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul)

    @constructor(0x0cb44b1c, 'channel_layer72')
    def struct_0x0cb44b1c(self):
        return Struct(
            'sname' / Computed('channel_layer72'),
            'signature' / Hex(Const(0x0cb44b1c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights_layer92=16384,
                                has_banned_rights_layer92=32768),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'admin_rights_layer92' / If(this.flags.has_admin_rights_layer92, self.struct_0x5d7ceba5()),
            'banned_rights_layer92' / If(this.flags.has_banned_rights_layer92, self.struct_0x58cf4249()))

    @constructor(0x8537784f, 'channel_forbidden_layer67')
    def struct_0x8537784f(self):
        return Struct(
            'sname' / Computed('channel_forbidden_layer67'),
            'signature' / Hex(Const(0x8537784f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_broadcast=32,
                                is_megagroup=256),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'title' / TString)

    @constructor(0xd91cdd54, 'chat_layer92')
    def struct_0xd91cdd54(self):
        return Struct(
            'sname' / Computed('chat_layer92'),
            'signature' / Hex(Const(0xd91cdd54, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_deactivated=32,
                                has_migrated_to=64),
            'id' / Int32ul,
            'title' / TString,
            'photo' / self.chat_photo_structures('photo'),
            'participants_count' / Int32ul,
            'date' / TTimestamp,
            'version' / Int32ul,
            'migrated_to' / If(this.flags.has_migrated_to, self.input_channel_structures('migrated_to')))

    @constructor(0xc88974ac, 'channel_layer92')
    def struct_0xc88974ac(self):
        return Struct(
            'sname' / Computed('channel_layer92'),
            'signature' / Hex(Const(0xc88974ac, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights_layer92=16384,
                                has_banned_rights_layer92=32768,
                                has_participants_count=131072),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'admin_rights_layer92' / If(this.flags.has_admin_rights_layer92, self.struct_0x5d7ceba5()),
            'banned_rights_layer92' / If(this.flags.has_banned_rights_layer92, self.struct_0x58cf4249()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul))

    @constructor(0x17d493d5, 'channel_forbidden')
    def struct_0x17d493d5(self):
        return Struct(
            'sname' / Computed('channel_forbidden'),
            'signature' / Hex(Const(0x17d493d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_broadcast=32,
                                is_megagroup=256,
                                has_until_date=65536),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'until_date' / If(this.flags.has_until_date, TTimestamp))

    @constructor(0x3bda1bde, 'chat_layer131')
    def struct_0x3bda1bde(self):
        return Struct(
            'sname' / Computed('chat_layer131'),
            'signature' / Hex(Const(0x3bda1bde, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_deactivated=32,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                has_migrated_to=64,
                                has_admin_rights=16384,
                                has_default_banned_rights=262144),
            'id' / Int32ul,
            'title' / TString,
            'photo' / self.chat_photo_structures('photo'),
            'participants_count' / Int32ul,
            'date' / TTimestamp,
            'version' / Int32ul,
            'migrated_to' / If(this.flags.has_migrated_to, self.input_channel_structures('migrated_to')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()))

    @constructor(0x289da732, 'channel_forbidden_layer131')
    def struct_0x289da732(self):
        return Struct(
            'sname' / Computed('channel_forbidden_layer131'),
            'signature' / Hex(Const(0x289da732, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_broadcast=32,
                                is_megagroup=256,
                                has_until_date=65536),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'until_date' / If(this.flags.has_until_date, TTimestamp))

    @constructor(0x7312bc48, 'chat_old2')
    def struct_0x7312bc48(self):
        return Struct(
            'sname' / Computed('chat_old2'),
            'signature' / Hex(Const(0x7312bc48, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_deactivated=32),
            'id' / Int32ul,
            'title' / TString,
            'photo' / self.chat_photo_structures('photo'),
            'participants_count' / Int32ul,
            'date' / TTimestamp,
            'version' / Int32ul)

    @constructor(0xa14dca52, 'channel_layer67')
    def struct_0xa14dca52(self):
        return Struct(
            'sname' / Computed('channel_layer67'),
            'signature' / Hex(Const(0xa14dca52, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_kicked=2,
                                is_left=4,
                                is_moderator=16,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                has_access_hash=8192,
                                has_username=64),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'version' / Int32ul,
            'restriction_reason' / If(this.flags.is_restricted, TString))

    @constructor(0x83259464, 'channel_layer161')
    def struct_0x83259464(self):
        return Struct(
            'sname' / Computed('channel_layer161'),
            'signature' / Hex(Const(0x83259464, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'flags2' / FlagsEnum(Int32ul,
                                 is_stories_hidden=2,
                                 is_stories_hidden_min=4,
                                 has_usernames=1),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')))

    @constructor(0x8261ac61, 'channel_layer147')
    def struct_0x8261ac61(self):
        return Struct(
            'sname' / Computed('channel_layer147'),
            'signature' / Hex(Const(0x8261ac61, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_left=4,
                                is_broadcast=32,
                                is_verified=128,
                                is_megagroup=256,
                                is_restricted=512,
                                is_signatures=2048,
                                is_min=4096,
                                is_scam=524288,
                                has_link=1048576,
                                has_geo=2097152,
                                is_slowmode_enabled=4194304,
                                is_call_active=8388608,
                                is_call_not_empty=16777216,
                                is_fake=33554432,
                                is_gigagroup=67108864,
                                is_noforwards=134217728,
                                is_join_to_send=268435456,
                                is_join_request=536870912,
                                is_forum=1073741824,
                                has_access_hash=8192,
                                has_username=64,
                                has_admin_rights=16384,
                                has_banned_rights=32768,
                                has_default_banned_rights=262144,
                                has_participants_count=131072),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'title' / TString,
            'username' / If(this.flags.has_username, TString),
            'photo' / self.chat_photo_structures('photo'),
            'date' / TTimestamp,
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'admin_rights' / If(this.flags.has_admin_rights, self.struct_0x5fb224d5()),
            'banned_rights' / If(this.flags.has_banned_rights, self.struct_0x9f120418()),
            'default_banned_rights' / If(this.flags.has_default_banned_rights, self.struct_0x9f120418()),
            'participants_count' / If(this.flags.has_participants_count, Int32ul))

    @constructor(0xfb0ccc41, 'chat_forbidden_old')
    def struct_0xfb0ccc41(self):
        return (
            'id' / Int32ul,
            'title' / TString,
            'date' / TTimestamp)

    @constructor(0x6e9c9bc7, 'chat_old')
    def struct_0x6e9c9bc7(self):
        return (
            'id' / Int32ul,
            'title' / TString,
            'photo' / self.chat_photo_structures('photo'),
            'participants_count' / Int32ul,
            'date' / TTimestamp,
            'left' / TBool,
            'version' / Int32ul)

    @constructor(0x6592a1a7, 'chat_forbidden')
    def struct_0x6592a1a7(self):
        return (
            'id' / Int64ul,
            'title' / TString)

    @structures
    def chat_structures(self, name):
        tag_map = {
            0x2d85832c: LazyBound(self.struct_0x2d85832c),
            0x9ba2d800: LazyBound(self.struct_0x9ba2d800),
            0x07328bdb: LazyBound(self.struct_0x07328bdb),
            0x4df30834: LazyBound(self.struct_0x4df30834),
            0xe00998b7: LazyBound(self.struct_0xe00998b7),
            0x46aeac06: LazyBound(self.struct_0x46aeac06),
            0xfe4478bd: LazyBound(self.struct_0xfe4478bd),
            0x0aadfc8f: LazyBound(self.struct_0x0aadfc8f),
            0x0db12acb: LazyBound(self.struct_0x0db12acb),
            0xa636a3e2: LazyBound(self.struct_0xa636a3e2),
            0x8e87ccd8: LazyBound(self.struct_0x8e87ccd8),
            0x1981ea7e: LazyBound(self.struct_0x1981ea7e),
            0x94f592db: LazyBound(self.struct_0x94f592db),
            0x450b7115: LazyBound(self.struct_0x450b7115),
            0x29562865: LazyBound(self.struct_0x29562865),
            0x41cbf256: LazyBound(self.struct_0x41cbf256),
            0xd31a961e: LazyBound(self.struct_0xd31a961e),
            0x4b1b7506: LazyBound(self.struct_0x4b1b7506),
            0x678e9587: LazyBound(self.struct_0x678e9587),
            0x0cb44b1c: LazyBound(self.struct_0x0cb44b1c),
            0x8537784f: LazyBound(self.struct_0x8537784f),
            0xd91cdd54: LazyBound(self.struct_0xd91cdd54),
            0xc88974ac: LazyBound(self.struct_0xc88974ac),
            0x17d493d5: LazyBound(self.struct_0x17d493d5),
            0x3bda1bde: LazyBound(self.struct_0x3bda1bde),
            0x289da732: LazyBound(self.struct_0x289da732),
            0x7312bc48: LazyBound(self.struct_0x7312bc48),
            0xa14dca52: LazyBound(self.struct_0xa14dca52),
            0x83259464: LazyBound(self.struct_0x83259464),
            0x8261ac61: LazyBound(self.struct_0x8261ac61),
            0xfb0ccc41: LazyBound(self.struct_0xfb0ccc41),
            0x6e9c9bc7: LazyBound(self.struct_0x6e9c9bc7),
            0x6592a1a7: LazyBound(self.struct_0x6592a1a7)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfa87f659, 'chatlists_chatlist_invite_already')
    def struct_0xfa87f659(self):
        return (
            'filter_id' / Int32ul,
            'missing_peers' / self.vector(self.peer_structures('missing_peers'), 'missing_peers'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x1dcd839d, 'chatlists_chatlist_invite')
    def struct_0x1dcd839d(self):
        return Struct(
            'sname' / Computed('chatlists_chatlist_invite'),
            'signature' / Hex(Const(0x1dcd839d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_emoticon=1),
            'title' / TString,
            'emoticon' / If(this.flags.has_emoticon, TString),
            'peers' / self.vector(self.peer_structures('peers'), 'peers'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def chatlist_chatlist_invite_structures(self, name):
        tag_map = {
            0xfa87f659: LazyBound(self.struct_0xfa87f659),
            0x1dcd839d: LazyBound(self.struct_0x1dcd839d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfeedd3ad, 'contact_link_none')
    def struct_0xfeedd3ad(self):
        return []

    @constructor(0xd502c2d0, 'contact_link_contact')
    def struct_0xd502c2d0(self):
        return []

    @constructor(0x5f4f9247, 'contact_link_unknown')
    def struct_0x5f4f9247(self):
        return []

    @structures
    def contact_link_layer101_structures(self, name):
        tag_map = {
            0xfeedd3ad: LazyBound(self.struct_0xfeedd3ad),
            0xd502c2d0: LazyBound(self.struct_0xd502c2d0),
            0x5f4f9247: LazyBound(self.struct_0x5f4f9247)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x0ade1591, 'contacts_blocked')
    def struct_0x0ade1591(self):
        return (
            'blocked' / self.vector(self.struct_0xe8fd8014(), 'blocked'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xe1664194, 'contacts_blocked_slice')
    def struct_0xe1664194(self):
        return (
            'count' / Int32ul,
            'blocked' / self.vector(self.struct_0xe8fd8014(), 'blocked'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def contacts_blocked_structures(self, name):
        tag_map = {
            0x0ade1591: LazyBound(self.struct_0x0ade1591),
            0xe1664194: LazyBound(self.struct_0xe1664194)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb74ba9d2, 'contacts_contacts_not_modified')
    def struct_0xb74ba9d2(self):
        return []

    @constructor(0xeae87e42, 'contacts_contacts')
    def struct_0xeae87e42(self):
        return (
            'contacts' / self.vector(self.struct_0x145ade0b(), 'contacts'),
            'saved_count' / Int32ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def contacts_contacts_structures(self, name):
        tag_map = {
            0xb74ba9d2: LazyBound(self.struct_0xb74ba9d2),
            0xeae87e42: LazyBound(self.struct_0xeae87e42)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x70b772a8, 'contacts_top_peers')
    def struct_0x70b772a8(self):
        return (
            'categories' / self.vector(self.struct_0xfb834291(), 'categories'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb52c939d, 'contacts_top_peers_disabled')
    def struct_0xb52c939d(self):
        return []

    @constructor(0xde266ef5, 'contacts_top_peers_not_modified')
    def struct_0xde266ef5(self):
        return []

    @structures
    def contacts_top_peers_structures(self, name):
        tag_map = {
            0x70b772a8: LazyBound(self.struct_0x70b772a8),
            0xb52c939d: LazyBound(self.struct_0xb52c939d),
            0xde266ef5: LazyBound(self.struct_0xde266ef5)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa1733aec, 'decrypted_message_action_set_message_ttl')
    def struct_0xa1733aec(self):
        return ['ttl_seconds' / Int32ul]

    @constructor(0xf3048883, 'decrypted_message_action_notify_layer')
    def struct_0xf3048883(self):
        return ['layer' / Int32ul]

    @constructor(0x65614304, 'decrypted_message_action_delete_messages')
    def struct_0x65614304(self):
        return ['random_ids' / self.vector(Int64ul, 'random_ids')]

    @constructor(0xec2e0b9b, 'decrypted_message_action_commit_key')
    def struct_0xec2e0b9b(self):
        return (
            'exchange_id' / Int64ul,
            'key_fingerprint' / Int64ul)

    @constructor(0xdd05ec6b, 'decrypted_message_action_abort_key')
    def struct_0xdd05ec6b(self):
        return ['exchange_id' / Int64ul]

    @constructor(0x6719e45c, 'decrypted_message_action_flush_history')
    def struct_0x6719e45c(self):
        return []

    @constructor(0xccb27641, 'decrypted_message_action_typing')
    def struct_0xccb27641(self):
        return ['action' / self.send_message_action_structures('action')]

    @constructor(0x6fe1735b, 'decrypted_message_action_accept_key')
    def struct_0x6fe1735b(self):
        return (
            'exchange_id' / Int64ul,
            'g_b' / TBytes,
            'key_fingerprint' / Int64ul)

    @constructor(0x0c4f40be, 'decrypted_message_action_read_messages')
    def struct_0x0c4f40be(self):
        return ['random_ids' / self.vector(Int64ul, 'random_ids')]

    @constructor(0x511110b0, 'decrypted_message_action_resend')
    def struct_0x511110b0(self):
        return (
            'start_seq_no' / Int32ul,
            'end_seq_no' / Int32ul)

    @constructor(0xf3c9611b, 'decrypted_message_action_request_key')
    def struct_0xf3c9611b(self):
        return (
            'exchange_id' / Int64ul,
            'g_a' / TBytes)

    @constructor(0x8ac1f475, 'decrypted_message_action_screenshot_messages')
    def struct_0x8ac1f475(self):
        return ['random_ids' / self.vector(Int64ul, 'random_ids')]

    @constructor(0xa82fdd63, 'decrypted_message_action_noop')
    def struct_0xa82fdd63(self):
        return []

    @structures
    def decrypted_message_action_structures(self, name):
        tag_map = {
            0xa1733aec: LazyBound(self.struct_0xa1733aec),
            0xf3048883: LazyBound(self.struct_0xf3048883),
            0x65614304: LazyBound(self.struct_0x65614304),
            0xec2e0b9b: LazyBound(self.struct_0xec2e0b9b),
            0xdd05ec6b: LazyBound(self.struct_0xdd05ec6b),
            0x6719e45c: LazyBound(self.struct_0x6719e45c),
            0xccb27641: LazyBound(self.struct_0xccb27641),
            0x6fe1735b: LazyBound(self.struct_0x6fe1735b),
            0x0c4f40be: LazyBound(self.struct_0x0c4f40be),
            0x511110b0: LazyBound(self.struct_0x511110b0),
            0xf3c9611b: LazyBound(self.struct_0xf3c9611b),
            0x8ac1f475: LazyBound(self.struct_0x8ac1f475),
            0xa82fdd63: LazyBound(self.struct_0xa82fdd63)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x57e0a9cb, 'decrypted_message_media_audio')
    def struct_0x57e0a9cb(self):
        return (
            'duration' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x35480a59, 'decrypted_message_media_geo_point')
    def struct_0x35480a59(self):
        return (
            'lat' / Double,
            'long' / Double)

    @constructor(0x588a0a97, 'decrypted_message_media_contact')
    def struct_0x588a0a97(self):
        return (
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'user_id' / Int32ul)

    @constructor(0x089f5c4a, 'decrypted_message_media_empty')
    def struct_0x089f5c4a(self):
        return []

    @constructor(0x6abd9782, 'decrypted_message_media_document')
    def struct_0x6abd9782(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'mime_type' / TString,
            'size' / Int64ul,
            'key' / TBytes,
            'iv' / TBytes,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'),
            'caption' / TString)

    @constructor(0x7afe8ae2, 'decrypted_message_media_document_layer101')
    def struct_0x7afe8ae2(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'),
            'caption' / TString)

    @constructor(0xe50511d8, 'decrypted_message_media_web_page')
    def struct_0xe50511d8(self):
        return ['url' / TString]

    @constructor(0xf1fa8d78, 'decrypted_message_media_photo')
    def struct_0xf1fa8d78(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes,
            'caption' / TString)

    @constructor(0x970c8c0e, 'decrypted_message_media_video')
    def struct_0x970c8c0e(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'duration' / Int32ul,
            'mime_type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes,
            'caption' / TString)

    @constructor(0xb095434b, 'decrypted_message_media_document_layer8')
    def struct_0xb095434b(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'file_name' / TString,
            'mime_type' / TString,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x4cee6ef3, 'decrypted_message_media_video_layer8')
    def struct_0x4cee6ef3(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'duration' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x8a0df56f, 'decrypted_message_media_venue')
    def struct_0x8a0df56f(self):
        return (
            'lat' / Double,
            'long' / Double,
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString)

    @constructor(0xfa95b0dd, 'decrypted_message_media_external_document')
    def struct_0xfa95b0dd(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x524a415d, 'decrypted_message_media_video_layer17')
    def struct_0x524a415d(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'duration' / Int32ul,
            'mime_type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x6080758f, 'decrypted_message_media_audio_layer8')
    def struct_0x6080758f(self):
        return (
            'duration' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x32798a8c, 'decrypted_message_media_photo_layer8')
    def struct_0x32798a8c(self):
        return (
            'thumb' / TBytes,
            'thumb_w' / Int32ul,
            'thumb_h' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @structures
    def decrypted_message_media_structures(self, name):
        tag_map = {
            0x57e0a9cb: LazyBound(self.struct_0x57e0a9cb),
            0x35480a59: LazyBound(self.struct_0x35480a59),
            0x588a0a97: LazyBound(self.struct_0x588a0a97),
            0x089f5c4a: LazyBound(self.struct_0x089f5c4a),
            0x6abd9782: LazyBound(self.struct_0x6abd9782),
            0x7afe8ae2: LazyBound(self.struct_0x7afe8ae2),
            0xe50511d8: LazyBound(self.struct_0xe50511d8),
            0xf1fa8d78: LazyBound(self.struct_0xf1fa8d78),
            0x970c8c0e: LazyBound(self.struct_0x970c8c0e),
            0xb095434b: LazyBound(self.struct_0xb095434b),
            0x4cee6ef3: LazyBound(self.struct_0x4cee6ef3),
            0x8a0df56f: LazyBound(self.struct_0x8a0df56f),
            0xfa95b0dd: LazyBound(self.struct_0xfa95b0dd),
            0x524a415d: LazyBound(self.struct_0x524a415d),
            0x6080758f: LazyBound(self.struct_0x6080758f),
            0x32798a8c: LazyBound(self.struct_0x32798a8c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x204d3878, 'decrypted_message_layer17')
    def struct_0x204d3878(self):
        return (
            'random_id' / Int64ul,
            'ttl' / Int32ul,
            'message' / TString,
            'media' / self.decrypted_message_media_structures('media'))

    @constructor(0x73164160, 'decrypted_message_service')
    def struct_0x73164160(self):
        return (
            'random_id' / Int64ul,
            'action' / self.decrypted_message_action_structures('action'))

    @constructor(0xaa48327d, 'decrypted_message_service_layer8')
    def struct_0xaa48327d(self):
        return (
            'random_id' / Int64ul,
            'random_bytes' / TBytes,
            'action' / self.decrypted_message_action_structures('action'))

    @constructor(0x1f814f1f, 'decrypted_message_layer8')
    def struct_0x1f814f1f(self):
        return (
            'random_id' / Int64ul,
            'random_bytes' / TBytes,
            'message' / TString,
            'media' / self.decrypted_message_media_structures('media'))

    @constructor(0x91cc4674, 'decrypted_message')
    def struct_0x91cc4674(self):
        return Struct(
            'sname' / Computed('decrypted_message'),
            'signature' / Hex(Const(0x91cc4674, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                has_media=512,
                                has_entities=128,
                                has_via_bot_name=2048,
                                has_reply_to_random_id=8,
                                has_grouped_id=131072),
            'random_id' / Int64ul,
            'ttl' / Int32ul,
            'message' / TString,
            'media' / If(this.flags.has_media, self.decrypted_message_media_structures('media')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'via_bot_name' / If(this.flags.has_via_bot_name, TString),
            'reply_to_random_id' / If(this.flags.has_reply_to_random_id, Int64ul),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul))

    @constructor(0x36b091de, 'decrypted_message_layer45')
    def struct_0x36b091de(self):
        return Struct(
            'sname' / Computed('decrypted_message_layer45'),
            'signature' / Hex(Const(0x36b091de, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_media=512,
                                has_entities=128,
                                has_via_bot_name=2048,
                                has_reply_to_random_id=8),
            'random_id' / Int64ul,
            'ttl' / Int32ul,
            'message' / TString,
            'media' / If(this.flags.has_media, self.decrypted_message_media_structures('media')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'via_bot_name' / If(this.flags.has_via_bot_name, TString),
            'reply_to_random_id' / If(this.flags.has_reply_to_random_id, Int64ul))

    @structures
    def decrypted_message_structures(self, name):
        tag_map = {
            0x204d3878: LazyBound(self.struct_0x204d3878),
            0x73164160: LazyBound(self.struct_0x73164160),
            0xaa48327d: LazyBound(self.struct_0xaa48327d),
            0x1f814f1f: LazyBound(self.struct_0x1f814f1f),
            0x91cc4674: LazyBound(self.struct_0x91cc4674),
            0x36b091de: LazyBound(self.struct_0x36b091de)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x363293ae, 'dialog_filter_default')
    def struct_0x363293ae(self):
        return []

    @constructor(0xaa472651, 'dialog_filter')
    def struct_0xaa472651(self):
        return Struct(
            'sname' / Computed('dialog_filter'),
            'signature' / Hex(Const(0xaa472651, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_contacts=1,
                                is_non_contacts=2,
                                is_groups=4,
                                is_broadcasts=8,
                                is_bots=16,
                                is_exclude_muted=2048,
                                is_exclude_read=4096,
                                is_exclude_archived=8192,
                                is_title_noanimate=268435456,
                                has_emoticon=33554432,
                                has_color=134217728),
            'id' / Int32ul,
            'title' / self.struct_0x751f3146(),
            'emoticon' / If(this.flags.has_emoticon, TString),
            'color' / If(this.flags.has_color, Int32ul),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'),
            'exclude_peers' / self.vector(self.input_peer_structures('exclude_peers'), 'exclude_peers'))

    @constructor(0x5fb5523b, 'dialog_filter_layer195')
    def struct_0x5fb5523b(self):
        return Struct(
            'sname' / Computed('dialog_filter_layer195'),
            'signature' / Hex(Const(0x5fb5523b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_contacts=1,
                                is_non_contacts=2,
                                is_groups=4,
                                is_broadcasts=8,
                                is_bots=16,
                                is_exclude_muted=2048,
                                is_exclude_read=4096,
                                is_exclude_archived=8192,
                                has_emoticon=33554432,
                                has_color=134217728),
            'id' / Int32ul,
            'title_text' / TString,
            'emoticon' / If(this.flags.has_emoticon, TString),
            'color' / If(this.flags.has_color, Int32ul),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'),
            'exclude_peers' / self.vector(self.input_peer_structures('exclude_peers'), 'exclude_peers'))

    @constructor(0x7438f7e8, 'dialog_filter_layer175')
    def struct_0x7438f7e8(self):
        return Struct(
            'sname' / Computed('dialog_filter_layer175'),
            'signature' / Hex(Const(0x7438f7e8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_contacts=1,
                                is_non_contacts=2,
                                is_groups=4,
                                is_broadcasts=8,
                                is_bots=16,
                                is_exclude_muted=2048,
                                is_exclude_read=4096,
                                is_exclude_archived=8192,
                                has_emoticon=33554432),
            'id' / Int32ul,
            'title_text' / TString,
            'emoticon' / If(this.flags.has_emoticon, TString),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'),
            'exclude_peers' / self.vector(self.input_peer_structures('exclude_peers'), 'exclude_peers'))

    @constructor(0x96537bd7, 'dialog_filter_chatlist')
    def struct_0x96537bd7(self):
        return Struct(
            'sname' / Computed('dialog_filter_chatlist'),
            'signature' / Hex(Const(0x96537bd7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_my_invites=67108864,
                                has_emoticon=33554432,
                                has_color=134217728),
            'id' / Int32ul,
            'title' / self.struct_0x751f3146(),
            'emoticon' / If(this.flags.has_emoticon, TString),
            'color' / If(this.flags.has_color, Int32ul),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'))

    @constructor(0x9fe28ea4, 'dialog_filter_chatlist_layer195')
    def struct_0x9fe28ea4(self):
        return Struct(
            'sname' / Computed('dialog_filter_chatlist_layer195'),
            'signature' / Hex(Const(0x9fe28ea4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_my_invites=67108864,
                                has_emoticon=33554432,
                                has_color=134217728),
            'id' / Int32ul,
            'title_text' / TString,
            'emoticon' / If(this.flags.has_emoticon, TString),
            'color' / If(this.flags.has_color, Int32ul),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'))

    @constructor(0xd64a04a8, 'dialog_filter_chatlist_layer175')
    def struct_0xd64a04a8(self):
        return Struct(
            'sname' / Computed('dialog_filter_chatlist_layer175'),
            'signature' / Hex(Const(0xd64a04a8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_my_invites=67108864,
                                has_emoticon=33554432),
            'id' / Int32ul,
            'title_text' / TString,
            'emoticon' / If(this.flags.has_emoticon, TString),
            'pinned_peers' / self.vector(self.input_peer_structures('pinned_peers'), 'pinned_peers'),
            'include_peers' / self.vector(self.input_peer_structures('include_peers'), 'include_peers'))

    @structures
    def dialog_filter_structures(self, name):
        tag_map = {
            0x363293ae: LazyBound(self.struct_0x363293ae),
            0xaa472651: LazyBound(self.struct_0xaa472651),
            0x5fb5523b: LazyBound(self.struct_0x5fb5523b),
            0x7438f7e8: LazyBound(self.struct_0x7438f7e8),
            0x96537bd7: LazyBound(self.struct_0x96537bd7),
            0x9fe28ea4: LazyBound(self.struct_0x9fe28ea4),
            0xd64a04a8: LazyBound(self.struct_0xd64a04a8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe56dbf05, 'dialog_peer')
    def struct_0xe56dbf05(self):
        return ['peer' / self.peer_structures('peer')]

    @constructor(0x514519e2, 'dialog_peer_folder')
    def struct_0x514519e2(self):
        return ['folder_id' / Int32ul]

    @structures
    def dialog_peer_structures(self, name):
        tag_map = {
            0xe56dbf05: LazyBound(self.struct_0xe56dbf05),
            0x514519e2: LazyBound(self.struct_0x514519e2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd58a08c6, 'dialog')
    def struct_0xd58a08c6(self):
        return Struct(
            'sname' / Computed('dialog'),
            'signature' / Hex(Const(0xd58a08c6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=4,
                                is_unread_mark=8,
                                is_view_forum_as_messages=64,
                                has_pts=1,
                                has_draft=2,
                                has_folder_id=16,
                                has_ttl_period=32),
            'peer' / self.peer_structures('peer'),
            'top_message' / Int32ul,
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_mentions_count' / Int32ul,
            'unread_reactions_count' / Int32ul,
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'pts' / If(this.flags.has_pts, Int32ul),
            'draft' / If(this.flags.has_draft, self.draft_message_structures('draft')),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0xa8edd0f5, 'dialog_layer149')
    def struct_0xa8edd0f5(self):
        return Struct(
            'sname' / Computed('dialog_layer149'),
            'signature' / Hex(Const(0xa8edd0f5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=4,
                                is_unread_mark=8,
                                has_pts=1,
                                has_draft=2,
                                has_folder_id=16,
                                has_ttl_period=32),
            'peer' / self.peer_structures('peer'),
            'top_message' / Int32ul,
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_mentions_count' / Int32ul,
            'unread_reactions_count' / Int32ul,
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'pts' / If(this.flags.has_pts, Int32ul),
            'draft' / If(this.flags.has_draft, self.draft_message_structures('draft')),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x71bd134c, 'dialog_folder')
    def struct_0x71bd134c(self):
        return Struct(
            'sname' / Computed('dialog_folder'),
            'signature' / Hex(Const(0x71bd134c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=4),
            'folder' / self.struct_0xff544e65(),
            'peer' / self.peer_structures('peer'),
            'top_message' / Int32ul,
            'unread_muted_peers_count' / Int32ul,
            'unread_unmuted_peers_count' / Int32ul,
            'unread_muted_messages_count' / Int32ul,
            'unread_unmuted_messages_count' / Int32ul)

    @structures
    def dialog_structures(self, name):
        tag_map = {
            0xd58a08c6: LazyBound(self.struct_0xd58a08c6),
            0xa8edd0f5: LazyBound(self.struct_0xa8edd0f5),
            0x71bd134c: LazyBound(self.struct_0x71bd134c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3a556302, 'document_attribute_sticker_layer55')
    def struct_0x3a556302(self):
        return (
            'alt' / TString,
            'stickerset' / self.input_sticker_set_structures('stickerset'))

    @constructor(0x0ef02ce6, 'document_attribute_video_layer159')
    def struct_0x0ef02ce6(self):
        return Struct(
            'sname' / Computed('document_attribute_video_layer159'),
            'signature' / Hex(Const(0x0ef02ce6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_round_message=1,
                                is_supports_streaming=2),
            'duration' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0x051448e5, 'document_attribute_audio_old')
    def struct_0x051448e5(self):
        return ['duration' / Int32ul]

    @constructor(0x6319d612, 'document_attribute_sticker')
    def struct_0x6319d612(self):
        return Struct(
            'sname' / Computed('document_attribute_sticker'),
            'signature' / Hex(Const(0x6319d612, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_mask=2,
                                has_mask_coords=1),
            'alt' / TString,
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'mask_coords' / If(this.flags.has_mask_coords, self.struct_0xaed6dbb2()))

    @constructor(0x11b58939, 'document_attribute_animated')
    def struct_0x11b58939(self):
        return []

    @constructor(0x15590068, 'document_attribute_filename')
    def struct_0x15590068(self):
        return ['file_name' / TString]

    @constructor(0x43c57c48, 'document_attribute_video')
    def struct_0x43c57c48(self):
        return Struct(
            'sname' / Computed('document_attribute_video'),
            'signature' / Hex(Const(0x43c57c48, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_round_message=1,
                                is_supports_streaming=2,
                                is_nosound=8,
                                has_preload_prefix_size=4,
                                has_video_start_ts=16,
                                has_video_codec=32),
            'duration' / Double,
            'w' / Int32ul,
            'h' / Int32ul,
            'preload_prefix_size' / If(this.flags.has_preload_prefix_size, Int32ul),
            'video_start_ts' / If(this.flags.has_video_start_ts, Double),
            'video_codec' / If(this.flags.has_video_codec, TString))

    @constructor(0x17399fad, 'document_attribute_video_layer187')
    def struct_0x17399fad(self):
        return Struct(
            'sname' / Computed('document_attribute_video_layer187'),
            'signature' / Hex(Const(0x17399fad, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_round_message=1,
                                is_supports_streaming=2,
                                is_nosound=8,
                                has_preload_prefix_size=4,
                                has_video_start_ts=16),
            'duration' / Double,
            'w' / Int32ul,
            'h' / Int32ul,
            'preload_prefix_size' / If(this.flags.has_preload_prefix_size, Int32ul),
            'video_start_ts' / If(this.flags.has_video_start_ts, Double))

    @constructor(0xd38ff1c2, 'document_attribute_video_layer184')
    def struct_0xd38ff1c2(self):
        return Struct(
            'sname' / Computed('document_attribute_video_layer184'),
            'signature' / Hex(Const(0xd38ff1c2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_round_message=1,
                                is_supports_streaming=2,
                                is_nosound=8,
                                has_preload_prefix_size=4),
            'duration' / Double,
            'w' / Int32ul,
            'h' / Int32ul,
            'preload_prefix_size' / If(this.flags.has_preload_prefix_size, Int32ul))

    @constructor(0x5910cccb, 'document_attribute_video_layer65')
    def struct_0x5910cccb(self):
        return (
            'duration' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0xded218e0, 'document_attribute_audio_layer45')
    def struct_0xded218e0(self):
        return (
            'duration' / Int32ul,
            'title' / TString,
            'performer' / TString)

    @constructor(0xfb0a5727, 'document_attribute_sticker_old')
    def struct_0xfb0a5727(self):
        return []

    @constructor(0x9801d2f7, 'document_attribute_has_stickers')
    def struct_0x9801d2f7(self):
        return []

    @constructor(0x994c9882, 'document_attribute_sticker_old2')
    def struct_0x994c9882(self):
        return ['alt' / TString]

    @constructor(0x6c37c15c, 'document_attribute_image_size')
    def struct_0x6c37c15c(self):
        return (
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0x9852f9c6, 'document_attribute_audio')
    def struct_0x9852f9c6(self):
        return Struct(
            'sname' / Computed('document_attribute_audio'),
            'signature' / Hex(Const(0x9852f9c6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_voice=1024,
                                has_title=1,
                                has_performer=2,
                                has_waveform=4),
            'duration' / Int32ul,
            'title' / If(this.flags.has_title, TString),
            'performer' / If(this.flags.has_performer, TString),
            'waveform' / If(this.flags.has_waveform, TBytes))

    @constructor(0xfd149899, 'document_attribute_custom_emoji')
    def struct_0xfd149899(self):
        return Struct(
            'sname' / Computed('document_attribute_custom_emoji'),
            'signature' / Hex(Const(0xfd149899, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_free=1,
                                is_text_color=2),
            'alt' / TString,
            'stickerset' / self.input_sticker_set_structures('stickerset'))

    @structures
    def document_attribute_structures(self, name):
        tag_map = {
            0x3a556302: LazyBound(self.struct_0x3a556302),
            0x0ef02ce6: LazyBound(self.struct_0x0ef02ce6),
            0x051448e5: LazyBound(self.struct_0x051448e5),
            0x6319d612: LazyBound(self.struct_0x6319d612),
            0x11b58939: LazyBound(self.struct_0x11b58939),
            0x15590068: LazyBound(self.struct_0x15590068),
            0x43c57c48: LazyBound(self.struct_0x43c57c48),
            0x17399fad: LazyBound(self.struct_0x17399fad),
            0xd38ff1c2: LazyBound(self.struct_0xd38ff1c2),
            0x5910cccb: LazyBound(self.struct_0x5910cccb),
            0xded218e0: LazyBound(self.struct_0xded218e0),
            0xfb0a5727: LazyBound(self.struct_0xfb0a5727),
            0x9801d2f7: LazyBound(self.struct_0x9801d2f7),
            0x994c9882: LazyBound(self.struct_0x994c9882),
            0x6c37c15c: LazyBound(self.struct_0x6c37c15c),
            0x9852f9c6: LazyBound(self.struct_0x9852f9c6),
            0xfd149899: LazyBound(self.struct_0xfd149899)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9ba29cc1, 'document_layer113')
    def struct_0x9ba29cc1(self):
        return Struct(
            'sname' / Computed('document_layer113'),
            'signature' / Hex(Const(0x9ba29cc1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_thumbs=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x59534e4c, 'document_layer92')
    def struct_0x59534e4c(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x87232bc7, 'document_layer82')
    def struct_0x87232bc7(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            '_reserve' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x55555556, 'document_encrypted_old')
    def struct_0x55555556(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'file_name' / TString,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x8fd4c4d8, 'document')
    def struct_0x8fd4c4d8(self):
        return Struct(
            'sname' / Computed('document'),
            'signature' / Hex(Const(0x8fd4c4d8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_thumbs=1,
                                has_video_thumbs=2),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int64ul,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'video_thumbs' / If(this.flags.has_video_thumbs, self.vector(self.video_size_structures('video_thumbs'), 'video_thumbs')),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x1e87342b, 'document_layer142')
    def struct_0x1e87342b(self):
        return Struct(
            'sname' / Computed('document_layer142'),
            'signature' / Hex(Const(0x1e87342b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_thumbs=1,
                                has_video_thumbs=2),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'video_thumbs' / If(this.flags.has_video_thumbs, self.vector(self.video_size_structures('video_thumbs'), 'video_thumbs')),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0x9efc6326, 'document_old')
    def struct_0x9efc6326(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'file_name' / TString,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul)

    @constructor(0x36f8c871, 'document_empty')
    def struct_0x36f8c871(self):
        return ['id' / Int64ul]

    @constructor(0x55555558, 'document_encrypted')
    def struct_0x55555558(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'),
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0xf9a39f4f, 'document_layer53')
    def struct_0xf9a39f4f(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @structures
    def document_structures(self, name):
        tag_map = {
            0x9ba29cc1: LazyBound(self.struct_0x9ba29cc1),
            0x59534e4c: LazyBound(self.struct_0x59534e4c),
            0x87232bc7: LazyBound(self.struct_0x87232bc7),
            0x55555556: LazyBound(self.struct_0x55555556),
            0x8fd4c4d8: LazyBound(self.struct_0x8fd4c4d8),
            0x1e87342b: LazyBound(self.struct_0x1e87342b),
            0x9efc6326: LazyBound(self.struct_0x9efc6326),
            0x36f8c871: LazyBound(self.struct_0x36f8c871),
            0x55555558: LazyBound(self.struct_0x55555558),
            0xf9a39f4f: LazyBound(self.struct_0xf9a39f4f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1b0c841a, 'draft_message_empty')
    def struct_0x1b0c841a(self):
        return Struct(
            'sname' / Computed('draft_message_empty'),
            'signature' / Hex(Const(0x1b0c841a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_date=1),
            'date' / If(this.flags.has_date, TTimestamp))

    @constructor(0xba4baec5, 'draft_message_empty_layer81')
    def struct_0xba4baec5(self):
        return []

    @constructor(0xfd8e711f, 'draft_message_layer165')
    def struct_0xfd8e711f(self):
        return Struct(
            'sname' / Computed('draft_message_layer165'),
            'signature' / Hex(Const(0xfd8e711f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                has_reply_to=1,
                                has_entities=8),
            'reply_to' / If(this.flags.has_reply_to, Int32ul),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'date' / TTimestamp)

    @constructor(0x3fccf7ef, 'draft_message_layer181')
    def struct_0x3fccf7ef(self):
        return Struct(
            'sname' / Computed('draft_message_layer181'),
            'signature' / Hex(Const(0x3fccf7ef, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_invert_media=64,
                                has_reply_to=16,
                                has_entities=8,
                                has_media=32),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / If(this.flags.has_media, self.input_media_structures('media')),
            'date' / TTimestamp)

    @constructor(0x2d65321f, 'draft_message')
    def struct_0x2d65321f(self):
        return Struct(
            'sname' / Computed('draft_message'),
            'signature' / Hex(Const(0x2d65321f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_invert_media=64,
                                has_reply_to=16,
                                has_entities=8,
                                has_media=32,
                                has_effect=128),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / If(this.flags.has_media, self.input_media_structures('media')),
            'date' / TTimestamp,
            'effect' / If(this.flags.has_effect, Int64ul))

    @structures
    def draft_message_structures(self, name):
        tag_map = {
            0x1b0c841a: LazyBound(self.struct_0x1b0c841a),
            0xba4baec5: LazyBound(self.struct_0xba4baec5),
            0xfd8e711f: LazyBound(self.struct_0xfd8e711f),
            0x3fccf7ef: LazyBound(self.struct_0x3fccf7ef),
            0x2d65321f: LazyBound(self.struct_0x2d65321f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x922e55a9, 'email_verification_code')
    def struct_0x922e55a9(self):
        return ['code' / TString]

    @constructor(0xdb909ec2, 'email_verification_google')
    def struct_0xdb909ec2(self):
        return ['token' / TString]

    @constructor(0x96d074fd, 'email_verification_apple')
    def struct_0x96d074fd(self):
        return ['token' / TString]

    @structures
    def email_verification_structures(self, name):
        tag_map = {
            0x922e55a9: LazyBound(self.struct_0x922e55a9),
            0xdb909ec2: LazyBound(self.struct_0xdb909ec2),
            0x96d074fd: LazyBound(self.struct_0x96d074fd)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4345be73, 'email_verify_purpose_login_setup')
    def struct_0x4345be73(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString)

    @constructor(0x527d22eb, 'email_verify_purpose_login_change')
    def struct_0x527d22eb(self):
        return []

    @constructor(0xbbf51685, 'email_verify_purpose_passport')
    def struct_0xbbf51685(self):
        return []

    @structures
    def email_verify_purpose_structures(self, name):
        tag_map = {
            0x4345be73: LazyBound(self.struct_0x4345be73),
            0x527d22eb: LazyBound(self.struct_0x527d22eb),
            0xbbf51685: LazyBound(self.struct_0xbbf51685)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7a9abda9, 'emoji_group')
    def struct_0x7a9abda9(self):
        return (
            'title' / TString,
            'icon_emoji_id' / Int64ul,
            'emoticons' / self.vector(TString, 'emoticons'))

    @constructor(0x80d26cc7, 'emoji_group_greeting')
    def struct_0x80d26cc7(self):
        return (
            'title' / TString,
            'icon_emoji_id' / Int64ul,
            'emoticons' / self.vector(TString, 'emoticons'))

    @constructor(0x093bcf34, 'emoji_group_premium')
    def struct_0x093bcf34(self):
        return (
            'title' / TString,
            'icon_emoji_id' / Int64ul)

    @structures
    def emoji_group_structures(self, name):
        tag_map = {
            0x7a9abda9: LazyBound(self.struct_0x7a9abda9),
            0x80d26cc7: LazyBound(self.struct_0x80d26cc7),
            0x093bcf34: LazyBound(self.struct_0x093bcf34)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x236df622, 'emoji_keyword_deleted')
    def struct_0x236df622(self):
        return (
            'keyword' / TString,
            'emoticons' / self.vector(TString, 'emoticons'))

    @constructor(0xd5b3b9f9, 'emoji_keyword')
    def struct_0xd5b3b9f9(self):
        return (
            'keyword' / TString,
            'emoticons' / self.vector(TString, 'emoticons'))

    @structures
    def emoji_keyword_structures(self, name):
        tag_map = {
            0x236df622: LazyBound(self.struct_0x236df622),
            0xd5b3b9f9: LazyBound(self.struct_0xd5b3b9f9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7a1e11d1, 'emoji_list')
    def struct_0x7a1e11d1(self):
        return (
            'hash' / Int64ul,
            'document_id' / self.vector(Int64ul, 'document_id'))

    @constructor(0x481eadfa, 'emoji_list_not_modified')
    def struct_0x481eadfa(self):
        return []

    @structures
    def emoji_list_structures(self, name):
        tag_map = {
            0x7a1e11d1: LazyBound(self.struct_0x7a1e11d1),
            0x481eadfa: LazyBound(self.struct_0x481eadfa)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2de11aae, 'emoji_status_empty')
    def struct_0x2de11aae(self):
        return []

    @constructor(0xe7ff068a, 'emoji_status')
    def struct_0xe7ff068a(self):
        return Struct(
            'sname' / Computed('emoji_status'),
            'signature' / Hex(Const(0xe7ff068a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_until=1),
            'document_id' / Int64ul,
            'until' / If(this.flags.has_until, Int32ul))

    @constructor(0x7184603b, 'emoji_status_collectible')
    def struct_0x7184603b(self):
        return Struct(
            'sname' / Computed('emoji_status_collectible'),
            'signature' / Hex(Const(0x7184603b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_until=1),
            'collectible_id' / Int64ul,
            'document_id' / Int64ul,
            'title' / TString,
            'slug' / TString,
            'pattern_document_id' / Int64ul,
            'center_color' / Int32ul,
            'edge_color' / Int32ul,
            'pattern_color' / Int32ul,
            'text_color' / Int32ul,
            'until' / If(this.flags.has_until, Int32ul))

    @constructor(0x07141dbf, 'input_emoji_status_collectible')
    def struct_0x07141dbf(self):
        return Struct(
            'sname' / Computed('input_emoji_status_collectible'),
            'signature' / Hex(Const(0x07141dbf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_until=1),
            'collectible_id' / Int64ul,
            'until' / If(this.flags.has_until, Int32ul))

    @constructor(0x929b619d, 'emoji_status_layer197')
    def struct_0x929b619d(self):
        return ['document_id' / Int64ul]

    @constructor(0xfa30a8c7, 'emoji_status_until_layer197')
    def struct_0xfa30a8c7(self):
        return (
            'document_id' / Int64ul,
            'until' / Int32ul)

    @structures
    def emoji_status_structures(self, name):
        tag_map = {
            0x2de11aae: LazyBound(self.struct_0x2de11aae),
            0xe7ff068a: LazyBound(self.struct_0xe7ff068a),
            0x7184603b: LazyBound(self.struct_0x7184603b),
            0x07141dbf: LazyBound(self.struct_0x07141dbf),
            0x929b619d: LazyBound(self.struct_0x929b619d),
            0xfa30a8c7: LazyBound(self.struct_0xfa30a8c7)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfda9a7b7, 'encrypted_chat_requested_old')
    def struct_0xfda9a7b7(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul,
            'g_a' / TBytes,
            'nonce' / TBytes)

    @constructor(0xc878527e, 'encrypted_chat_requested_layer115')
    def struct_0xc878527e(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul,
            'g_a' / TBytes)

    @constructor(0xfa56ce36, 'encrypted_chat_layer131')
    def struct_0xfa56ce36(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul,
            'g_a_or_b' / TBytes,
            'key_fingerprint' / Int64ul)

    @constructor(0x62718a82, 'encrypted_chat_requested_layer131')
    def struct_0x62718a82(self):
        return Struct(
            'sname' / Computed('encrypted_chat_requested_layer131'),
            'signature' / Hex(Const(0x62718a82, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_folder_id=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul,
            'g_a' / TBytes)

    @constructor(0x6601d14f, 'encrypted_chat_old')
    def struct_0x6601d14f(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul,
            'g_a_or_b' / TBytes,
            'nonce' / TBytes,
            'key_fingerprint' / Int64ul)

    @constructor(0xab7ec0a0, 'encrypted_chat_empty')
    def struct_0xab7ec0a0(self):
        return ['id' / Int32ul]

    @constructor(0x3bf703dc, 'encrypted_chat_waiting_layer131')
    def struct_0x3bf703dc(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int32ul,
            'participant_id' / Int32ul)

    @constructor(0x13d6dd27, 'encrypted_chat_discarded_layer122')
    def struct_0x13d6dd27(self):
        return ['id' / Int32ul]

    @constructor(0x1e1c7c45, 'encrypted_chat_discarded')
    def struct_0x1e1c7c45(self):
        return Struct(
            'sname' / Computed('encrypted_chat_discarded'),
            'signature' / Hex(Const(0x1e1c7c45, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_history_deleted=1),
            'id' / Int32ul)

    @constructor(0x66b25953, 'encrypted_chat_waiting')
    def struct_0x66b25953(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul)

    @constructor(0x48f1d94c, 'encrypted_chat_requested')
    def struct_0x48f1d94c(self):
        return Struct(
            'sname' / Computed('encrypted_chat_requested'),
            'signature' / Hex(Const(0x48f1d94c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_folder_id=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a' / TBytes)

    @constructor(0x61f0d4c7, 'encrypted_chat')
    def struct_0x61f0d4c7(self):
        return (
            'id' / Int32ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_or_b' / TBytes,
            'key_fingerprint' / Int64ul)

    @structures
    def encrypted_chat_structures(self, name):
        tag_map = {
            0xfda9a7b7: LazyBound(self.struct_0xfda9a7b7),
            0xc878527e: LazyBound(self.struct_0xc878527e),
            0xfa56ce36: LazyBound(self.struct_0xfa56ce36),
            0x62718a82: LazyBound(self.struct_0x62718a82),
            0x6601d14f: LazyBound(self.struct_0x6601d14f),
            0xab7ec0a0: LazyBound(self.struct_0xab7ec0a0),
            0x3bf703dc: LazyBound(self.struct_0x3bf703dc),
            0x13d6dd27: LazyBound(self.struct_0x13d6dd27),
            0x1e1c7c45: LazyBound(self.struct_0x1e1c7c45),
            0x66b25953: LazyBound(self.struct_0x66b25953),
            0x48f1d94c: LazyBound(self.struct_0x48f1d94c),
            0x61f0d4c7: LazyBound(self.struct_0x61f0d4c7)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa8008cd8, 'encrypted_file')
    def struct_0xa8008cd8(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'size' / Int64ul,
            'dc_id' / Int32ul,
            'key_fingerprint' / Int32ul)

    @constructor(0x4a70994c, 'encrypted_file_layer142')
    def struct_0x4a70994c(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'size' / Int32ul,
            'dc_id' / Int32ul,
            'key_fingerprint' / Int32ul)

    @constructor(0xc21f497e, 'encrypted_file_empty')
    def struct_0xc21f497e(self):
        return []

    @structures
    def encrypted_file_structures(self, name):
        tag_map = {
            0xa8008cd8: LazyBound(self.struct_0xa8008cd8),
            0x4a70994c: LazyBound(self.struct_0x4a70994c),
            0xc21f497e: LazyBound(self.struct_0xc21f497e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x23734b06, 'encrypted_message_service')
    def struct_0x23734b06(self):
        return (
            'random_id' / Int64ul,
            'chat_id' / Int32ul,
            'date' / TTimestamp,
            'bytes' / TBytes)

    @constructor(0xed18c118, 'encrypted_message')
    def struct_0xed18c118(self):
        return (
            'random_id' / Int64ul,
            'chat_id' / Int32ul,
            'date' / TTimestamp,
            'bytes' / TBytes,
            'file' / self.encrypted_file_structures('file'))

    @structures
    def encrypted_message_structures(self, name):
        tag_map = {
            0x23734b06: LazyBound(self.struct_0x23734b06),
            0xed18c118: LazyBound(self.struct_0xed18c118)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa22cbd96, 'chat_invite_exported')
    def struct_0xa22cbd96(self):
        return Struct(
            'sname' / Computed('chat_invite_exported'),
            'signature' / Hex(Const(0xa22cbd96, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1,
                                is_permanent=32,
                                is_request_needed=64,
                                has_start_date=16,
                                has_expire_date=2,
                                has_usage_limit=4,
                                has_usage=8,
                                has_requested=128,
                                has_subscription_expired=1024,
                                has_title=256,
                                has_subscription_pricing=512),
            'link' / TString,
            'admin_id' / Int64ul,
            'date' / TTimestamp,
            'start_date' / If(this.flags.has_start_date, TTimestamp),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'usage' / If(this.flags.has_usage, Int32ul),
            'requested' / If(this.flags.has_requested, Int32ul),
            'subscription_expired' / If(this.flags.has_subscription_expired, Int32ul),
            'title' / If(this.flags.has_title, TString),
            'subscription_pricing' / If(this.flags.has_subscription_pricing, self.struct_0x05416d58()))

    @constructor(0x0ab4a819, 'chat_invite_exported_layer185')
    def struct_0x0ab4a819(self):
        return Struct(
            'sname' / Computed('chat_invite_exported_layer185'),
            'signature' / Hex(Const(0x0ab4a819, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1,
                                is_permanent=32,
                                is_request_needed=64,
                                has_start_date=16,
                                has_expire_date=2,
                                has_usage_limit=4,
                                has_usage=8,
                                has_requested=128,
                                has_title=256),
            'link' / TString,
            'admin_id' / Int64ul,
            'date' / TTimestamp,
            'start_date' / If(this.flags.has_start_date, TTimestamp),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'usage' / If(this.flags.has_usage, Int32ul),
            'requested' / If(this.flags.has_requested, Int32ul),
            'title' / If(this.flags.has_title, TString))

    @constructor(0xb18105e8, 'chat_invite_exported_layer133')
    def struct_0xb18105e8(self):
        return Struct(
            'sname' / Computed('chat_invite_exported_layer133'),
            'signature' / Hex(Const(0xb18105e8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1,
                                is_permanent=32,
                                has_start_date=16,
                                has_expire_date=2,
                                has_usage_limit=4,
                                has_usage=8),
            'link' / TString,
            'admin_id' / Int64ul,
            'date' / TTimestamp,
            'start_date' / If(this.flags.has_start_date, TTimestamp),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'usage' / If(this.flags.has_usage, Int32ul))

    @constructor(0x69df3769, 'chat_invite_empty_layer122')
    def struct_0x69df3769(self):
        return []

    @constructor(0x6e24fc9d, 'chat_invite_exported_layer131')
    def struct_0x6e24fc9d(self):
        return Struct(
            'sname' / Computed('chat_invite_exported_layer131'),
            'signature' / Hex(Const(0x6e24fc9d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1,
                                is_permanent=32,
                                has_start_date=16,
                                has_expire_date=2,
                                has_usage_limit=4,
                                has_usage=8),
            'link' / TString,
            'admin_id' / Int32ul,
            'date' / TTimestamp,
            'start_date' / If(this.flags.has_start_date, TTimestamp),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'usage' / If(this.flags.has_usage, Int32ul))

    @constructor(0xfc2e05bc, 'chat_invite_exported_layer122')
    def struct_0xfc2e05bc(self):
        return ['link' / TString]

    @constructor(0xed107ab7, 'chat_invite_public_join_requests')
    def struct_0xed107ab7(self):
        return []

    @structures
    def exported_chat_invite_structures(self, name):
        tag_map = {
            0xa22cbd96: LazyBound(self.struct_0xa22cbd96),
            0x0ab4a819: LazyBound(self.struct_0x0ab4a819),
            0xb18105e8: LazyBound(self.struct_0xb18105e8),
            0x69df3769: LazyBound(self.struct_0x69df3769),
            0x6e24fc9d: LazyBound(self.struct_0x6e24fc9d),
            0xfc2e05bc: LazyBound(self.struct_0xfc2e05bc),
            0xed107ab7: LazyBound(self.struct_0xed107ab7)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7c596b46, 'file_location_unavailable')
    def struct_0x7c596b46(self):
        return (
            'volume_id' / Int64ul,
            'local_id' / Int32ul,
            'secret' / Int64ul)

    @constructor(0x53d69076, 'file_location_layer82')
    def struct_0x53d69076(self):
        return (
            'dc_id' / Int32ul,
            'volume_id' / Int64ul,
            'local_id' / Int32ul,
            'secret' / Int64ul)

    @constructor(0x091d11eb, 'file_location_layer97')
    def struct_0x091d11eb(self):
        return (
            'dc_id' / Int32ul,
            'volume_id' / Int64ul,
            'local_id' / Int32ul,
            'secret' / Int64ul,
            'file_reference' / TBytes)

    @constructor(0xbc7fc6cd, 'file_location_to_be_deprecated')
    def struct_0xbc7fc6cd(self):
        return (
            'volume_id' / Int64ul,
            'local_id' / Int32ul)

    @constructor(0x55555554, 'file_encrypted_location')
    def struct_0x55555554(self):
        return (
            'dc_id' / Int32ul,
            'volume_id' / Int64ul,
            'local_id' / Int32ul,
            'secret' / Int64ul,
            'key' / TBytes,
            'iv' / TBytes)

    @structures
    def file_location_structures(self, name):
        tag_map = {
            0x7c596b46: LazyBound(self.struct_0x7c596b46),
            0x53d69076: LazyBound(self.struct_0x53d69076),
            0x091d11eb: LazyBound(self.struct_0x091d11eb),
            0xbc7fc6cd: LazyBound(self.struct_0xbc7fc6cd),
            0x55555554: LazyBound(self.struct_0x55555554)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x023f109b, 'forum_topic_deleted')
    def struct_0x023f109b(self):
        return ['id' / Int32ul]

    @constructor(0x5920d6dc, 'forum_topic_layer147')
    def struct_0x5920d6dc(self):
        return Struct(
            'sname' / Computed('forum_topic_layer147'),
            'signature' / Hex(Const(0x5920d6dc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my=2,
                                is_closed=4,
                                is_pinned=8,
                                has_icon_emoji_id=1),
            'id' / Int32ul,
            'date' / TTimestamp,
            'title' / TString,
            'icon_color' / Int32ul,
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'top_message' / Int32ul,
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_mentions_count' / Int32ul,
            'unread_reactions_count' / Int32ul,
            'from_id' / self.peer_structures('from_id'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'))

    @constructor(0x71701da9, 'forum_topic')
    def struct_0x71701da9(self):
        return Struct(
            'sname' / Computed('forum_topic'),
            'signature' / Hex(Const(0x71701da9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my=2,
                                is_closed=4,
                                is_pinned=8,
                                is_short=32,
                                is_hidden=64,
                                has_icon_emoji_id=1,
                                has_draft=16),
            'id' / Int32ul,
            'date' / TTimestamp,
            'title' / TString,
            'icon_color' / Int32ul,
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'top_message' / Int32ul,
            'read_inbox_max_id' / Int32ul,
            'read_outbox_max_id' / Int32ul,
            'unread_count' / Int32ul,
            'unread_mentions_count' / Int32ul,
            'unread_reactions_count' / Int32ul,
            'from_id' / self.peer_structures('from_id'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'draft' / If(this.flags.has_draft, self.draft_message_structures('draft')))

    @structures
    def forum_topic_structures(self, name):
        tag_map = {
            0x023f109b: LazyBound(self.struct_0x023f109b),
            0x5920d6dc: LazyBound(self.struct_0x5920d6dc),
            0x71701da9: LazyBound(self.struct_0x71701da9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x0296f104, 'geo_point_layer119')
    def struct_0x0296f104(self):
        return (
            'long' / Double,
            'lat' / Double,
            'access_hash' / Int64ul)

    @constructor(0x2049d70c, 'geo_point_layer81')
    def struct_0x2049d70c(self):
        return (
            'long' / Double,
            'lat' / Double)

    @constructor(0x1117dd5f, 'geo_point_empty')
    def struct_0x1117dd5f(self):
        return []

    @constructor(0xb2a2f663, 'geo_point')
    def struct_0xb2a2f663(self):
        return Struct(
            'sname' / Computed('geo_point'),
            'signature' / Hex(Const(0xb2a2f663, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_accuracy_radius=1),
            'long' / Double,
            'lat' / Double,
            'access_hash' / Int64ul,
            'accuracy_radius' / If(this.flags.has_accuracy_radius, Int32ul))

    @structures
    def geo_point_structures(self, name):
        tag_map = {
            0x0296f104: LazyBound(self.struct_0x0296f104),
            0x2049d70c: LazyBound(self.struct_0x2049d70c),
            0x1117dd5f: LazyBound(self.struct_0x1117dd5f),
            0xb2a2f663: LazyBound(self.struct_0xb2a2f663)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7780bcb4, 'group_call_discarded')
    def struct_0x7780bcb4(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'duration' / Int32ul)

    @constructor(0xcdf8d3e3, 'group_call')
    def struct_0xcdf8d3e3(self):
        return Struct(
            'sname' / Computed('group_call'),
            'signature' / Hex(Const(0xcdf8d3e3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_join_muted=2,
                                is_can_change_join_muted=4,
                                is_join_date_asc=64,
                                is_schedule_start_subscribed=256,
                                is_can_start_video=512,
                                is_record_video_active=2048,
                                is_rtmp_stream=4096,
                                is_listeners_hidden=8192,
                                has_title=8,
                                has_stream_dc_id=16,
                                has_record_start_date=32,
                                has_schedule_date=128,
                                has_unmuted_video_count=1024,
                                has_conference_from_call=16384),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'participants_count' / Int32ul,
            'title' / If(this.flags.has_title, TString),
            'stream_dc_id' / If(this.flags.has_stream_dc_id, Int32ul),
            'record_start_date' / If(this.flags.has_record_start_date, TTimestamp),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'unmuted_video_count' / If(this.flags.has_unmuted_video_count, Int32ul),
            'unmuted_video_limit' / Int32ul,
            'version' / Int32ul,
            'conference_from_call' / If(this.flags.has_conference_from_call, Int64ul))

    @constructor(0xd597650c, 'group_call_layer195')
    def struct_0xd597650c(self):
        return Struct(
            'sname' / Computed('group_call_layer195'),
            'signature' / Hex(Const(0xd597650c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_join_muted=2,
                                is_can_change_join_muted=4,
                                is_join_date_asc=64,
                                is_schedule_start_subscribed=256,
                                is_can_start_video=512,
                                is_record_video_active=2048,
                                is_rtmp_stream=4096,
                                is_listeners_hidden=8192,
                                has_title=8,
                                has_stream_dc_id=16,
                                has_record_start_date=32,
                                has_schedule_date=128,
                                has_unmuted_video_count=1024),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'participants_count' / Int32ul,
            'title' / If(this.flags.has_title, TString),
            'stream_dc_id' / If(this.flags.has_stream_dc_id, Int32ul),
            'record_start_date' / If(this.flags.has_record_start_date, TTimestamp),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'unmuted_video_count' / If(this.flags.has_unmuted_video_count, Int32ul),
            'unmuted_video_limit' / Int32ul,
            'version' / Int32ul)

    @structures
    def group_call_structures(self, name):
        tag_map = {
            0x7780bcb4: LazyBound(self.struct_0x7780bcb4),
            0xcdf8d3e3: LazyBound(self.struct_0xcdf8d3e3),
            0xd597650c: LazyBound(self.struct_0xd597650c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xdd18782e, 'help_app_config')
    def struct_0xdd18782e(self):
        return (
            'hash' / Int32ul,
            'config' / self.json_value_structures('config'))

    @constructor(0x7cde641d, 'help_app_config_not_modified')
    def struct_0x7cde641d(self):
        return []

    @structures
    def help_app_config_structures(self, name):
        tag_map = {
            0xdd18782e: LazyBound(self.struct_0xdd18782e),
            0x7cde641d: LazyBound(self.struct_0x7cde641d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xccbbce30, 'help_app_update')
    def struct_0xccbbce30(self):
        return Struct(
            'sname' / Computed('help_app_update'),
            'signature' / Hex(Const(0xccbbce30, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_not_skip=1,
                                has_document=2,
                                has_url=4,
                                has_sticker=8),
            'id' / Int32ul,
            'version' / TString,
            'text' / TString,
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'url' / If(this.flags.has_url, TString),
            'sticker' / If(this.flags.has_sticker, self.document_structures('sticker')))

    @constructor(0xc45a6536, 'help_no_app_update')
    def struct_0xc45a6536(self):
        return []

    @structures
    def help_app_update_structures(self, name):
        tag_map = {
            0xccbbce30: LazyBound(self.struct_0xccbbce30),
            0xc45a6536: LazyBound(self.struct_0xc45a6536)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x93cc1f32, 'help_countries_list_not_modified')
    def struct_0x93cc1f32(self):
        return []

    @constructor(0x87d0759e, 'help_countries_list')
    def struct_0x87d0759e(self):
        return (
            'countries' / self.vector(self.struct_0xc3878e23(), 'countries'),
            'hash' / Int32ul)

    @structures
    def help_countries_list_structures(self, name):
        tag_map = {
            0x93cc1f32: LazyBound(self.struct_0x93cc1f32),
            0x87d0759e: LazyBound(self.struct_0x87d0759e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x66afa166, 'help_deep_link_info_empty')
    def struct_0x66afa166(self):
        return []

    @constructor(0x6a4ee832, 'help_deep_link_info')
    def struct_0x6a4ee832(self):
        return Struct(
            'sname' / Computed('help_deep_link_info'),
            'signature' / Hex(Const(0x6a4ee832, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_update_app=1,
                                has_entities=2),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')))

    @structures
    def help_deep_link_info_structures(self, name):
        tag_map = {
            0x66afa166: LazyBound(self.struct_0x66afa166),
            0x6a4ee832: LazyBound(self.struct_0x6a4ee832)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbfb9f457, 'help_passport_config_not_modified')
    def struct_0xbfb9f457(self):
        return []

    @constructor(0xa098d6af, 'help_passport_config')
    def struct_0xa098d6af(self):
        return (
            'hash' / Int32ul,
            'countries_langs' / self.struct_0x7d748d04())

    @structures
    def help_passport_config_structures(self, name):
        tag_map = {
            0xbfb9f457: LazyBound(self.struct_0xbfb9f457),
            0xa098d6af: LazyBound(self.struct_0xa098d6af)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x26219a58, 'help_peer_color_set')
    def struct_0x26219a58(self):
        return ['colors' / self.vector(Int32ul, 'colors')]

    @constructor(0x767d61eb, 'help_peer_color_profile_set')
    def struct_0x767d61eb(self):
        return (
            'palette_colors' / self.vector(Int32ul, 'palette_colors'),
            'bg_colors' / self.vector(Int32ul, 'bg_colors'),
            'story_colors' / self.vector(Int32ul, 'story_colors'))

    @structures
    def help_peer_color_set_structures(self, name):
        tag_map = {
            0x26219a58: LazyBound(self.struct_0x26219a58),
            0x767d61eb: LazyBound(self.struct_0x767d61eb)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2ba1f5ce, 'help_peer_colors_not_modified')
    def struct_0x2ba1f5ce(self):
        return []

    @constructor(0x00f8ed08, 'help_peer_colors')
    def struct_0x00f8ed08(self):
        return (
            'hash' / Int32ul,
            'colors' / self.vector(self.struct_0xadec6ebe(), 'colors'))

    @structures
    def help_peer_colors_structures(self, name):
        tag_map = {
            0x2ba1f5ce: LazyBound(self.struct_0x2ba1f5ce),
            0x00f8ed08: LazyBound(self.struct_0x00f8ed08)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5334759c, 'help_premium_promo')
    def struct_0x5334759c(self):
        return (
            'status_text' / TString,
            'status_entities' / self.vector(self.message_entity_structures('status_entities'), 'status_entities'),
            'video_sections' / self.vector(TString, 'video_sections'),
            'videos' / self.vector(self.document_structures('videos'), 'videos'),
            'period_options' / self.vector(self.premium_subscription_option_structures('period_options'), 'period_options'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x8a4f3c29, 'help_premium_promo_layer144')
    def struct_0x8a4f3c29(self):
        return (
            'status_text' / TString,
            'status_entities' / self.vector(self.message_entity_structures('status_entities'), 'status_entities'),
            'video_sections' / self.vector(TString, 'video_sections'),
            'videos' / self.vector(self.document_structures('videos'), 'videos'),
            'currency' / TString,
            'monthly_amount' / Int64ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xe0360f1b, 'help_premium_promo_layer140')
    def struct_0xe0360f1b(self):
        return (
            'status_text' / TString,
            'status_entities' / self.vector(self.message_entity_structures('status_entities'), 'status_entities'),
            'video_sections' / self.vector(TString, 'video_sections'),
            'videos' / self.vector(self.document_structures('videos'), 'videos'),
            'currency' / TString,
            'monthly_amount' / Int64ul)

    @structures
    def help_premium_promo_structures(self, name):
        tag_map = {
            0x5334759c: LazyBound(self.struct_0x5334759c),
            0x8a4f3c29: LazyBound(self.struct_0x8a4f3c29),
            0xe0360f1b: LazyBound(self.struct_0xe0360f1b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8c39793f, 'help_promo_data')
    def struct_0x8c39793f(self):
        return Struct(
            'sname' / Computed('help_promo_data'),
            'signature' / Hex(Const(0x8c39793f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_proxy=1,
                                has_psa_type=2,
                                has_psa_message=4),
            'expires' / Int32ul,
            'peer' / self.peer_structures('peer'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'psa_type' / If(this.flags.has_psa_type, TString),
            'psa_message' / If(this.flags.has_psa_message, TString))

    @constructor(0x98f6ac75, 'help_promo_data_empty')
    def struct_0x98f6ac75(self):
        return ['expires' / Int32ul]

    @structures
    def help_promo_data_structures(self, name):
        tag_map = {
            0x8c39793f: LazyBound(self.struct_0x8c39793f),
            0x98f6ac75: LazyBound(self.struct_0x98f6ac75)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x28ecf961, 'help_terms_of_service_update')
    def struct_0x28ecf961(self):
        return (
            'expires' / Int32ul,
            'terms_of_service' / self.struct_0x780a0310())

    @constructor(0xe3309f7f, 'help_terms_of_service_update_empty')
    def struct_0xe3309f7f(self):
        return ['expires' / Int32ul]

    @structures
    def help_terms_of_service_update_structures(self, name):
        tag_map = {
            0x28ecf961: LazyBound(self.struct_0x28ecf961),
            0xe3309f7f: LazyBound(self.struct_0xe3309f7f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x970708cc, 'help_timezones_list_not_modified')
    def struct_0x970708cc(self):
        return []

    @constructor(0x7b74ed71, 'help_timezones_list')
    def struct_0x7b74ed71(self):
        return (
            'timezones' / self.vector(self.struct_0xff9289f5(), 'timezones'),
            'hash' / Int32ul)

    @structures
    def help_timezones_list_structures(self, name):
        tag_map = {
            0x970708cc: LazyBound(self.struct_0x970708cc),
            0x7b74ed71: LazyBound(self.struct_0x7b74ed71)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf3ae2eed, 'help_user_info_empty')
    def struct_0xf3ae2eed(self):
        return []

    @constructor(0x01eb3758, 'help_user_info')
    def struct_0x01eb3758(self):
        return (
            'message' / TString,
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'),
            'author' / TString,
            'date' / TTimestamp)

    @structures
    def help_user_info_structures(self, name):
        tag_map = {
            0xf3ae2eed: LazyBound(self.struct_0xf3ae2eed),
            0x01eb3758: LazyBound(self.struct_0x01eb3758)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x6334ee9a, 'inline_query_peer_type_broadcast')
    def struct_0x6334ee9a(self):
        return []

    @constructor(0xd766c50a, 'inline_query_peer_type_chat')
    def struct_0xd766c50a(self):
        return []

    @constructor(0x833c0fac, 'inline_query_peer_type_pm')
    def struct_0x833c0fac(self):
        return []

    @constructor(0x0e3b2d0c, 'inline_query_peer_type_bot_pm')
    def struct_0x0e3b2d0c(self):
        return []

    @constructor(0x5ec4be43, 'inline_query_peer_type_megagroup')
    def struct_0x5ec4be43(self):
        return []

    @constructor(0x3081ed9d, 'inline_query_peer_type_same_bot_pm')
    def struct_0x3081ed9d(self):
        return []

    @structures
    def inline_query_peer_type_structures(self, name):
        tag_map = {
            0x6334ee9a: LazyBound(self.struct_0x6334ee9a),
            0xd766c50a: LazyBound(self.struct_0xd766c50a),
            0x833c0fac: LazyBound(self.struct_0x833c0fac),
            0x0e3b2d0c: LazyBound(self.struct_0x0e3b2d0c),
            0x5ec4be43: LazyBound(self.struct_0x5ec4be43),
            0x3081ed9d: LazyBound(self.struct_0x3081ed9d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa920bd7a, 'input_bot_app_id')
    def struct_0xa920bd7a(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x908c0407, 'input_bot_app_short_name')
    def struct_0x908c0407(self):
        return (
            'bot_id' / self.input_user_structures('bot_id'),
            'short_name' / TString)

    @structures
    def input_bot_app_structures(self, name):
        tag_map = {
            0xa920bd7a: LazyBound(self.struct_0xa920bd7a),
            0x908c0407: LazyBound(self.struct_0x908c0407)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2a286531, 'input_channel_from_message_layer131')
    def struct_0x2a286531(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'channel_id' / Int32ul)

    @constructor(0xafeb712e, 'input_channel_layer131')
    def struct_0xafeb712e(self):
        return (
            'channel_id' / Int32ul,
            'access_hash' / Int64ul)

    @constructor(0xf35aec28, 'input_channel')
    def struct_0xf35aec28(self):
        return (
            'channel_id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0xee8c1e86, 'input_channel_empty')
    def struct_0xee8c1e86(self):
        return []

    @constructor(0x5b934f9d, 'input_channel_from_message')
    def struct_0x5b934f9d(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'channel_id' / Int64ul)

    @structures
    def input_channel_structures(self, name):
        tag_map = {
            0x2a286531: LazyBound(self.struct_0x2a286531),
            0xafeb712e: LazyBound(self.struct_0xafeb712e),
            0xf35aec28: LazyBound(self.struct_0xf35aec28),
            0xee8c1e86: LazyBound(self.struct_0xee8c1e86),
            0x5b934f9d: LazyBound(self.struct_0x5b934f9d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8953ad37, 'input_chat_photo')
    def struct_0x8953ad37(self):
        return ['id' / self.input_photo_structures('id')]

    @constructor(0x1ca48f57, 'input_chat_photo_empty')
    def struct_0x1ca48f57(self):
        return []

    @constructor(0xbdcdaec0, 'input_chat_uploaded_photo')
    def struct_0xbdcdaec0(self):
        return Struct(
            'sname' / Computed('input_chat_uploaded_photo'),
            'signature' / Hex(Const(0xbdcdaec0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_file=1,
                                has_video=2,
                                has_video_start_ts=4,
                                has_video_emoji_markup=8),
            'file' / If(this.flags.has_file, self.input_file_structures('file')),
            'video' / If(this.flags.has_video, self.input_file_structures('video')),
            'video_start_ts' / If(this.flags.has_video_start_ts, Double),
            'video_emoji_markup' / If(this.flags.has_video_emoji_markup, self.video_size_structures('video_emoji_markup')))

    @structures
    def input_chat_photo_structures(self, name):
        tag_map = {
            0x8953ad37: LazyBound(self.struct_0x8953ad37),
            0x1ca48f57: LazyBound(self.struct_0x1ca48f57),
            0xbdcdaec0: LazyBound(self.struct_0xbdcdaec0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9880f658, 'input_check_password_empty')
    def struct_0x9880f658(self):
        return []

    @constructor(0xd27ff082, 'input_check_password_srp')
    def struct_0xd27ff082(self):
        return (
            'srp_id' / Int64ul,
            'a' / TBytes,
            'm1' / TBytes)

    @structures
    def input_check_password_srp_structures(self, name):
        tag_map = {
            0x9880f658: LazyBound(self.struct_0x9880f658),
            0xd27ff082: LazyBound(self.struct_0xd27ff082)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfcaafeb7, 'input_dialog_peer')
    def struct_0xfcaafeb7(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x64600527, 'input_dialog_peer_folder')
    def struct_0x64600527(self):
        return ['folder_id' / Int32ul]

    @structures
    def input_dialog_peer_structures(self, name):
        tag_map = {
            0xfcaafeb7: LazyBound(self.struct_0xfcaafeb7),
            0x64600527: LazyBound(self.struct_0x64600527)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x72f0eaae, 'input_document_empty')
    def struct_0x72f0eaae(self):
        return []

    @constructor(0x1abfb575, 'input_document')
    def struct_0x1abfb575(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes)

    @structures
    def input_document_structures(self, name):
        tag_map = {
            0x72f0eaae: LazyBound(self.struct_0x72f0eaae),
            0x1abfb575: LazyBound(self.struct_0x1abfb575)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5a17b5e5, 'input_encrypted_file')
    def struct_0x5a17b5e5(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x2dc173c8, 'input_encrypted_file_big_uploaded')
    def struct_0x2dc173c8(self):
        return (
            'id' / Int64ul,
            'parts' / Int32ul,
            'key_fingerprint' / Int32ul)

    @constructor(0x1837c364, 'input_encrypted_file_empty')
    def struct_0x1837c364(self):
        return []

    @constructor(0x64bd0306, 'input_encrypted_file_uploaded')
    def struct_0x64bd0306(self):
        return (
            'id' / Int64ul,
            'parts' / Int32ul,
            'md5_checksum' / TString,
            'key_fingerprint' / Int32ul)

    @structures
    def input_encrypted_file_structures(self, name):
        tag_map = {
            0x5a17b5e5: LazyBound(self.struct_0x5a17b5e5),
            0x2dc173c8: LazyBound(self.struct_0x2dc173c8),
            0x1837c364: LazyBound(self.struct_0x1837c364),
            0x64bd0306: LazyBound(self.struct_0x64bd0306)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x40181ffe, 'input_photo_file_location')
    def struct_0x40181ffe(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'thumb_size' / TString)

    @constructor(0xbad07584, 'input_document_file_location')
    def struct_0xbad07584(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'thumb_size' / TString)

    @constructor(0x37257e99, 'input_peer_photo_file_location')
    def struct_0x37257e99(self):
        return Struct(
            'sname' / Computed('input_peer_photo_file_location'),
            'signature' / Hex(Const(0x37257e99, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_big=1),
            'peer' / self.input_peer_structures('peer'),
            'photo_id' / Int64ul)

    @constructor(0xf5235d55, 'input_encrypted_file_location')
    def struct_0xf5235d55(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x9d84f3db, 'input_sticker_set_thumb')
    def struct_0x9d84f3db(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'thumb_version' / Int32ul)

    @constructor(0x0598a92a, 'input_group_call_stream')
    def struct_0x0598a92a(self):
        return Struct(
            'sname' / Computed('input_group_call_stream'),
            'signature' / Hex(Const(0x0598a92a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video_channel=1),
            'call' / self.struct_0xd8aa840f(),
            'time_ms' / Int64ul,
            'scale' / Int32ul,
            'video_channel' / If(this.flags.has_video_channel, Int32ul),
            'video_quality' / If(this.flags.has_video_channel, Int32ul))

    @constructor(0xdfdaabe1, 'input_file_location')
    def struct_0xdfdaabe1(self):
        return (
            'volume_id' / Int64ul,
            'local_id' / Int32ul,
            'secret' / Int64ul,
            'file_reference' / TBytes)

    @constructor(0xcbc7ee28, 'input_secure_file_location')
    def struct_0xcbc7ee28(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @structures
    def input_file_location_structures(self, name):
        tag_map = {
            0x40181ffe: LazyBound(self.struct_0x40181ffe),
            0xbad07584: LazyBound(self.struct_0xbad07584),
            0x37257e99: LazyBound(self.struct_0x37257e99),
            0xf5235d55: LazyBound(self.struct_0xf5235d55),
            0x9d84f3db: LazyBound(self.struct_0x9d84f3db),
            0x0598a92a: LazyBound(self.struct_0x0598a92a),
            0xdfdaabe1: LazyBound(self.struct_0xdfdaabe1),
            0xcbc7ee28: LazyBound(self.struct_0xcbc7ee28)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfa4f0bb5, 'input_file_big')
    def struct_0xfa4f0bb5(self):
        return (
            'id' / Int64ul,
            'parts' / Int32ul,
            'name' / TString)

    @constructor(0xf52ff27f, 'input_file')
    def struct_0xf52ff27f(self):
        return (
            'id' / Int64ul,
            'parts' / Int32ul,
            'name' / TString,
            'md5_checksum' / TString)

    @constructor(0x62dc8b48, 'input_file_story_document')
    def struct_0x62dc8b48(self):
        return ['doc' / self.input_document_structures('doc')]

    @structures
    def input_file_structures(self, name):
        tag_map = {
            0xfa4f0bb5: LazyBound(self.struct_0xfa4f0bb5),
            0xf52ff27f: LazyBound(self.struct_0xf52ff27f),
            0x62dc8b48: LazyBound(self.struct_0x62dc8b48)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc331e80a, 'input_game_short_name')
    def struct_0xc331e80a(self):
        return (
            'bot_id' / self.input_user_structures('bot_id'),
            'short_name' / TString)

    @constructor(0x032c3e77, 'input_game_id')
    def struct_0x032c3e77(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @structures
    def input_game_structures(self, name):
        tag_map = {
            0xc331e80a: LazyBound(self.struct_0xc331e80a),
            0x032c3e77: LazyBound(self.struct_0x032c3e77)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x48222faf, 'input_geo_point')
    def struct_0x48222faf(self):
        return Struct(
            'sname' / Computed('input_geo_point'),
            'signature' / Hex(Const(0x48222faf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_accuracy_radius=1),
            'lat' / Double,
            'long' / Double,
            'accuracy_radius' / If(this.flags.has_accuracy_radius, Int32ul))

    @constructor(0xe4c123d6, 'input_geo_point_empty')
    def struct_0xe4c123d6(self):
        return []

    @structures
    def input_geo_point_structures(self, name):
        tag_map = {
            0x48222faf: LazyBound(self.struct_0x48222faf),
            0xe4c123d6: LazyBound(self.struct_0xe4c123d6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x98986c0d, 'input_invoice_premium_gift_code')
    def struct_0x98986c0d(self):
        return (
            'purpose' / self.input_store_payment_purpose_structures('purpose'),
            'option' / self.struct_0x257e962b())

    @constructor(0xc5b56859, 'input_invoice_message')
    def struct_0xc5b56859(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0xc326caef, 'input_invoice_slug')
    def struct_0xc326caef(self):
        return ['slug' / TString]

    @constructor(0x65f00ce3, 'input_invoice_stars')
    def struct_0x65f00ce3(self):
        return ['purpose' / self.input_store_payment_purpose_structures('purpose')]

    @constructor(0x34e793f1, 'input_invoice_chat_invite_subscription')
    def struct_0x34e793f1(self):
        return ['hash' / TString]

    @constructor(0xe8625e92, 'input_invoice_star_gift')
    def struct_0xe8625e92(self):
        return Struct(
            'sname' / Computed('input_invoice_star_gift'),
            'signature' / Hex(Const(0xe8625e92, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_hide_name=1,
                                is_include_upgrade=4,
                                has_message=2),
            'peer' / self.input_peer_structures('peer'),
            'gift_id' / Int64ul,
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @constructor(0x4d818d5d, 'input_invoice_star_gift_upgrade')
    def struct_0x4d818d5d(self):
        return Struct(
            'sname' / Computed('input_invoice_star_gift_upgrade'),
            'signature' / Hex(Const(0x4d818d5d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_keep_original_details=1),
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'))

    @constructor(0x4a5f5bd9, 'input_invoice_star_gift_transfer')
    def struct_0x4a5f5bd9(self):
        return (
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'),
            'to_id' / self.input_peer_structures('to_id'))

    @structures
    def input_invoice_structures(self, name):
        tag_map = {
            0x98986c0d: LazyBound(self.struct_0x98986c0d),
            0xc5b56859: LazyBound(self.struct_0xc5b56859),
            0xc326caef: LazyBound(self.struct_0xc326caef),
            0x65f00ce3: LazyBound(self.struct_0x65f00ce3),
            0x34e793f1: LazyBound(self.struct_0x34e793f1),
            0xe8625e92: LazyBound(self.struct_0xe8625e92),
            0x4d818d5d: LazyBound(self.struct_0x4d818d5d),
            0x4a5f5bd9: LazyBound(self.struct_0x4a5f5bd9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf8ab7dfb, 'input_media_contact')
    def struct_0xf8ab7dfb(self):
        return (
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'vcard' / TString)

    @constructor(0xa8763ab5, 'input_media_document')
    def struct_0xa8763ab5(self):
        return Struct(
            'sname' / Computed('input_media_document'),
            'signature' / Hex(Const(0xa8763ab5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=4,
                                has_video_cover=8,
                                has_video_timestamp=16,
                                has_ttl_seconds=1,
                                has_query=2),
            'id' / self.input_document_structures('id'),
            'video_cover' / If(this.flags.has_video_cover, self.input_photo_structures('video_cover')),
            'video_timestamp' / If(this.flags.has_video_timestamp, Int32ul),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul),
            'query' / If(this.flags.has_query, TString))

    @constructor(0xd33f43f3, 'input_media_game')
    def struct_0xd33f43f3(self):
        return ['id' / self.input_game_structures('id')]

    @constructor(0xe66fbf7b, 'input_media_dice')
    def struct_0xe66fbf7b(self):
        return ['emoticon' / TString]

    @constructor(0xf9c44144, 'input_media_geo_point')
    def struct_0xf9c44144(self):
        return ['geo_point' / self.input_geo_point_structures('geo_point')]

    @constructor(0x779600f9, 'input_media_document_external')
    def struct_0x779600f9(self):
        return Struct(
            'sname' / Computed('input_media_document_external'),
            'signature' / Hex(Const(0x779600f9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=2,
                                has_ttl_seconds=1,
                                has_video_cover=4,
                                has_video_timestamp=8),
            'url' / TString,
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul),
            'video_cover' / If(this.flags.has_video_cover, self.input_photo_structures('video_cover')),
            'video_timestamp' / If(this.flags.has_video_timestamp, Int32ul))

    @constructor(0x9664f57f, 'input_media_empty')
    def struct_0x9664f57f(self):
        return []

    @constructor(0x0f94e5f1, 'input_media_poll')
    def struct_0x0f94e5f1(self):
        return Struct(
            'sname' / Computed('input_media_poll'),
            'signature' / Hex(Const(0x0f94e5f1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_correct_answers=1,
                                has_solution=2),
            'poll' / self.poll_structures('poll'),
            'correct_answers' / If(this.flags.has_correct_answers, self.vector(TBytes, 'correct_answers')),
            'solution' / If(this.flags.has_solution, TString),
            'solution_entities' / If(this.flags.has_solution, self.vector(self.message_entity_structures('solution_entities'), 'solution_entities')))

    @constructor(0x1e287d04, 'input_media_uploaded_photo')
    def struct_0x1e287d04(self):
        return Struct(
            'sname' / Computed('input_media_uploaded_photo'),
            'signature' / Hex(Const(0x1e287d04, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=4,
                                has_stickers=1,
                                has_ttl_seconds=2),
            'file' / self.input_file_structures('file'),
            'stickers' / If(this.flags.has_stickers, self.vector(self.input_document_structures('stickers'), 'stickers')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xc13d1c11, 'input_media_venue')
    def struct_0xc13d1c11(self):
        return (
            'geo_point' / self.input_geo_point_structures('geo_point'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString,
            'venue_type' / TString)

    @constructor(0x971fa843, 'input_media_geo_live')
    def struct_0x971fa843(self):
        return Struct(
            'sname' / Computed('input_media_geo_live'),
            'signature' / Hex(Const(0x971fa843, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_stopped=1,
                                has_heading=4,
                                has_period=2,
                                has_proximity_notification_radius=8),
            'geo_point' / self.input_geo_point_structures('geo_point'),
            'heading' / If(this.flags.has_heading, Int32ul),
            'period' / If(this.flags.has_period, Int32ul),
            'proximity_notification_radius' / If(this.flags.has_proximity_notification_radius, Int32ul))

    @constructor(0x037c9330, 'input_media_uploaded_document')
    def struct_0x037c9330(self):
        return Struct(
            'sname' / Computed('input_media_uploaded_document'),
            'signature' / Hex(Const(0x037c9330, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nosound_video=8,
                                is_force_file=16,
                                is_spoiler=32,
                                has_thumb=4,
                                has_stickers=1,
                                has_video_cover=64,
                                has_video_timestamp=128,
                                has_ttl_seconds=2),
            'file' / self.input_file_structures('file'),
            'thumb' / If(this.flags.has_thumb, self.input_file_structures('thumb')),
            'mime_type' / TString,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'),
            'stickers' / If(this.flags.has_stickers, self.vector(self.input_document_structures('stickers'), 'stickers')),
            'video_cover' / If(this.flags.has_video_cover, self.input_photo_structures('video_cover')),
            'video_timestamp' / If(this.flags.has_video_timestamp, Int32ul),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xe5bbfe1a, 'input_media_photo_external')
    def struct_0xe5bbfe1a(self):
        return Struct(
            'sname' / Computed('input_media_photo_external'),
            'signature' / Hex(Const(0xe5bbfe1a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=2,
                                has_ttl_seconds=1),
            'url' / TString,
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xb3ba0635, 'input_media_photo')
    def struct_0xb3ba0635(self):
        return Struct(
            'sname' / Computed('input_media_photo'),
            'signature' / Hex(Const(0xb3ba0635, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=2,
                                has_ttl_seconds=1),
            'id' / self.input_photo_structures('id'),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xc21b8849, 'input_media_web_page')
    def struct_0xc21b8849(self):
        return Struct(
            'sname' / Computed('input_media_web_page'),
            'signature' / Hex(Const(0xc21b8849, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force_large_media=1,
                                is_force_small_media=2,
                                is_optional=4),
            'url' / TString)

    @constructor(0xaa661fc3, 'input_media_paid_media_layer186')
    def struct_0xaa661fc3(self):
        return (
            'stars_amount' / Int64ul,
            'extended_media' / self.vector(self.input_media_structures('extended_media'), 'extended_media'))

    @constructor(0xc4103386, 'input_media_paid_media')
    def struct_0xc4103386(self):
        return Struct(
            'sname' / Computed('input_media_paid_media'),
            'signature' / Hex(Const(0xc4103386, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_payload=1),
            'stars_amount' / Int64ul,
            'extended_media' / self.vector(self.input_media_structures('extended_media'), 'extended_media'),
            'payload' / If(this.flags.has_payload, TString))

    @structures
    def input_media_structures(self, name):
        tag_map = {
            0xf8ab7dfb: LazyBound(self.struct_0xf8ab7dfb),
            0xa8763ab5: LazyBound(self.struct_0xa8763ab5),
            0xd33f43f3: LazyBound(self.struct_0xd33f43f3),
            0xe66fbf7b: LazyBound(self.struct_0xe66fbf7b),
            0xf9c44144: LazyBound(self.struct_0xf9c44144),
            0x779600f9: LazyBound(self.struct_0x779600f9),
            0x9664f57f: LazyBound(self.struct_0x9664f57f),
            0x0f94e5f1: LazyBound(self.struct_0x0f94e5f1),
            0x1e287d04: LazyBound(self.struct_0x1e287d04),
            0xc13d1c11: LazyBound(self.struct_0xc13d1c11),
            0x971fa843: LazyBound(self.struct_0x971fa843),
            0x037c9330: LazyBound(self.struct_0x037c9330),
            0xe5bbfe1a: LazyBound(self.struct_0xe5bbfe1a),
            0xb3ba0635: LazyBound(self.struct_0xb3ba0635),
            0xc21b8849: LazyBound(self.struct_0xc21b8849),
            0xaa661fc3: LazyBound(self.struct_0xaa661fc3),
            0xc4103386: LazyBound(self.struct_0xc4103386)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4a95e84e, 'input_notify_chats')
    def struct_0x4a95e84e(self):
        return []

    @constructor(0xb8bc5b0c, 'input_notify_peer')
    def struct_0xb8bc5b0c(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x193b4417, 'input_notify_users')
    def struct_0x193b4417(self):
        return []

    @constructor(0xb1db7c7e, 'input_notify_broadcasts')
    def struct_0xb1db7c7e(self):
        return []

    @constructor(0x5c467992, 'input_notify_forum_topic')
    def struct_0x5c467992(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / Int32ul)

    @structures
    def input_notify_peer_structures(self, name):
        tag_map = {
            0x4a95e84e: LazyBound(self.struct_0x4a95e84e),
            0xb8bc5b0c: LazyBound(self.struct_0xb8bc5b0c),
            0x193b4417: LazyBound(self.struct_0x193b4417),
            0xb1db7c7e: LazyBound(self.struct_0xb1db7c7e),
            0x5c467992: LazyBound(self.struct_0x5c467992)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3417d728, 'input_payment_credentials')
    def struct_0x3417d728(self):
        return Struct(
            'sname' / Computed('input_payment_credentials'),
            'signature' / Hex(Const(0x3417d728, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_save=1),
            'data' / self.struct_0x7d748d04())

    @constructor(0x8ac32801, 'input_payment_credentials_google_pay')
    def struct_0x8ac32801(self):
        return ['payment_token' / self.struct_0x7d748d04()]

    @constructor(0xc10eb2cf, 'input_payment_credentials_saved')
    def struct_0xc10eb2cf(self):
        return (
            'id' / TString,
            'tmp_password' / TBytes)

    @structures
    def input_payment_credentials_structures(self, name):
        tag_map = {
            0x3417d728: LazyBound(self.struct_0x3417d728),
            0x8ac32801: LazyBound(self.struct_0x8ac32801),
            0xc10eb2cf: LazyBound(self.struct_0xc10eb2cf)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7da07ec9, 'input_peer_self')
    def struct_0x7da07ec9(self):
        return []

    @constructor(0xa87b0a1c, 'input_peer_user_from_message')
    def struct_0xa87b0a1c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'user_id' / Int64ul)

    @constructor(0xdde8a54c, 'input_peer_user')
    def struct_0xdde8a54c(self):
        return (
            'user_id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x179be863, 'input_peer_chat_layer131')
    def struct_0x179be863(self):
        return ['chat_id' / Int32ul]

    @constructor(0x27bcbbfc, 'input_peer_channel')
    def struct_0x27bcbbfc(self):
        return (
            'channel_id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x7b8e7de6, 'input_peer_user_layer131')
    def struct_0x7b8e7de6(self):
        return (
            'user_id' / Int32ul,
            'access_hash' / Int64ul)

    @constructor(0x7f3b18ea, 'input_peer_empty')
    def struct_0x7f3b18ea(self):
        return []

    @constructor(0xbd2a0840, 'input_peer_channel_from_message')
    def struct_0xbd2a0840(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'channel_id' / Int64ul)

    @constructor(0x35a95cb9, 'input_peer_chat')
    def struct_0x35a95cb9(self):
        return ['chat_id' / Int64ul]

    @constructor(0x20adaef8, 'input_peer_channel_layer131')
    def struct_0x20adaef8(self):
        return (
            'channel_id' / Int32ul,
            'access_hash' / Int64ul)

    @constructor(0x9c95f7bb, 'input_peer_channel_from_message_layer131')
    def struct_0x9c95f7bb(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'channel_id' / Int32ul)

    @constructor(0x17bae2e6, 'input_peer_user_from_message_layer131')
    def struct_0x17bae2e6(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'user_id' / Int32ul)

    @structures
    def input_peer_structures(self, name):
        tag_map = {
            0x7da07ec9: LazyBound(self.struct_0x7da07ec9),
            0xa87b0a1c: LazyBound(self.struct_0xa87b0a1c),
            0xdde8a54c: LazyBound(self.struct_0xdde8a54c),
            0x179be863: LazyBound(self.struct_0x179be863),
            0x27bcbbfc: LazyBound(self.struct_0x27bcbbfc),
            0x7b8e7de6: LazyBound(self.struct_0x7b8e7de6),
            0x7f3b18ea: LazyBound(self.struct_0x7f3b18ea),
            0xbd2a0840: LazyBound(self.struct_0xbd2a0840),
            0x35a95cb9: LazyBound(self.struct_0x35a95cb9),
            0x20adaef8: LazyBound(self.struct_0x20adaef8),
            0x9c95f7bb: LazyBound(self.struct_0x9c95f7bb),
            0x17bae2e6: LazyBound(self.struct_0x17bae2e6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1cd7bf0d, 'input_photo_empty')
    def struct_0x1cd7bf0d(self):
        return []

    @constructor(0x3bb3b94a, 'input_photo')
    def struct_0x3bb3b94a(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes)

    @structures
    def input_photo_structures(self, name):
        tag_map = {
            0x1cd7bf0d: LazyBound(self.struct_0x1cd7bf0d),
            0x3bb3b94a: LazyBound(self.struct_0x3bb3b94a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4f96cb18, 'input_privacy_key_status_timestamp')
    def struct_0x4f96cb18(self):
        return []

    @constructor(0xbdfb0426, 'input_privacy_key_chat_invite')
    def struct_0xbdfb0426(self):
        return []

    @constructor(0xfabadc5f, 'input_privacy_key_phone_call')
    def struct_0xfabadc5f(self):
        return []

    @constructor(0xa4dd4c08, 'input_privacy_key_forwards')
    def struct_0xa4dd4c08(self):
        return []

    @constructor(0x5719bacc, 'input_privacy_key_profile_photo')
    def struct_0x5719bacc(self):
        return []

    @constructor(0x0352dafa, 'input_privacy_key_phone_number')
    def struct_0x0352dafa(self):
        return []

    @constructor(0xd1219bdd, 'input_privacy_key_added_by_phone')
    def struct_0xd1219bdd(self):
        return []

    @constructor(0xaee69d68, 'input_privacy_key_voice_messages')
    def struct_0xaee69d68(self):
        return []

    @constructor(0xdb9e70d2, 'input_privacy_key_phonep2p')
    def struct_0xdb9e70d2(self):
        return []

    @constructor(0x3823cc40, 'input_privacy_key_about')
    def struct_0x3823cc40(self):
        return []

    @constructor(0xd65a11cc, 'input_privacy_key_birthday')
    def struct_0xd65a11cc(self):
        return []

    @constructor(0xe1732341, 'input_privacy_key_star_gifts_auto_save')
    def struct_0xe1732341(self):
        return []

    @structures
    def input_privacy_key_structures(self, name):
        tag_map = {
            0x4f96cb18: LazyBound(self.struct_0x4f96cb18),
            0xbdfb0426: LazyBound(self.struct_0xbdfb0426),
            0xfabadc5f: LazyBound(self.struct_0xfabadc5f),
            0xa4dd4c08: LazyBound(self.struct_0xa4dd4c08),
            0x5719bacc: LazyBound(self.struct_0x5719bacc),
            0x0352dafa: LazyBound(self.struct_0x0352dafa),
            0xd1219bdd: LazyBound(self.struct_0xd1219bdd),
            0xaee69d68: LazyBound(self.struct_0xaee69d68),
            0xdb9e70d2: LazyBound(self.struct_0xdb9e70d2),
            0x3823cc40: LazyBound(self.struct_0x3823cc40),
            0xd65a11cc: LazyBound(self.struct_0xd65a11cc),
            0xe1732341: LazyBound(self.struct_0xe1732341)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd66b66c9, 'input_privacy_value_disallow_all')
    def struct_0xd66b66c9(self):
        return []

    @constructor(0x90110467, 'input_privacy_value_disallow_users')
    def struct_0x90110467(self):
        return ['users' / self.vector(self.input_user_structures('users'), 'users')]

    @constructor(0x0d09e07b, 'input_privacy_value_allow_contacts')
    def struct_0x0d09e07b(self):
        return []

    @constructor(0x840649cf, 'input_privacy_value_allow_chat_participants')
    def struct_0x840649cf(self):
        return ['chats' / self.vector(Int64ul, 'chats')]

    @constructor(0x0ba52007, 'input_privacy_value_disallow_contacts')
    def struct_0x0ba52007(self):
        return []

    @constructor(0x184b35ce, 'input_privacy_value_allow_all')
    def struct_0x184b35ce(self):
        return []

    @constructor(0x131cc67f, 'input_privacy_value_allow_users')
    def struct_0x131cc67f(self):
        return ['users' / self.vector(self.input_user_structures('users'), 'users')]

    @constructor(0xe94f0f86, 'input_privacy_value_disallow_chat_participants')
    def struct_0xe94f0f86(self):
        return ['chats' / self.vector(Int64ul, 'chats')]

    @constructor(0x2f453e49, 'input_privacy_value_allow_close_friends')
    def struct_0x2f453e49(self):
        return []

    @constructor(0x77cdc9f1, 'input_privacy_value_allow_premium')
    def struct_0x77cdc9f1(self):
        return []

    @constructor(0x5a4fcce5, 'input_privacy_value_allow_bots')
    def struct_0x5a4fcce5(self):
        return []

    @constructor(0xc4e57915, 'input_privacy_value_disallow_bots')
    def struct_0xc4e57915(self):
        return []

    @structures
    def input_privacy_rule_structures(self, name):
        tag_map = {
            0xd66b66c9: LazyBound(self.struct_0xd66b66c9),
            0x90110467: LazyBound(self.struct_0x90110467),
            0x0d09e07b: LazyBound(self.struct_0x0d09e07b),
            0x840649cf: LazyBound(self.struct_0x840649cf),
            0x0ba52007: LazyBound(self.struct_0x0ba52007),
            0x184b35ce: LazyBound(self.struct_0x184b35ce),
            0x131cc67f: LazyBound(self.struct_0x131cc67f),
            0xe94f0f86: LazyBound(self.struct_0xe94f0f86),
            0x2f453e49: LazyBound(self.struct_0x2f453e49),
            0x77cdc9f1: LazyBound(self.struct_0x77cdc9f1),
            0x5a4fcce5: LazyBound(self.struct_0x5a4fcce5),
            0xc4e57915: LazyBound(self.struct_0xc4e57915)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x24596d41, 'input_quick_reply_shortcut')
    def struct_0x24596d41(self):
        return ['shortcut' / TString]

    @constructor(0x01190cf1, 'input_quick_reply_shortcut_id')
    def struct_0x01190cf1(self):
        return ['shortcut_id' / Int32ul]

    @structures
    def input_quick_reply_shortcut_structures(self, name):
        tag_map = {
            0x24596d41: LazyBound(self.struct_0x24596d41),
            0x01190cf1: LazyBound(self.struct_0x01190cf1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x22c0f6d5, 'input_reply_to_message')
    def struct_0x22c0f6d5(self):
        return Struct(
            'sname' / Computed('input_reply_to_message'),
            'signature' / Hex(Const(0x22c0f6d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1,
                                has_reply_to_peer_id=2,
                                has_quote_text=4,
                                has_quote_entities=8,
                                has_quote_offset=16),
            'reply_to_msg_id' / Int32ul,
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.input_peer_structures('reply_to_peer_id')),
            'quote_text' / If(this.flags.has_quote_text, TString),
            'quote_entities' / If(this.flags.has_quote_entities, self.vector(self.message_entity_structures('quote_entities'), 'quote_entities')),
            'quote_offset' / If(this.flags.has_quote_offset, Int32ul))

    @constructor(0x073ec805, 'input_reply_to_message_layer166')
    def struct_0x073ec805(self):
        return Struct(
            'sname' / Computed('input_reply_to_message_layer166'),
            'signature' / Hex(Const(0x073ec805, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1,
                                has_reply_to_peer_id=2,
                                has_quote_text=4,
                                has_quote_entities=8),
            'reply_to_msg_id' / Int32ul,
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.input_peer_structures('reply_to_peer_id')),
            'quote_text' / If(this.flags.has_quote_text, TString),
            'quote_entities' / If(this.flags.has_quote_entities, self.vector(self.message_entity_structures('quote_entities'), 'quote_entities')))

    @constructor(0x5881323a, 'input_reply_to_story')
    def struct_0x5881323a(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'story_id' / Int32ul)

    @structures
    def input_reply_to_structures(self, name):
        tag_map = {
            0x22c0f6d5: LazyBound(self.struct_0x22c0f6d5),
            0x073ec805: LazyBound(self.struct_0x073ec805),
            0x5881323a: LazyBound(self.struct_0x5881323a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3334b0f0, 'input_secure_file_uploaded')
    def struct_0x3334b0f0(self):
        return (
            'id' / Int64ul,
            'parts' / Int32ul,
            'md5_checksum' / TString,
            'file_hash' / TBytes,
            'secret' / TBytes)

    @constructor(0x5367e5be, 'input_secure_file')
    def struct_0x5367e5be(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @structures
    def input_secure_file_structures(self, name):
        tag_map = {
            0x3334b0f0: LazyBound(self.struct_0x3334b0f0),
            0x5367e5be: LazyBound(self.struct_0x5367e5be)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xffb62b95, 'input_sticker_set_empty')
    def struct_0xffb62b95(self):
        return []

    @constructor(0x9de7a269, 'input_sticker_set_id')
    def struct_0x9de7a269(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x861cc8a0, 'input_sticker_set_short_name')
    def struct_0x861cc8a0(self):
        return ['short_name' / TString]

    @constructor(0x028703c8, 'input_sticker_set_animated_emoji')
    def struct_0x028703c8(self):
        return []

    @constructor(0xe67f520e, 'input_sticker_set_dice')
    def struct_0xe67f520e(self):
        return ['emoticon' / TString]

    @constructor(0xc88b3b02, 'input_sticker_set_premium_gifts')
    def struct_0xc88b3b02(self):
        return []

    @constructor(0x29d0f5ee, 'input_sticker_set_emoji_default_statuses')
    def struct_0x29d0f5ee(self):
        return []

    @constructor(0x04c4d4ce, 'input_sticker_set_emoji_generic_animations')
    def struct_0x04c4d4ce(self):
        return []

    @constructor(0x44c1f8e9, 'input_sticker_set_emoji_default_topic_icons')
    def struct_0x44c1f8e9(self):
        return []

    @constructor(0x49748553, 'input_sticker_set_emoji_channel_default_statuses')
    def struct_0x49748553(self):
        return []

    @structures
    def input_sticker_set_structures(self, name):
        tag_map = {
            0xffb62b95: LazyBound(self.struct_0xffb62b95),
            0x9de7a269: LazyBound(self.struct_0x9de7a269),
            0x861cc8a0: LazyBound(self.struct_0x861cc8a0),
            0x028703c8: LazyBound(self.struct_0x028703c8),
            0xe67f520e: LazyBound(self.struct_0xe67f520e),
            0xc88b3b02: LazyBound(self.struct_0xc88b3b02),
            0x29d0f5ee: LazyBound(self.struct_0x29d0f5ee),
            0x04c4d4ce: LazyBound(self.struct_0x04c4d4ce),
            0x44c1f8e9: LazyBound(self.struct_0x44c1f8e9),
            0x49748553: LazyBound(self.struct_0x49748553)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x0438865b, 'input_stickered_media_document')
    def struct_0x0438865b(self):
        return ['id' / self.input_document_structures('id')]

    @constructor(0x4a992157, 'input_stickered_media_photo')
    def struct_0x4a992157(self):
        return ['id' / self.input_photo_structures('id')]

    @structures
    def input_stickered_media_structures(self, name):
        tag_map = {
            0x0438865b: LazyBound(self.struct_0x0438865b),
            0x4a992157: LazyBound(self.struct_0x4a992157)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x616f7fe8, 'input_store_payment_gift_premium')
    def struct_0x616f7fe8(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0xfb790393, 'input_store_payment_premium_gift_code')
    def struct_0xfb790393(self):
        return Struct(
            'sname' / Computed('input_store_payment_premium_gift_code'),
            'signature' / Hex(Const(0xfb790393, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_boost_peer=1,
                                has_message=2),
            'users' / self.vector(self.input_user_structures('users'), 'users'),
            'boost_peer' / If(this.flags.has_boost_peer, self.input_peer_structures('boost_peer')),
            'currency' / TString,
            'amount' / Int64ul,
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @constructor(0xa6751e66, 'input_store_payment_premium_subscription')
    def struct_0xa6751e66(self):
        return Struct(
            'sname' / Computed('input_store_payment_premium_subscription'),
            'signature' / Hex(Const(0xa6751e66, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_restore=1,
                                is_upgrade=2))

    @constructor(0x160544ca, 'input_store_payment_premium_giveaway')
    def struct_0x160544ca(self):
        return Struct(
            'sname' / Computed('input_store_payment_premium_giveaway'),
            'signature' / Hex(Const(0x160544ca, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_winners_are_visible=8,
                                has_additional_peers=2,
                                has_countries_iso2=4,
                                has_prize_description=16),
            'boost_peer' / self.input_peer_structures('boost_peer'),
            'additional_peers' / If(this.flags.has_additional_peers, self.vector(self.input_peer_structures('additional_peers'), 'additional_peers')),
            'countries_iso2' / If(this.flags.has_countries_iso2, self.vector(TString, 'countries_iso2')),
            'prize_description' / If(this.flags.has_prize_description, TString),
            'random_id' / Int64ul,
            'until_date' / TTimestamp,
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0x1d741ef7, 'input_store_payment_stars_gift')
    def struct_0x1d741ef7(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'stars' / Int64ul,
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0xdddd0f56, 'input_store_payment_stars_topup')
    def struct_0xdddd0f56(self):
        return (
            'stars' / Int64ul,
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0x751f08fa, 'input_store_payment_stars_giveaway')
    def struct_0x751f08fa(self):
        return Struct(
            'sname' / Computed('input_store_payment_stars_giveaway'),
            'signature' / Hex(Const(0x751f08fa, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_winners_are_visible=8,
                                has_additional_peers=2,
                                has_countries_iso2=4,
                                has_prize_description=16),
            'stars' / Int64ul,
            'boost_peer' / self.input_peer_structures('boost_peer'),
            'additional_peers' / If(this.flags.has_additional_peers, self.vector(self.input_peer_structures('additional_peers'), 'additional_peers')),
            'countries_iso2' / If(this.flags.has_countries_iso2, self.vector(TString, 'countries_iso2')),
            'prize_description' / If(this.flags.has_prize_description, TString),
            'random_id' / Int64ul,
            'until_date' / TTimestamp,
            'currency' / TString,
            'amount' / Int64ul,
            'users' / Int32ul)

    @structures
    def input_store_payment_purpose_structures(self, name):
        tag_map = {
            0x616f7fe8: LazyBound(self.struct_0x616f7fe8),
            0xfb790393: LazyBound(self.struct_0xfb790393),
            0xa6751e66: LazyBound(self.struct_0xa6751e66),
            0x160544ca: LazyBound(self.struct_0x160544ca),
            0x1d741ef7: LazyBound(self.struct_0x1d741ef7),
            0xdddd0f56: LazyBound(self.struct_0xdddd0f56),
            0x751f08fa: LazyBound(self.struct_0x751f08fa)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf5890df1, 'input_theme_slug')
    def struct_0xf5890df1(self):
        return ['slug' / TString]

    @constructor(0x3c5693e9, 'input_theme')
    def struct_0x3c5693e9(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @structures
    def input_theme_structures(self, name):
        tag_map = {
            0xf5890df1: LazyBound(self.struct_0xf5890df1),
            0x3c5693e9: LazyBound(self.struct_0x3c5693e9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf7c1b13f, 'input_user_self')
    def struct_0xf7c1b13f(self):
        return []

    @constructor(0xf21158c6, 'input_user')
    def struct_0xf21158c6(self):
        return (
            'user_id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0xb98886cf, 'input_user_empty')
    def struct_0xb98886cf(self):
        return []

    @constructor(0x1da448e2, 'input_user_from_message')
    def struct_0x1da448e2(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'user_id' / Int64ul)

    @structures
    def input_user_structures(self, name):
        tag_map = {
            0xf7c1b13f: LazyBound(self.struct_0xf7c1b13f),
            0xf21158c6: LazyBound(self.struct_0xf21158c6),
            0xb98886cf: LazyBound(self.struct_0xb98886cf),
            0x1da448e2: LazyBound(self.struct_0x1da448e2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe630b979, 'input_wall_paper')
    def struct_0xe630b979(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x967a462e, 'input_wall_paper_no_file')
    def struct_0x967a462e(self):
        return ['id' / Int64ul]

    @constructor(0x72091c80, 'input_wall_paper_slug')
    def struct_0x72091c80(self):
        return ['slug' / TString]

    @structures
    def input_wall_paper_structures(self, name):
        tag_map = {
            0xe630b979: LazyBound(self.struct_0xe630b979),
            0x967a462e: LazyBound(self.struct_0x967a462e),
            0x72091c80: LazyBound(self.struct_0x72091c80)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9f2221c9, 'input_web_file_geo_point_location')
    def struct_0x9f2221c9(self):
        return (
            'geo_point' / self.input_geo_point_structures('geo_point'),
            'access_hash' / Int64ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'zoom' / Int32ul,
            'scale' / Int32ul)

    @constructor(0xc239d686, 'input_web_file_location')
    def struct_0xc239d686(self):
        return (
            'url' / TString,
            'access_hash' / Int64ul)

    @structures
    def input_web_file_location_structures(self, name):
        tag_map = {
            0x9f2221c9: LazyBound(self.struct_0x9f2221c9),
            0xc239d686: LazyBound(self.struct_0xc239d686)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x049ee584, 'invoice')
    def struct_0x049ee584(self):
        return Struct(
            'sname' / Computed('invoice'),
            'signature' / Hex(Const(0x049ee584, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_test=1,
                                is_name_requested=2,
                                is_phone_requested=4,
                                is_email_requested=8,
                                is_shipping_address_requested=16,
                                is_flexible=32,
                                is_phone_to_provider=64,
                                is_email_to_provider=128,
                                is_recurring=512,
                                has_max_tip_amount=256,
                                has_terms_url=1024,
                                has_subscription_period=2048),
            'currency' / TString,
            'prices' / self.vector(self.struct_0xcb296bf8(), 'prices'),
            'max_tip_amount' / If(this.flags.has_max_tip_amount, Int64ul),
            'suggested_tip_amounts' / If(this.flags.has_max_tip_amount, self.vector(Int64ul, 'suggested_tip_amounts')),
            'terms_url' / If(this.flags.has_terms_url, TString),
            'subscription_period' / If(this.flags.has_subscription_period, Int32ul))

    @constructor(0x5db95a15, 'invoice_layer193')
    def struct_0x5db95a15(self):
        return Struct(
            'sname' / Computed('invoice_layer193'),
            'signature' / Hex(Const(0x5db95a15, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_test=1,
                                is_name_requested=2,
                                is_phone_requested=4,
                                is_email_requested=8,
                                is_shipping_address_requested=16,
                                is_flexible=32,
                                is_phone_to_provider=64,
                                is_email_to_provider=128,
                                is_recurring=512,
                                has_max_tip_amount=256,
                                has_terms_url=1024),
            'currency' / TString,
            'prices' / self.vector(self.struct_0xcb296bf8(), 'prices'),
            'max_tip_amount' / If(this.flags.has_max_tip_amount, Int64ul),
            'suggested_tip_amounts' / If(this.flags.has_max_tip_amount, self.vector(Int64ul, 'suggested_tip_amounts')),
            'terms_url' / If(this.flags.has_terms_url, TString))

    @constructor(0x3e85a91b, 'invoice_layer163')
    def struct_0x3e85a91b(self):
        return Struct(
            'sname' / Computed('invoice_layer163'),
            'signature' / Hex(Const(0x3e85a91b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_test=1,
                                is_name_requested=2,
                                is_phone_requested=4,
                                is_email_requested=8,
                                is_shipping_address_requested=16,
                                is_flexible=32,
                                is_phone_to_provider=64,
                                is_email_to_provider=128,
                                is_recurring=512,
                                has_max_tip_amount=256),
            'currency' / TString,
            'prices' / self.vector(self.struct_0xcb296bf8(), 'prices'),
            'max_tip_amount' / If(this.flags.has_max_tip_amount, Int64ul),
            'suggested_tip_amounts' / If(this.flags.has_max_tip_amount, self.vector(Int64ul, 'suggested_tip_amounts')),
            'terms_url' / If(this.flags.is_recurring, TString))

    @structures
    def invoice_structures(self, name):
        tag_map = {
            0x049ee584: LazyBound(self.struct_0x049ee584),
            0x5db95a15: LazyBound(self.struct_0x5db95a15),
            0x3e85a91b: LazyBound(self.struct_0x3e85a91b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc7345e6a, 'json_bool')
    def struct_0xc7345e6a(self):
        return ['value' / TBool]

    @constructor(0x3f6d7b68, 'json_null')
    def struct_0x3f6d7b68(self):
        return []

    @constructor(0xb71e767a, 'json_string')
    def struct_0xb71e767a(self):
        return ['value' / TString]

    @constructor(0xf7444763, 'json_array')
    def struct_0xf7444763(self):
        return ['value' / self.vector(self.json_value_structures('value'), 'value')]

    @constructor(0x99c1d49d, 'json_object')
    def struct_0x99c1d49d(self):
        return ['value' / self.vector(self.struct_0xc0de1bd9(), 'value')]

    @constructor(0x2be0dfa4, 'json_number')
    def struct_0x2be0dfa4(self):
        return ['value' / Double]

    @structures
    def json_value_structures(self, name):
        tag_map = {
            0xc7345e6a: LazyBound(self.struct_0xc7345e6a),
            0x3f6d7b68: LazyBound(self.struct_0x3f6d7b68),
            0xb71e767a: LazyBound(self.struct_0xb71e767a),
            0xf7444763: LazyBound(self.struct_0xf7444763),
            0x99c1d49d: LazyBound(self.struct_0x99c1d49d),
            0x2be0dfa4: LazyBound(self.struct_0x2be0dfa4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa0c0505c, 'keyboard_button_simple_web_view')
    def struct_0xa0c0505c(self):
        return (
            'text' / TString,
            'url' / TString)

    @constructor(0xb16a6c29, 'keyboard_button_request_phone')
    def struct_0xb16a6c29(self):
        return ['text' / TString]

    @constructor(0x50f41ccf, 'keyboard_button_game')
    def struct_0x50f41ccf(self):
        return ['text' / TString]

    @constructor(0x258aff05, 'keyboard_button_url')
    def struct_0x258aff05(self):
        return (
            'text' / TString,
            'url' / TString)

    @constructor(0x0568a748, 'keyboard_button_switch_inline_layer157')
    def struct_0x0568a748(self):
        return Struct(
            'sname' / Computed('keyboard_button_switch_inline_layer157'),
            'signature' / Hex(Const(0x0568a748, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_same_peer=1),
            'text' / TString,
            'query' / TString)

    @constructor(0xfc796b3f, 'keyboard_button_request_geo_location')
    def struct_0xfc796b3f(self):
        return ['text' / TString]

    @constructor(0x10b78d29, 'keyboard_button_url_auth')
    def struct_0x10b78d29(self):
        return Struct(
            'sname' / Computed('keyboard_button_url_auth'),
            'signature' / Hex(Const(0x10b78d29, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_fwd_text=1),
            'text' / TString,
            'fwd_text' / If(this.flags.has_fwd_text, TString),
            'url' / TString,
            'button_id' / Int32ul)

    @constructor(0xd02e7fd4, 'input_keyboard_button_url_auth')
    def struct_0xd02e7fd4(self):
        return Struct(
            'sname' / Computed('input_keyboard_button_url_auth'),
            'signature' / Hex(Const(0xd02e7fd4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_request_write_access=1,
                                has_fwd_text=2),
            'text' / TString,
            'fwd_text' / If(this.flags.has_fwd_text, TString),
            'url' / TString,
            'bot' / self.input_user_structures('bot'))

    @constructor(0xbbc7515d, 'keyboard_button_request_poll')
    def struct_0xbbc7515d(self):
        return Struct(
            'sname' / Computed('keyboard_button_request_poll'),
            'signature' / Hex(Const(0xbbc7515d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_quiz=1),
            'quiz' / If(this.flags.has_quiz, TBool),
            'text' / TString)

    @constructor(0xafd93fbb, 'keyboard_button_buy')
    def struct_0xafd93fbb(self):
        return ['text' / TString]

    @constructor(0x683a5e46, 'keyboard_button_callback_layer117')
    def struct_0x683a5e46(self):
        return (
            'text' / TString,
            'data' / TBytes)

    @constructor(0x93b9fbb5, 'keyboard_button_switch_inline')
    def struct_0x93b9fbb5(self):
        return Struct(
            'sname' / Computed('keyboard_button_switch_inline'),
            'signature' / Hex(Const(0x93b9fbb5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_same_peer=1,
                                has_peer_types=2),
            'text' / TString,
            'query' / TString,
            'peer_types' / If(this.flags.has_peer_types, self.vector(self.inline_query_peer_type_structures('peer_types'), 'peer_types')))

    @constructor(0xa2fa4880, 'keyboard_button')
    def struct_0xa2fa4880(self):
        return ['text' / TString]

    @constructor(0x35bbdb6b, 'keyboard_button_callback')
    def struct_0x35bbdb6b(self):
        return Struct(
            'sname' / Computed('keyboard_button_callback'),
            'signature' / Hex(Const(0x35bbdb6b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_requires_password=1),
            'text' / TString,
            'data' / TBytes)

    @constructor(0xe988037b, 'input_keyboard_button_user_profile')
    def struct_0xe988037b(self):
        return (
            'text' / TString,
            'input_user' / self.input_user_structures('input_user'))

    @constructor(0x308660c1, 'keyboard_button_user_profile')
    def struct_0x308660c1(self):
        return (
            'text' / TString,
            'user_id' / Int64ul)

    @constructor(0x13767230, 'keyboard_button_web_view')
    def struct_0x13767230(self):
        return (
            'text' / TString,
            'url' / TString)

    @constructor(0x0d0b468c, 'keyboard_button_request_peer_layer168')
    def struct_0x0d0b468c(self):
        return (
            'text' / TString,
            'button_id' / Int32ul,
            'peer_type' / self.request_peer_type_structures('peer_type'))

    @constructor(0x53d7bfd8, 'keyboard_button_request_peer')
    def struct_0x53d7bfd8(self):
        return (
            'text' / TString,
            'button_id' / Int32ul,
            'peer_type' / self.request_peer_type_structures('peer_type'),
            'max_quantity' / Int32ul)

    @constructor(0x75d2698e, 'keyboard_button_copy')
    def struct_0x75d2698e(self):
        return (
            'text' / TString,
            'copy_text' / TString)

    @structures
    def keyboard_button_structures(self, name):
        tag_map = {
            0xa0c0505c: LazyBound(self.struct_0xa0c0505c),
            0xb16a6c29: LazyBound(self.struct_0xb16a6c29),
            0x50f41ccf: LazyBound(self.struct_0x50f41ccf),
            0x258aff05: LazyBound(self.struct_0x258aff05),
            0x0568a748: LazyBound(self.struct_0x0568a748),
            0xfc796b3f: LazyBound(self.struct_0xfc796b3f),
            0x10b78d29: LazyBound(self.struct_0x10b78d29),
            0xd02e7fd4: LazyBound(self.struct_0xd02e7fd4),
            0xbbc7515d: LazyBound(self.struct_0xbbc7515d),
            0xafd93fbb: LazyBound(self.struct_0xafd93fbb),
            0x683a5e46: LazyBound(self.struct_0x683a5e46),
            0x93b9fbb5: LazyBound(self.struct_0x93b9fbb5),
            0xa2fa4880: LazyBound(self.struct_0xa2fa4880),
            0x35bbdb6b: LazyBound(self.struct_0x35bbdb6b),
            0xe988037b: LazyBound(self.struct_0xe988037b),
            0x308660c1: LazyBound(self.struct_0x308660c1),
            0x13767230: LazyBound(self.struct_0x13767230),
            0x0d0b468c: LazyBound(self.struct_0x0d0b468c),
            0x53d7bfd8: LazyBound(self.struct_0x53d7bfd8),
            0x75d2698e: LazyBound(self.struct_0x75d2698e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x6c47ac9f, 'lang_pack_string_pluralized')
    def struct_0x6c47ac9f(self):
        return Struct(
            'sname' / Computed('lang_pack_string_pluralized'),
            'signature' / Hex(Const(0x6c47ac9f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_zero_value=1,
                                has_one_value=2,
                                has_two_value=4,
                                has_few_value=8,
                                has_many_value=16),
            'key' / TString,
            'zero_value' / If(this.flags.has_zero_value, TString),
            'one_value' / If(this.flags.has_one_value, TString),
            'two_value' / If(this.flags.has_two_value, TString),
            'few_value' / If(this.flags.has_few_value, TString),
            'many_value' / If(this.flags.has_many_value, TString),
            'other_value' / TString)

    @constructor(0xcad181f6, 'lang_pack_string')
    def struct_0xcad181f6(self):
        return (
            'key' / TString,
            'value' / TString)

    @constructor(0x2979eeb2, 'lang_pack_string_deleted')
    def struct_0x2979eeb2(self):
        return ['key' / TString]

    @structures
    def lang_pack_string_structures(self, name):
        tag_map = {
            0x6c47ac9f: LazyBound(self.struct_0x6c47ac9f),
            0xcad181f6: LazyBound(self.struct_0xcad181f6),
            0x2979eeb2: LazyBound(self.struct_0x2979eeb2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x555555f5, 'message_action_login_unknown_location')
    def struct_0x555555f5(self):
        return (
            'title' / TString,
            'address' / TString)

    @constructor(0x555555f7, 'message_encrypted_action')
    def struct_0x555555f7(self):
        return ['encrypted_action' / self.decrypted_message_action_structures('encrypted_action')]

    @constructor(0xfae69f56, 'message_action_custom_action')
    def struct_0xfae69f56(self):
        return ['message' / TString]

    @constructor(0xa6638b9a, 'message_action_chat_create_layer131')
    def struct_0xa6638b9a(self):
        return (
            'title' / TString,
            'users' / self.vector(Int32ul, 'users'))

    @constructor(0xbd47cbad, 'message_action_chat_create')
    def struct_0xbd47cbad(self):
        return (
            'title' / TString,
            'users' / self.vector(Int64ul, 'users'))

    @constructor(0x502f92f7, 'message_action_invite_to_group_call')
    def struct_0x502f92f7(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'users' / self.vector(Int64ul, 'users'))

    @constructor(0x15cefd00, 'message_action_chat_add_user')
    def struct_0x15cefd00(self):
        return ['users' / self.vector(Int64ul, 'users')]

    @constructor(0xa43f30cc, 'message_action_chat_delete_user')
    def struct_0xa43f30cc(self):
        return ['user_id' / Int64ul]

    @constructor(0x51bdb021, 'message_action_chat_migrate_to_layer131')
    def struct_0x51bdb021(self):
        return ['channel_id' / Int32ul]

    @constructor(0xe1037f92, 'message_action_chat_migrate_to')
    def struct_0xe1037f92(self):
        return ['channel_id' / Int64ul]

    @constructor(0xa80f51e4, 'message_action_giveaway_launch')
    def struct_0xa80f51e4(self):
        return Struct(
            'sname' / Computed('message_action_giveaway_launch'),
            'signature' / Hex(Const(0xa80f51e4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_stars=1),
            'stars' / If(this.flags.has_stars, Int64ul))

    @constructor(0x332ba9ed, 'message_action_giveaway_launch_layer186')
    def struct_0x332ba9ed(self):
        return []

    @constructor(0x87e2f155, 'message_action_giveaway_results')
    def struct_0x87e2f155(self):
        return Struct(
            'sname' / Computed('message_action_giveaway_results'),
            'signature' / Hex(Const(0x87e2f155, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_stars=1),
            'winners_count' / Int32ul,
            'unclaimed_count' / Int32ul)

    @constructor(0x2a9fadc5, 'message_action_giveaway_results_layer186')
    def struct_0x2a9fadc5(self):
        return (
            'winners_count' / Int32ul,
            'unclaimed_count' / Int32ul)

    @constructor(0xea3948e9, 'message_action_channel_migrate_from')
    def struct_0xea3948e9(self):
        return (
            'title' / TString,
            'chat_id' / Int64ul)

    @constructor(0x7a0d7f42, 'message_action_group_call')
    def struct_0x7a0d7f42(self):
        return Struct(
            'sname' / Computed('message_action_group_call'),
            'signature' / Hex(Const(0x7a0d7f42, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_duration=1),
            'call' / self.struct_0xd8aa840f(),
            'duration' / If(this.flags.has_duration, Int32ul))

    @constructor(0xaa786345, 'message_action_set_chat_theme')
    def struct_0xaa786345(self):
        return ['emoticon' / TString]

    @constructor(0x4792929b, 'message_action_screenshot_taken')
    def struct_0x4792929b(self):
        return []

    @constructor(0x01baa035, 'message_action_phone_number_request')
    def struct_0x01baa035(self):
        return []

    @constructor(0xebbca3cb, 'message_action_chat_joined_by_request')
    def struct_0xebbca3cb(self):
        return []

    @constructor(0x9fbab604, 'message_action_history_clear')
    def struct_0x9fbab604(self):
        return []

    @constructor(0x7fcb13a8, 'message_action_chat_edit_photo')
    def struct_0x7fcb13a8(self):
        return ['photo' / self.photo_structures('photo')]

    @constructor(0x031224c3, 'message_action_chat_joined_by_link')
    def struct_0x031224c3(self):
        return ['inviter_id' / Int64ul]

    @constructor(0xb055eaee, 'message_action_channel_migrate_from_layer131')
    def struct_0xb055eaee(self):
        return (
            'title' / TString,
            'chat_id' / Int32ul)

    @constructor(0x488a7337, 'message_action_chat_add_user_layer131')
    def struct_0x488a7337(self):
        return ['users' / self.vector(Int32ul, 'users')]

    @constructor(0xb2ae9b0c, 'message_action_chat_delete_user_layer131')
    def struct_0xb2ae9b0c(self):
        return ['user_id' / Int32ul]

    @constructor(0x55555557, 'message_action_created_broadcast_list')
    def struct_0x55555557(self):
        return []

    @constructor(0xbc44a927, 'message_action_set_chat_wall_paper_layer166')
    def struct_0xbc44a927(self):
        return ['wallpaper' / self.wall_paper_structures('wallpaper')]

    @constructor(0x5060a3f4, 'message_action_set_chat_wall_paper')
    def struct_0x5060a3f4(self):
        return Struct(
            'sname' / Computed('message_action_set_chat_wall_paper'),
            'signature' / Hex(Const(0x5060a3f4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_same=1,
                                is_for_both=2),
            'wallpaper' / self.wall_paper_structures('wallpaper'))

    @constructor(0x55555550, 'message_action_user_joined')
    def struct_0x55555550(self):
        return []

    @constructor(0x56d03994, 'message_action_gift_code')
    def struct_0x56d03994(self):
        return Struct(
            'sname' / Computed('message_action_gift_code'),
            'signature' / Hex(Const(0x56d03994, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_giveaway=1,
                                is_unclaimed=4,
                                has_boost_peer=2,
                                has_crypto_currency=8,
                                has_message=16),
            'boost_peer' / If(this.flags.has_boost_peer, self.peer_structures('boost_peer')),
            'months' / Int32ul,
            'slug' / TString,
            'currency' / If(this.flags.is_unclaimed, TString),
            'amount' / If(this.flags.is_unclaimed, Int64ul),
            'crypto_currency' / If(this.flags.has_crypto_currency, TString),
            'crypto_amount' / If(this.flags.has_crypto_currency, Int64ul),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @constructor(0x678c2e09, 'message_action_gift_code_layer189')
    def struct_0x678c2e09(self):
        return Struct(
            'sname' / Computed('message_action_gift_code_layer189'),
            'signature' / Hex(Const(0x678c2e09, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_giveaway=1,
                                is_unclaimed=4,
                                has_boost_peer=2,
                                has_crypto_currency=8),
            'boost_peer' / If(this.flags.has_boost_peer, self.peer_structures('boost_peer')),
            'months' / Int32ul,
            'slug' / TString,
            'currency' / If(this.flags.is_unclaimed, TString),
            'amount' / If(this.flags.is_unclaimed, Int64ul),
            'crypto_currency' / If(this.flags.has_crypto_currency, TString),
            'crypto_amount' / If(this.flags.has_crypto_currency, Int64ul))

    @constructor(0xd2cfdb0e, 'message_action_gift_code_layer167')
    def struct_0xd2cfdb0e(self):
        return Struct(
            'sname' / Computed('message_action_gift_code_layer167'),
            'signature' / Hex(Const(0xd2cfdb0e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_giveaway=1,
                                is_unclaimed=4,
                                has_boost_peer=2),
            'boost_peer' / If(this.flags.has_boost_peer, self.peer_structures('boost_peer')),
            'months' / Int32ul,
            'slug' / TString)

    @constructor(0xb18a431c, 'message_action_topic_edit_layer149')
    def struct_0xb18a431c(self):
        return Struct(
            'sname' / Computed('message_action_topic_edit_layer149'),
            'signature' / Hex(Const(0xb18a431c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1,
                                has_icon_emoji_id=2,
                                has_closed=4),
            'title' / If(this.flags.has_title, TString),
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'closed' / If(this.flags.has_closed, TBool))

    @constructor(0xc0944820, 'message_action_topic_edit')
    def struct_0xc0944820(self):
        return Struct(
            'sname' / Computed('message_action_topic_edit'),
            'signature' / Hex(Const(0xc0944820, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1,
                                has_icon_emoji_id=2,
                                has_closed=4,
                                has_hidden=8),
            'title' / If(this.flags.has_title, TString),
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'closed' / If(this.flags.has_closed, TBool),
            'hidden' / If(this.flags.has_hidden, TBool))

    @constructor(0x55555551, 'message_action_user_updated_photo')
    def struct_0x55555551(self):
        return ['new_user_photo' / self.user_profile_photo_structures('new_user_photo')]

    @constructor(0x5e3cfc4b, 'message_action_chat_add_user_old')
    def struct_0x5e3cfc4b(self):
        return ['user_id' / Int32ul]

    @constructor(0x55555552, 'message_action_ttl_change')
    def struct_0x55555552(self):
        return ['ttl' / Int32ul]

    @constructor(0x3c134d7b, 'message_action_set_messages_ttl')
    def struct_0x3c134d7b(self):
        return Struct(
            'sname' / Computed('message_action_set_messages_ttl'),
            'signature' / Hex(Const(0x3c134d7b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_auto_setting_from=1),
            'period' / Int32ul,
            'auto_setting_from' / If(this.flags.has_auto_setting_from, Int64ul))

    @constructor(0xaa1afbfd, 'message_action_set_messages_ttl_layer149')
    def struct_0xaa1afbfd(self):
        return ['period' / Int32ul]

    @constructor(0xd95c6154, 'message_action_secure_values_sent')
    def struct_0xd95c6154(self):
        return ['types' / self.vector(self.secure_value_type_structures('types'), 'types')]

    @constructor(0x47dd8079, 'message_action_web_view_data_sent_me')
    def struct_0x47dd8079(self):
        return (
            'text' / TString,
            'data' / TString)

    @constructor(0xb4c38cb5, 'message_action_web_view_data_sent')
    def struct_0xb4c38cb5(self):
        return ['text' / TString]

    @constructor(0xf89cf5e8, 'message_action_chat_joined_by_link_layer131')
    def struct_0xf89cf5e8(self):
        return ['inviter_id' / Int32ul]

    @constructor(0xf3f25f76, 'message_action_contact_sign_up')
    def struct_0xf3f25f76(self):
        return []

    @constructor(0x95d2ac92, 'message_action_channel_create')
    def struct_0x95d2ac92(self):
        return ['title' / TString]

    @constructor(0x94bd38ed, 'message_action_pin_message')
    def struct_0x94bd38ed(self):
        return []

    @constructor(0x98e0d697, 'message_action_geo_proximity_reached')
    def struct_0x98e0d697(self):
        return (
            'from_id' / self.peer_structures('from_id'),
            'to_id' / self.peer_structures('to_id'),
            'distance' / Int32ul)

    @constructor(0x57de635e, 'message_action_suggest_profile_photo')
    def struct_0x57de635e(self):
        return ['photo' / self.photo_structures('photo')]

    @constructor(0xe7e75f97, 'message_action_attach_menu_bot_allowed')
    def struct_0xe7e75f97(self):
        return []

    @constructor(0xc0787d6d, 'message_action_set_same_chat_wall_paper')
    def struct_0xc0787d6d(self):
        return ['wallpaper' / self.wall_paper_structures('wallpaper')]

    @constructor(0x95e3fbef, 'message_action_chat_delete_photo')
    def struct_0x95e3fbef(self):
        return []

    @constructor(0x76b9f11a, 'message_action_invite_to_group_call_layer131')
    def struct_0x76b9f11a(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'users' / self.vector(Int32ul, 'users'))

    @constructor(0x80e11a7f, 'message_action_phone_call')
    def struct_0x80e11a7f(self):
        return Struct(
            'sname' / Computed('message_action_phone_call'),
            'signature' / Hex(Const(0x80e11a7f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=4,
                                has_reason=1,
                                has_duration=2),
            'call_id' / Int64ul,
            'reason' / If(this.flags.has_reason, self.phone_call_discard_reason_structures('reason')),
            'duration' / If(this.flags.has_duration, Int32ul))

    @constructor(0x0d999256, 'message_action_topic_create')
    def struct_0x0d999256(self):
        return Struct(
            'sname' / Computed('message_action_topic_create'),
            'signature' / Hex(Const(0x0d999256, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_icon_emoji_id=1),
            'title' / TString,
            'icon_color' / Int32ul,
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul))

    @constructor(0xb5a1ce5a, 'message_action_chat_edit_title')
    def struct_0xb5a1ce5a(self):
        return ['title' / TString]

    @constructor(0xabe9affe, 'message_action_bot_allowed_layer153')
    def struct_0xabe9affe(self):
        return ['domain' / TString]

    @constructor(0xc516d679, 'message_action_bot_allowed')
    def struct_0xc516d679(self):
        return Struct(
            'sname' / Computed('message_action_bot_allowed'),
            'signature' / Hex(Const(0xc516d679, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_attach_menu=2,
                                is_from_request=8,
                                has_domain=1,
                                has_app=4),
            'domain' / If(this.flags.has_domain, TString),
            'app' / If(this.flags.has_app, self.bot_app_structures('app')))

    @constructor(0xc624b16e, 'message_action_payment_sent')
    def struct_0xc624b16e(self):
        return Struct(
            'sname' / Computed('message_action_payment_sent'),
            'signature' / Hex(Const(0xc624b16e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recurring_init=4,
                                is_recurring_used=8,
                                has_invoice_slug=1,
                                has_subscription_until_date=16),
            'currency' / TString,
            'total_amount' / Int64ul,
            'invoice_slug' / If(this.flags.has_invoice_slug, TString),
            'subscription_until_date' / If(this.flags.has_subscription_until_date, TTimestamp))

    @constructor(0x96163f56, 'message_action_payment_sent_layer193')
    def struct_0x96163f56(self):
        return Struct(
            'sname' / Computed('message_action_payment_sent_layer193'),
            'signature' / Hex(Const(0x96163f56, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recurring_init=4,
                                is_recurring_used=8,
                                has_invoice_slug=1),
            'currency' / TString,
            'total_amount' / Int64ul,
            'invoice_slug' / If(this.flags.has_invoice_slug, TString))

    @constructor(0x40699cd0, 'message_action_payment_sent_layer140')
    def struct_0x40699cd0(self):
        return (
            'currency' / TString,
            'total_amount' / Int64ul)

    @constructor(0xb6aef7b0, 'message_action_empty')
    def struct_0xb6aef7b0(self):
        return []

    @constructor(0x92a72876, 'message_action_game_score')
    def struct_0x92a72876(self):
        return (
            'game_id' / Int64ul,
            'score' / Int32ul)

    @constructor(0xb3a07661, 'message_action_group_call_scheduled')
    def struct_0xb3a07661(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'schedule_date' / TTimestamp)

    @constructor(0xcc02aa6d, 'message_action_boost_apply')
    def struct_0xcc02aa6d(self):
        return ['boosts' / Int32ul]

    @constructor(0xffa00ccc, 'message_action_payment_sent_me')
    def struct_0xffa00ccc(self):
        return Struct(
            'sname' / Computed('message_action_payment_sent_me'),
            'signature' / Hex(Const(0xffa00ccc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recurring_init=4,
                                is_recurring_used=8,
                                has_info=1,
                                has_shipping_option_id=2,
                                has_subscription_until_date=16),
            'currency' / TString,
            'total_amount' / Int64ul,
            'payload' / TBytes,
            'info' / If(this.flags.has_info, self.struct_0x909c3f94()),
            'shipping_option_id' / If(this.flags.has_shipping_option_id, TString),
            'charge' / self.struct_0xea02c27e(),
            'subscription_until_date' / If(this.flags.has_subscription_until_date, TTimestamp))

    @constructor(0x8f31b327, 'message_action_payment_sent_me_layer193')
    def struct_0x8f31b327(self):
        return Struct(
            'sname' / Computed('message_action_payment_sent_me_layer193'),
            'signature' / Hex(Const(0x8f31b327, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recurring_init=4,
                                is_recurring_used=8,
                                has_info=1,
                                has_shipping_option_id=2),
            'currency' / TString,
            'total_amount' / Int64ul,
            'payload' / TBytes,
            'info' / If(this.flags.has_info, self.struct_0x909c3f94()),
            'shipping_option_id' / If(this.flags.has_shipping_option_id, TString),
            'charge' / self.struct_0xea02c27e())

    @constructor(0x6c6274fa, 'message_action_gift_premium')
    def struct_0x6c6274fa(self):
        return Struct(
            'sname' / Computed('message_action_gift_premium'),
            'signature' / Hex(Const(0x6c6274fa, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_crypto_currency=1,
                                has_message=2),
            'currency' / TString,
            'amount' / Int64ul,
            'months' / Int32ul,
            'crypto_currency' / If(this.flags.has_crypto_currency, TString),
            'crypto_amount' / If(this.flags.has_crypto_currency, Int64ul),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @constructor(0xc83d6aec, 'message_action_gift_premium_layer189')
    def struct_0xc83d6aec(self):
        return Struct(
            'sname' / Computed('message_action_gift_premium_layer189'),
            'signature' / Hex(Const(0xc83d6aec, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_crypto_currency=1),
            'currency' / TString,
            'amount' / Int64ul,
            'months' / Int32ul,
            'crypto_currency' / If(this.flags.has_crypto_currency, TString),
            'crypto_amount' / If(this.flags.has_crypto_currency, Int64ul))

    @constructor(0xfe77345d, 'message_action_requested_peer_layer168')
    def struct_0xfe77345d(self):
        return (
            'button_id' / Int32ul,
            'peer' / self.peer_structures('peer'))

    @constructor(0x31518e9b, 'message_action_requested_peer')
    def struct_0x31518e9b(self):
        return (
            'button_id' / Int32ul,
            'peers' / self.vector(self.peer_structures('peers'), 'peers'))

    @constructor(0x41b3e202, 'message_action_payment_refunded')
    def struct_0x41b3e202(self):
        return Struct(
            'sname' / Computed('message_action_payment_refunded'),
            'signature' / Hex(Const(0x41b3e202, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_payload=1),
            'peer' / self.peer_structures('peer'),
            'currency' / TString,
            'total_amount' / Int64ul,
            'payload' / If(this.flags.has_payload, TBytes),
            'charge' / self.struct_0xea02c27e())

    @constructor(0x45d5b021, 'message_action_gift_stars')
    def struct_0x45d5b021(self):
        return Struct(
            'sname' / Computed('message_action_gift_stars'),
            'signature' / Hex(Const(0x45d5b021, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_crypto_currency=1,
                                has_transaction_id=2),
            'currency' / TString,
            'amount' / Int64ul,
            'stars' / Int64ul,
            'crypto_currency' / If(this.flags.has_crypto_currency, TString),
            'crypto_amount' / If(this.flags.has_crypto_currency, Int64ul),
            'transaction_id' / If(this.flags.has_transaction_id, TString))

    @constructor(0xb00c47a2, 'message_action_prize_stars')
    def struct_0xb00c47a2(self):
        return Struct(
            'sname' / Computed('message_action_prize_stars'),
            'signature' / Hex(Const(0xb00c47a2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unclaimed=1),
            'stars' / Int64ul,
            'transaction_id' / TString,
            'boost_peer' / self.peer_structures('boost_peer'),
            'giveaway_msg_id' / Int32ul)

    @constructor(0x4717e8a4, 'message_action_star_gift')
    def struct_0x4717e8a4(self):
        return Struct(
            'sname' / Computed('message_action_star_gift'),
            'signature' / Hex(Const(0x4717e8a4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_name_hidden=1,
                                is_saved=4,
                                is_converted=8,
                                is_upgraded=32,
                                is_transferred=64,
                                is_can_upgrade=1024,
                                is_refunded=512,
                                has_message=2,
                                has_convert_stars=16,
                                has_upgrade_stars=256,
                                has_from_id=2048,
                                has_peer=4096),
            'gift' / self.star_gift_structures('gift'),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()),
            'convert_stars' / If(this.flags.has_convert_stars, Int64ul),
            'upgrade_msg_id' / If(this.flags.is_upgraded, Int32ul),
            'upgrade_stars' / If(this.flags.has_upgrade_stars, Int64ul),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer' / If(this.flags.has_peer, self.peer_structures('peer')),
            'saved_id' / If(this.flags.has_peer, Int64ul))

    @constructor(0xd8f4f0a7, 'message_action_star_gift_layer197')
    def struct_0xd8f4f0a7(self):
        return Struct(
            'sname' / Computed('message_action_star_gift_layer197'),
            'signature' / Hex(Const(0xd8f4f0a7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_name_hidden=1,
                                is_saved=4,
                                is_converted=8,
                                is_upgraded=32,
                                is_transferred=64,
                                is_can_upgrade=1024,
                                is_refunded=512,
                                has_message=2,
                                has_convert_stars=16,
                                has_upgrade_stars=256),
            'gift' / self.star_gift_structures('gift'),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()),
            'convert_stars' / If(this.flags.has_convert_stars, Int64ul),
            'upgrade_msg_id' / If(this.flags.is_upgraded, Int32ul),
            'upgrade_stars' / If(this.flags.has_upgrade_stars, Int64ul))

    @constructor(0x08557637, 'message_action_star_gift_layer195')
    def struct_0x08557637(self):
        return Struct(
            'sname' / Computed('message_action_star_gift_layer195'),
            'signature' / Hex(Const(0x08557637, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_name_hidden=1,
                                is_saved=4,
                                is_converted=8,
                                has_message=2,
                                has_convert_stars=16),
            'gift' / self.star_gift_structures('gift'),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()),
            'convert_stars' / If(this.flags.has_convert_stars, Int64ul))

    @constructor(0x9bb3ef44, 'message_action_star_gift_layer192')
    def struct_0x9bb3ef44(self):
        return Struct(
            'sname' / Computed('message_action_star_gift_layer192'),
            'signature' / Hex(Const(0x9bb3ef44, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_name_hidden=1,
                                is_saved=4,
                                is_converted=8,
                                has_message=2),
            'gift' / self.star_gift_structures('gift'),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()),
            'convert_stars' / Int64ul)

    @constructor(0x26077b99, 'message_action_star_gift_unique_layer197')
    def struct_0x26077b99(self):
        return Struct(
            'sname' / Computed('message_action_star_gift_unique_layer197'),
            'signature' / Hex(Const(0x26077b99, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_upgrade=1,
                                is_transferred=2,
                                is_saved=4,
                                is_refunded=32,
                                has_can_export_at=8,
                                has_transfer_stars=16),
            'gift' / self.star_gift_structures('gift'),
            'can_export_at' / If(this.flags.has_can_export_at, Int32ul),
            'transfer_stars' / If(this.flags.has_transfer_stars, Int64ul))

    @constructor(0xacdfcb81, 'message_action_star_gift_unique')
    def struct_0xacdfcb81(self):
        return Struct(
            'sname' / Computed('message_action_star_gift_unique'),
            'signature' / Hex(Const(0xacdfcb81, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_upgrade=1,
                                is_transferred=2,
                                is_saved=4,
                                is_refunded=32,
                                has_can_export_at=8,
                                has_transfer_stars=16,
                                has_from_id=64,
                                has_peer=128),
            'gift' / self.star_gift_structures('gift'),
            'can_export_at' / If(this.flags.has_can_export_at, Int32ul),
            'transfer_stars' / If(this.flags.has_transfer_stars, Int64ul),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer' / If(this.flags.has_peer, self.peer_structures('peer')),
            'saved_id' / If(this.flags.has_peer, Int64ul))

    @structures
    def message_action_structures(self, name):
        tag_map = {
            0x555555f5: LazyBound(self.struct_0x555555f5),
            0x555555f7: LazyBound(self.struct_0x555555f7),
            0xfae69f56: LazyBound(self.struct_0xfae69f56),
            0xa6638b9a: LazyBound(self.struct_0xa6638b9a),
            0xbd47cbad: LazyBound(self.struct_0xbd47cbad),
            0x502f92f7: LazyBound(self.struct_0x502f92f7),
            0x15cefd00: LazyBound(self.struct_0x15cefd00),
            0xa43f30cc: LazyBound(self.struct_0xa43f30cc),
            0x51bdb021: LazyBound(self.struct_0x51bdb021),
            0xe1037f92: LazyBound(self.struct_0xe1037f92),
            0xa80f51e4: LazyBound(self.struct_0xa80f51e4),
            0x332ba9ed: LazyBound(self.struct_0x332ba9ed),
            0x87e2f155: LazyBound(self.struct_0x87e2f155),
            0x2a9fadc5: LazyBound(self.struct_0x2a9fadc5),
            0xea3948e9: LazyBound(self.struct_0xea3948e9),
            0x7a0d7f42: LazyBound(self.struct_0x7a0d7f42),
            0xaa786345: LazyBound(self.struct_0xaa786345),
            0x4792929b: LazyBound(self.struct_0x4792929b),
            0x01baa035: LazyBound(self.struct_0x01baa035),
            0xebbca3cb: LazyBound(self.struct_0xebbca3cb),
            0x9fbab604: LazyBound(self.struct_0x9fbab604),
            0x7fcb13a8: LazyBound(self.struct_0x7fcb13a8),
            0x031224c3: LazyBound(self.struct_0x031224c3),
            0xb055eaee: LazyBound(self.struct_0xb055eaee),
            0x488a7337: LazyBound(self.struct_0x488a7337),
            0xb2ae9b0c: LazyBound(self.struct_0xb2ae9b0c),
            0x55555557: LazyBound(self.struct_0x55555557),
            0xbc44a927: LazyBound(self.struct_0xbc44a927),
            0x5060a3f4: LazyBound(self.struct_0x5060a3f4),
            0x55555550: LazyBound(self.struct_0x55555550),
            0x56d03994: LazyBound(self.struct_0x56d03994),
            0x678c2e09: LazyBound(self.struct_0x678c2e09),
            0xd2cfdb0e: LazyBound(self.struct_0xd2cfdb0e),
            0xb18a431c: LazyBound(self.struct_0xb18a431c),
            0xc0944820: LazyBound(self.struct_0xc0944820),
            0x55555551: LazyBound(self.struct_0x55555551),
            0x5e3cfc4b: LazyBound(self.struct_0x5e3cfc4b),
            0x55555552: LazyBound(self.struct_0x55555552),
            0x3c134d7b: LazyBound(self.struct_0x3c134d7b),
            0xaa1afbfd: LazyBound(self.struct_0xaa1afbfd),
            0xd95c6154: LazyBound(self.struct_0xd95c6154),
            0x47dd8079: LazyBound(self.struct_0x47dd8079),
            0xb4c38cb5: LazyBound(self.struct_0xb4c38cb5),
            0xf89cf5e8: LazyBound(self.struct_0xf89cf5e8),
            0xf3f25f76: LazyBound(self.struct_0xf3f25f76),
            0x95d2ac92: LazyBound(self.struct_0x95d2ac92),
            0x94bd38ed: LazyBound(self.struct_0x94bd38ed),
            0x98e0d697: LazyBound(self.struct_0x98e0d697),
            0x57de635e: LazyBound(self.struct_0x57de635e),
            0xe7e75f97: LazyBound(self.struct_0xe7e75f97),
            0xc0787d6d: LazyBound(self.struct_0xc0787d6d),
            0x95e3fbef: LazyBound(self.struct_0x95e3fbef),
            0x76b9f11a: LazyBound(self.struct_0x76b9f11a),
            0x80e11a7f: LazyBound(self.struct_0x80e11a7f),
            0x0d999256: LazyBound(self.struct_0x0d999256),
            0xb5a1ce5a: LazyBound(self.struct_0xb5a1ce5a),
            0xabe9affe: LazyBound(self.struct_0xabe9affe),
            0xc516d679: LazyBound(self.struct_0xc516d679),
            0xc624b16e: LazyBound(self.struct_0xc624b16e),
            0x96163f56: LazyBound(self.struct_0x96163f56),
            0x40699cd0: LazyBound(self.struct_0x40699cd0),
            0xb6aef7b0: LazyBound(self.struct_0xb6aef7b0),
            0x92a72876: LazyBound(self.struct_0x92a72876),
            0xb3a07661: LazyBound(self.struct_0xb3a07661),
            0xcc02aa6d: LazyBound(self.struct_0xcc02aa6d),
            0xffa00ccc: LazyBound(self.struct_0xffa00ccc),
            0x8f31b327: LazyBound(self.struct_0x8f31b327),
            0x6c6274fa: LazyBound(self.struct_0x6c6274fa),
            0xc83d6aec: LazyBound(self.struct_0xc83d6aec),
            0xfe77345d: LazyBound(self.struct_0xfe77345d),
            0x31518e9b: LazyBound(self.struct_0x31518e9b),
            0x41b3e202: LazyBound(self.struct_0x41b3e202),
            0x45d5b021: LazyBound(self.struct_0x45d5b021),
            0xb00c47a2: LazyBound(self.struct_0xb00c47a2),
            0x4717e8a4: LazyBound(self.struct_0x4717e8a4),
            0xd8f4f0a7: LazyBound(self.struct_0xd8f4f0a7),
            0x08557637: LazyBound(self.struct_0x08557637),
            0x9bb3ef44: LazyBound(self.struct_0x9bb3ef44),
            0x26077b99: LazyBound(self.struct_0x26077b99),
            0xacdfcb81: LazyBound(self.struct_0xacdfcb81)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x76a6d327, 'message_entity_text_url')
    def struct_0x76a6d327(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'url' / TString)

    @constructor(0x6cef8ac7, 'message_entity_bot_command')
    def struct_0x6cef8ac7(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x64e475c2, 'message_entity_email')
    def struct_0x64e475c2(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x73924be0, 'message_entity_pre')
    def struct_0x73924be0(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'language' / TString)

    @constructor(0xbb92ba95, 'message_entity_unknown')
    def struct_0xbb92ba95(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x6ed02538, 'message_entity_url')
    def struct_0x6ed02538(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x826f8b60, 'message_entity_italic')
    def struct_0x826f8b60(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0xfa04579d, 'message_entity_mention')
    def struct_0xfa04579d(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x32ca960f, 'message_entity_spoiler')
    def struct_0x32ca960f(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x352dca58, 'message_entity_mention_name_layer131')
    def struct_0x352dca58(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'user_id' / Int32ul)

    @constructor(0x208e68c9, 'input_message_entity_mention_name')
    def struct_0x208e68c9(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0x4c4e743f, 'message_entity_cashtag')
    def struct_0x4c4e743f(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0xbd610bc9, 'message_entity_bold')
    def struct_0xbd610bc9(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x6f635b0d, 'message_entity_hashtag')
    def struct_0x6f635b0d(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x28a20571, 'message_entity_code')
    def struct_0x28a20571(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0xbf0693d4, 'message_entity_strike')
    def struct_0xbf0693d4(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0xf1ccaaac, 'message_entity_blockquote')
    def struct_0xf1ccaaac(self):
        return Struct(
            'sname' / Computed('message_entity_blockquote'),
            'signature' / Hex(Const(0xf1ccaaac, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_collapsed=1),
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x020df5d0, 'message_entity_blockquote_layer180')
    def struct_0x020df5d0(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x9c4e7e8b, 'message_entity_underline')
    def struct_0x9c4e7e8b(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x761e6af4, 'message_entity_bank_card')
    def struct_0x761e6af4(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0x9b69e34b, 'message_entity_phone')
    def struct_0x9b69e34b(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul)

    @constructor(0xdc7b1140, 'message_entity_mention_name')
    def struct_0xdc7b1140(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'user_id' / Int64ul)

    @constructor(0xc8cf05f8, 'message_entity_custom_emoji')
    def struct_0xc8cf05f8(self):
        return (
            'offset' / Int32ul,
            'length' / Int32ul,
            'document_id' / Int64ul)

    @structures
    def message_entity_structures(self, name):
        tag_map = {
            0x76a6d327: LazyBound(self.struct_0x76a6d327),
            0x6cef8ac7: LazyBound(self.struct_0x6cef8ac7),
            0x64e475c2: LazyBound(self.struct_0x64e475c2),
            0x73924be0: LazyBound(self.struct_0x73924be0),
            0xbb92ba95: LazyBound(self.struct_0xbb92ba95),
            0x6ed02538: LazyBound(self.struct_0x6ed02538),
            0x826f8b60: LazyBound(self.struct_0x826f8b60),
            0xfa04579d: LazyBound(self.struct_0xfa04579d),
            0x32ca960f: LazyBound(self.struct_0x32ca960f),
            0x352dca58: LazyBound(self.struct_0x352dca58),
            0x208e68c9: LazyBound(self.struct_0x208e68c9),
            0x4c4e743f: LazyBound(self.struct_0x4c4e743f),
            0xbd610bc9: LazyBound(self.struct_0xbd610bc9),
            0x6f635b0d: LazyBound(self.struct_0x6f635b0d),
            0x28a20571: LazyBound(self.struct_0x28a20571),
            0xbf0693d4: LazyBound(self.struct_0xbf0693d4),
            0xf1ccaaac: LazyBound(self.struct_0xf1ccaaac),
            0x020df5d0: LazyBound(self.struct_0x020df5d0),
            0x9c4e7e8b: LazyBound(self.struct_0x9c4e7e8b),
            0x761e6af4: LazyBound(self.struct_0x761e6af4),
            0x9b69e34b: LazyBound(self.struct_0x9b69e34b),
            0xdc7b1140: LazyBound(self.struct_0xdc7b1140),
            0xc8cf05f8: LazyBound(self.struct_0xc8cf05f8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xad628cc8, 'message_extended_media_preview')
    def struct_0xad628cc8(self):
        return Struct(
            'sname' / Computed('message_extended_media_preview'),
            'signature' / Hex(Const(0xad628cc8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_w=1,
                                has_thumb=2,
                                has_video_duration=4),
            'w' / If(this.flags.has_w, Int32ul),
            'h' / If(this.flags.has_w, Int32ul),
            'thumb' / If(this.flags.has_thumb, self.photo_size_structures('thumb')),
            'video_duration' / If(this.flags.has_video_duration, Int32ul))

    @constructor(0xee479c64, 'message_extended_media')
    def struct_0xee479c64(self):
        return ['media' / self.message_media_structures('media')]

    @structures
    def message_extended_media_structures(self, name):
        tag_map = {
            0xad628cc8: LazyBound(self.struct_0xad628cc8),
            0xee479c64: LazyBound(self.struct_0xee479c64)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc786ddcb, 'message_fwd_header_layer68')
    def struct_0xc786ddcb(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer68'),
            'signature' / Hex(Const(0xc786ddcb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_user_id=1,
                                has_from_channel_id=2,
                                has_channel_post=4),
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'date' / TTimestamp,
            'from_channel_id' / If(this.flags.has_from_channel_id, Int32ul),
            'channel_post' / If(this.flags.has_channel_post, Int32ul))

    @constructor(0x353a686b, 'message_fwd_header_layer118')
    def struct_0x353a686b(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer118'),
            'signature' / Hex(Const(0x353a686b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_user_id=1,
                                has_from_name=32,
                                has_from_channel_id=2,
                                has_channel_post=4,
                                has_post_author=8,
                                has_saved_from_peer=16,
                                has_psa_type=64),
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'from_name' / If(this.flags.has_from_name, TString),
            'date' / TTimestamp,
            'from_channel_id' / If(this.flags.has_from_channel_id, Int32ul),
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString),
            'saved_from_peer' / If(this.flags.has_saved_from_peer, self.peer_structures('saved_from_peer')),
            'saved_from_msg_id' / If(this.flags.has_saved_from_peer, Int32ul),
            'psa_type' / If(this.flags.has_psa_type, TString))

    @constructor(0xec338270, 'message_fwd_header_layer112')
    def struct_0xec338270(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer112'),
            'signature' / Hex(Const(0xec338270, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_user_id=1,
                                has_from_name=32,
                                has_from_channel_id=2,
                                has_channel_post=4,
                                has_post_author=8,
                                has_saved_from_peer=16),
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'from_name' / If(this.flags.has_from_name, TString),
            'date' / TTimestamp,
            'from_channel_id' / If(this.flags.has_from_channel_id, Int32ul),
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString),
            'saved_from_peer' / If(this.flags.has_saved_from_peer, self.peer_structures('saved_from_peer')),
            'saved_from_msg_id' / If(this.flags.has_saved_from_peer, Int32ul))

    @constructor(0xfadff4ac, 'message_fwd_header_layer72')
    def struct_0xfadff4ac(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer72'),
            'signature' / Hex(Const(0xfadff4ac, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_user_id=1,
                                has_from_channel_id=2,
                                has_channel_post=4,
                                has_post_author=8),
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'date' / TTimestamp,
            'from_channel_id' / If(this.flags.has_from_channel_id, Int32ul),
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString))

    @constructor(0x4e4df4bb, 'message_fwd_header')
    def struct_0x4e4df4bb(self):
        return Struct(
            'sname' / Computed('message_fwd_header'),
            'signature' / Hex(Const(0x4e4df4bb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_imported=128,
                                is_saved_out=2048,
                                has_from_id=1,
                                has_from_name=32,
                                has_channel_post=4,
                                has_post_author=8,
                                has_saved_from_peer=16,
                                has_saved_from_id=256,
                                has_saved_from_name=512,
                                has_saved_date=1024,
                                has_psa_type=64),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_name' / If(this.flags.has_from_name, TString),
            'date' / TTimestamp,
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString),
            'saved_from_peer' / If(this.flags.has_saved_from_peer, self.peer_structures('saved_from_peer')),
            'saved_from_msg_id' / If(this.flags.has_saved_from_peer, Int32ul),
            'saved_from_id' / If(this.flags.has_saved_from_id, self.peer_structures('saved_from_id')),
            'saved_from_name' / If(this.flags.has_saved_from_name, TString),
            'saved_date' / If(this.flags.has_saved_date, TTimestamp),
            'psa_type' / If(this.flags.has_psa_type, TString))

    @constructor(0x5f777dce, 'message_fwd_header_layer169')
    def struct_0x5f777dce(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer169'),
            'signature' / Hex(Const(0x5f777dce, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_imported=128,
                                has_from_id=1,
                                has_from_name=32,
                                has_channel_post=4,
                                has_post_author=8,
                                has_saved_from_peer=16,
                                has_psa_type=64),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_name' / If(this.flags.has_from_name, TString),
            'date' / TTimestamp,
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString),
            'saved_from_peer' / If(this.flags.has_saved_from_peer, self.peer_structures('saved_from_peer')),
            'saved_from_msg_id' / If(this.flags.has_saved_from_peer, Int32ul),
            'psa_type' / If(this.flags.has_psa_type, TString))

    @constructor(0x559ebe6d, 'message_fwd_header_layer96')
    def struct_0x559ebe6d(self):
        return Struct(
            'sname' / Computed('message_fwd_header_layer96'),
            'signature' / Hex(Const(0x559ebe6d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_user_id=1,
                                has_from_channel_id=2,
                                has_channel_post=4,
                                has_post_author=8,
                                has_saved_from_peer=16),
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'date' / TTimestamp,
            'from_channel_id' / If(this.flags.has_from_channel_id, Int32ul),
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'post_author' / If(this.flags.has_post_author, TString),
            'saved_from_peer' / If(this.flags.has_saved_from_peer, self.peer_structures('saved_from_peer')),
            'saved_from_msg_id' / If(this.flags.has_saved_from_peer, Int32ul))

    @structures
    def message_fwd_header_structures(self, name):
        tag_map = {
            0xc786ddcb: LazyBound(self.struct_0xc786ddcb),
            0x353a686b: LazyBound(self.struct_0x353a686b),
            0xec338270: LazyBound(self.struct_0xec338270),
            0xfadff4ac: LazyBound(self.struct_0xfadff4ac),
            0x4e4df4bb: LazyBound(self.struct_0x4e4df4bb),
            0x5f777dce: LazyBound(self.struct_0x5f777dce),
            0x559ebe6d: LazyBound(self.struct_0x559ebe6d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x29632a36, 'message_media_unsupported_old')
    def struct_0x29632a36(self):
        return ['bytes' / TBytes]

    @constructor(0xc6b68300, 'message_media_audio_layer45')
    def struct_0xc6b68300(self):
        return ['audio_unused' / self.audio_structures('audio_unused')]

    @constructor(0xc8c45a2a, 'message_media_photo_old')
    def struct_0xc8c45a2a(self):
        return ['photo' / self.photo_structures('photo')]

    @constructor(0x84551347, 'message_media_invoice_layer145')
    def struct_0x84551347(self):
        return Struct(
            'sname' / Computed('message_media_invoice_layer145'),
            'signature' / Hex(Const(0x84551347, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_shipping_address_requested=2,
                                is_test=8,
                                has_photo=1,
                                has_receipt_msg_id=4),
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'receipt_msg_id' / If(this.flags.has_receipt_msg_id, Int32ul),
            'currency' / TString,
            'total_amount' / Int64ul,
            'start_param' / TString)

    @constructor(0xf6a548d3, 'message_media_invoice')
    def struct_0xf6a548d3(self):
        return Struct(
            'sname' / Computed('message_media_invoice'),
            'signature' / Hex(Const(0xf6a548d3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_shipping_address_requested=2,
                                is_test=8,
                                has_web_photo=1,
                                has_receipt_msg_id=4,
                                has_extended_media=16),
            'title' / TString,
            'description' / TString,
            'web_photo' / If(this.flags.has_web_photo, self.web_document_structures('web_photo')),
            'receipt_msg_id' / If(this.flags.has_receipt_msg_id, Int32ul),
            'currency' / TString,
            'total_amount' / Int64ul,
            'start_param' / TString,
            'extended_media' / If(this.flags.has_extended_media, self.message_extended_media_structures('extended_media')))

    @constructor(0x9f84f49e, 'message_media_unsupported')
    def struct_0x9f84f49e(self):
        return []

    @constructor(0x3ded6320, 'message_media_empty')
    def struct_0x3ded6320(self):
        return []

    @constructor(0x68cb6283, 'message_media_story')
    def struct_0x68cb6283(self):
        return Struct(
            'sname' / Computed('message_media_story'),
            'signature' / Hex(Const(0x68cb6283, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_mention=2,
                                has_story_item=1),
            'peer' / self.peer_structures('peer'),
            'id' / Int32ul,
            'story_item' / If(this.flags.has_story_item, self.story_item_structures('story_item')))

    @constructor(0xcbb20d88, 'message_media_story_layer162')
    def struct_0xcbb20d88(self):
        return Struct(
            'sname' / Computed('message_media_story_layer162'),
            'signature' / Hex(Const(0xcbb20d88, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_story_item=1,
                                is_via_mention=2),
            'peer_user_id' / Int64ul,
            'id' / Int32ul,
            'story_item' / If(this.flags.has_story_item, self.story_item_structures('story_item')))

    @constructor(0xc79aee1d, 'message_media_story_full')
    def struct_0xc79aee1d(self):
        '''custom'''
        return (
            'user_id' / Int64ul,
            'id' / Int32ul,
            'story_item' / self.story_item_structures('story_item'),
            'via_mention' / TBool)

    @constructor(0xc79aee1f, 'message_media_story_full_old')
    def struct_0xc79aee1f(self):
        '''custom'''
        return (
            'user_id' / Int64ul,
            'id' / Int32ul,
            'story_item' / self.story_item_structures('story_item'))

    @constructor(0x7912b71f, 'message_media_venue_layer71')
    def struct_0x7912b71f(self):
        return (
            'geo' / self.geo_point_structures('geo'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString)

    @constructor(0xb940c666, 'message_media_geo_live')
    def struct_0xb940c666(self):
        return Struct(
            'sname' / Computed('message_media_geo_live'),
            'signature' / Hex(Const(0xb940c666, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_heading=1,
                                has_proximity_notification_radius=2),
            'geo' / self.geo_point_structures('geo'),
            'heading' / If(this.flags.has_heading, Int32ul),
            'period' / Int32ul,
            'proximity_notification_radius' / If(this.flags.has_proximity_notification_radius, Int32ul))

    @constructor(0x7c3c2609, 'message_media_geo_live_layer119')
    def struct_0x7c3c2609(self):
        return (
            'geo' / self.geo_point_structures('geo'),
            'period' / Int32ul)

    @constructor(0x2ec0533f, 'message_media_venue')
    def struct_0x2ec0533f(self):
        return (
            'geo' / self.geo_point_structures('geo'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString,
            'venue_type' / TString)

    @constructor(0xa2d24290, 'message_media_video_old')
    def struct_0xa2d24290(self):
        return ['video_unused' / self.video_structures('video_unused')]

    @constructor(0x2fda2204, 'message_media_document_old')
    def struct_0x2fda2204(self):
        return ['document' / self.document_structures('document')]

    @constructor(0xf3e02ea8, 'message_media_document_layer68')
    def struct_0xf3e02ea8(self):
        return (
            'document' / self.document_structures('document'),
            'caption_legacy' / TString)

    @constructor(0xfdb19008, 'message_media_game')
    def struct_0xfdb19008(self):
        return ['game' / self.struct_0xbdf9653b()]

    @constructor(0x7c4414d3, 'message_media_document_layer74')
    def struct_0x7c4414d3(self):
        return Struct(
            'sname' / Computed('message_media_document_layer74'),
            'signature' / Hex(Const(0x7c4414d3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_document=1,
                                has_caption_legacy=2,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'caption_legacy' / If(this.flags.has_caption_legacy, TString),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0x5e7d2f39, 'message_media_contact_layer81')
    def struct_0x5e7d2f39(self):
        return (
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'user_id' / Int32ul)

    @constructor(0x695150d7, 'message_media_photo')
    def struct_0x695150d7(self):
        return Struct(
            'sname' / Computed('message_media_photo'),
            'signature' / Hex(Const(0x695150d7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_spoiler=8,
                                has_photo=1,
                                has_ttl_seconds=4),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0x4bd6e798, 'message_media_poll')
    def struct_0x4bd6e798(self):
        return (
            'poll' / self.poll_structures('poll'),
            'results' / self.poll_results_structures('results'))

    @constructor(0xceaa3ea1, 'message_media_giveaway_results')
    def struct_0xceaa3ea1(self):
        return Struct(
            'sname' / Computed('message_media_giveaway_results'),
            'signature' / Hex(Const(0xceaa3ea1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_refunded=4,
                                has_additional_peers_count=8,
                                has_months=16,
                                has_stars=32,
                                has_prize_description=2),
            'channel_id' / Int64ul,
            'additional_peers_count' / If(this.flags.has_additional_peers_count, Int32ul),
            'launch_msg_id' / Int32ul,
            'winners_count' / Int32ul,
            'unclaimed_count' / Int32ul,
            'winners' / self.vector(Int64ul, 'winners'),
            'months' / If(this.flags.has_months, Int32ul),
            'stars' / If(this.flags.has_stars, Int64ul),
            'prize_description' / If(this.flags.has_prize_description, TString),
            'until_date' / TTimestamp)

    @constructor(0xc6991068, 'message_media_giveaway_results_layer186')
    def struct_0xc6991068(self):
        return Struct(
            'sname' / Computed('message_media_giveaway_results_layer186'),
            'signature' / Hex(Const(0xc6991068, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_refunded=4,
                                has_additional_peers_count=8,
                                has_prize_description=2),
            'channel_id' / Int64ul,
            'additional_peers_count' / If(this.flags.has_additional_peers_count, Int32ul),
            'launch_msg_id' / Int32ul,
            'winners_count' / Int32ul,
            'unclaimed_count' / Int32ul,
            'winners' / self.vector(Int64ul, 'winners'),
            'months' / Int32ul,
            'prize_description' / If(this.flags.has_prize_description, TString),
            'until_date' / TTimestamp)

    @constructor(0xaa073beb, 'message_media_giveaway')
    def struct_0xaa073beb(self):
        return Struct(
            'sname' / Computed('message_media_giveaway'),
            'signature' / Hex(Const(0xaa073beb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_winners_are_visible=4,
                                has_countries_iso2=2,
                                has_prize_description=8,
                                has_months=16,
                                has_stars=32),
            'channels' / self.vector(Int64ul, 'channels'),
            'countries_iso2' / If(this.flags.has_countries_iso2, self.vector(TString, 'countries_iso2')),
            'prize_description' / If(this.flags.has_prize_description, TString),
            'quantity' / Int32ul,
            'months' / If(this.flags.has_months, Int32ul),
            'stars' / If(this.flags.has_stars, Int64ul),
            'until_date' / TTimestamp)

    @constructor(0xdaad85b0, 'message_media_giveaway_layer186')
    def struct_0xdaad85b0(self):
        return Struct(
            'sname' / Computed('message_media_giveaway_layer186'),
            'signature' / Hex(Const(0xdaad85b0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                is_winners_are_visible=4,
                                has_countries_iso2=2,
                                has_prize_description=8),
            'channels' / self.vector(Int64ul, 'channels'),
            'countries_iso2' / If(this.flags.has_countries_iso2, self.vector(TString, 'countries_iso2')),
            'prize_description' / If(this.flags.has_prize_description, TString),
            'quantity' / Int32ul,
            'months' / Int32ul,
            'until_date' / TTimestamp)

    @constructor(0x58260664, 'message_media_giveaway_layer167')
    def struct_0x58260664(self):
        return Struct(
            'sname' / Computed('message_media_giveaway_layer167'),
            'signature' / Hex(Const(0x58260664, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_only_new_subscribers=1,
                                has_countries_iso2=2),
            'channels' / self.vector(Int64ul, 'channels'),
            'countries_iso2' / If(this.flags.has_countries_iso2, self.vector(TString, 'countries_iso2')),
            'quantity' / Int32ul,
            'months' / Int32ul,
            'until_date' / TTimestamp)

    @constructor(0xa8852491, 'message_media_paid_media')
    def struct_0xa8852491(self):
        return (
            'stars_amount' / Int64ul,
            'extended_media' / self.vector(self.message_extended_media_structures('extended_media'), 'extended_media'))

    @constructor(0xb5223b0f, 'message_media_photo_layer74')
    def struct_0xb5223b0f(self):
        return Struct(
            'sname' / Computed('message_media_photo_layer74'),
            'signature' / Hex(Const(0xb5223b0f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=1,
                                has_caption_legacy=2,
                                has_ttl_seconds=4),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'caption_legacy' / If(this.flags.has_caption_legacy, TString),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0x3d8ce53d, 'message_media_photo_layer68')
    def struct_0x3d8ce53d(self):
        return (
            'photo' / self.photo_structures('photo'),
            'caption_legacy' / TString)

    @constructor(0x5bcf1675, 'message_media_video_layer45')
    def struct_0x5bcf1675(self):
        return (
            'video_unused' / self.video_structures('video_unused'),
            'caption_legacy' / TString)

    @constructor(0x3f7ee58b, 'message_media_dice')
    def struct_0x3f7ee58b(self):
        return (
            'value' / Int32ul,
            'emoticon' / TString)

    @constructor(0x638fe46b, 'message_media_dice_layer111')
    def struct_0x638fe46b(self):
        return ['value' / Int32ul]

    @constructor(0x56e0d474, 'message_media_geo')
    def struct_0x56e0d474(self):
        return ['geo' / self.geo_point_structures('geo')]

    @constructor(0xa32dd600, 'message_media_web_page_layer165')
    def struct_0xa32dd600(self):
        return ['webpage' / self.web_page_structures('webpage')]

    @constructor(0xddf10c3b, 'message_media_web_page')
    def struct_0xddf10c3b(self):
        return Struct(
            'sname' / Computed('message_media_web_page'),
            'signature' / Hex(Const(0xddf10c3b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force_large_media=1,
                                is_force_small_media=2,
                                is_manual=8,
                                is_safe=16),
            'webpage' / self.web_page_structures('webpage'))

    @constructor(0x52d8ccd9, 'message_media_document')
    def struct_0x52d8ccd9(self):
        return Struct(
            'sname' / Computed('message_media_document'),
            'signature' / Hex(Const(0x52d8ccd9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nopremium=8,
                                is_spoiler=16,
                                is_video=64,
                                is_round=128,
                                is_voice=256,
                                has_document=1,
                                has_alt_documents=32,
                                has_video_cover=512,
                                has_video_timestamp=1024,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'alt_documents' / If(this.flags.has_alt_documents, self.vector(self.document_structures('alt_documents'), 'alt_documents')),
            'video_cover' / If(this.flags.has_video_cover, self.photo_structures('video_cover')),
            'video_timestamp' / If(this.flags.has_video_timestamp, Int32ul),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xdbbdf614, 'message_media_document_layer197_2')
    def struct_0xdbbdf614(self):
        return Struct(
            'sname' / Computed('message_media_document_layer197_2'),
            'signature' / Hex(Const(0xdbbdf614, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nopremium=8,
                                is_spoiler=16,
                                is_video=64,
                                is_round=128,
                                is_voice=256,
                                has_document=1,
                                has_alt_documents=32,
                                has_video_cover=512,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'alt_documents' / If(this.flags.has_alt_documents, self.vector(self.document_structures('alt_documents'), 'alt_documents')),
            'video_cover' / If(this.flags.has_video_cover, self.photo_structures('video_cover')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xdd570bd5, 'message_media_document_layer197')
    def struct_0xdd570bd5(self):
        return Struct(
            'sname' / Computed('message_media_document_layer197'),
            'signature' / Hex(Const(0xdd570bd5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nopremium=8,
                                is_spoiler=16,
                                is_video=64,
                                is_round=128,
                                is_voice=256,
                                has_document=1,
                                has_alt_documents=32,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'alt_documents' / If(this.flags.has_alt_documents, self.vector(self.document_structures('alt_documents'), 'alt_documents')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0x4cf4d72d, 'message_media_document_layer187')
    def struct_0x4cf4d72d(self):
        return Struct(
            'sname' / Computed('message_media_document_layer187'),
            'signature' / Hex(Const(0x4cf4d72d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nopremium=8,
                                is_spoiler=16,
                                is_video=64,
                                is_round=128,
                                is_voice=256,
                                has_document=1,
                                has_alt_document=32,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'alt_document' / If(this.flags.has_alt_document, self.document_structures('alt_document')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0x9cb070d7, 'message_media_document_layer159')
    def struct_0x9cb070d7(self):
        return Struct(
            'sname' / Computed('message_media_document_layer159'),
            'signature' / Hex(Const(0x9cb070d7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_nopremium=8,
                                is_spoiler=16,
                                has_document=1,
                                has_ttl_seconds=4),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'ttl_seconds' / If(this.flags.has_ttl_seconds, Int32ul))

    @constructor(0xcbf24940, 'message_media_contact_layer131')
    def struct_0xcbf24940(self):
        return (
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'vcard' / TString,
            'user_id' / Int32ul)

    @constructor(0x70322949, 'message_media_contact')
    def struct_0x70322949(self):
        return (
            'phone_number' / TString,
            'first_name' / TString,
            'last_name' / TString,
            'vcard' / TString,
            'user_id' / Int64ul)

    @structures
    def message_media_structures(self, name):
        tag_map = {
            0x29632a36: LazyBound(self.struct_0x29632a36),
            0xc6b68300: LazyBound(self.struct_0xc6b68300),
            0xc8c45a2a: LazyBound(self.struct_0xc8c45a2a),
            0x84551347: LazyBound(self.struct_0x84551347),
            0xf6a548d3: LazyBound(self.struct_0xf6a548d3),
            0x9f84f49e: LazyBound(self.struct_0x9f84f49e),
            0x3ded6320: LazyBound(self.struct_0x3ded6320),
            0x68cb6283: LazyBound(self.struct_0x68cb6283),
            0xcbb20d88: LazyBound(self.struct_0xcbb20d88),
            0xc79aee1d: LazyBound(self.struct_0xc79aee1d),
            0xc79aee1f: LazyBound(self.struct_0xc79aee1f),
            0x7912b71f: LazyBound(self.struct_0x7912b71f),
            0xb940c666: LazyBound(self.struct_0xb940c666),
            0x7c3c2609: LazyBound(self.struct_0x7c3c2609),
            0x2ec0533f: LazyBound(self.struct_0x2ec0533f),
            0xa2d24290: LazyBound(self.struct_0xa2d24290),
            0x2fda2204: LazyBound(self.struct_0x2fda2204),
            0xf3e02ea8: LazyBound(self.struct_0xf3e02ea8),
            0xfdb19008: LazyBound(self.struct_0xfdb19008),
            0x7c4414d3: LazyBound(self.struct_0x7c4414d3),
            0x5e7d2f39: LazyBound(self.struct_0x5e7d2f39),
            0x695150d7: LazyBound(self.struct_0x695150d7),
            0x4bd6e798: LazyBound(self.struct_0x4bd6e798),
            0xceaa3ea1: LazyBound(self.struct_0xceaa3ea1),
            0xc6991068: LazyBound(self.struct_0xc6991068),
            0xaa073beb: LazyBound(self.struct_0xaa073beb),
            0xdaad85b0: LazyBound(self.struct_0xdaad85b0),
            0x58260664: LazyBound(self.struct_0x58260664),
            0xa8852491: LazyBound(self.struct_0xa8852491),
            0xb5223b0f: LazyBound(self.struct_0xb5223b0f),
            0x3d8ce53d: LazyBound(self.struct_0x3d8ce53d),
            0x5bcf1675: LazyBound(self.struct_0x5bcf1675),
            0x3f7ee58b: LazyBound(self.struct_0x3f7ee58b),
            0x638fe46b: LazyBound(self.struct_0x638fe46b),
            0x56e0d474: LazyBound(self.struct_0x56e0d474),
            0xa32dd600: LazyBound(self.struct_0xa32dd600),
            0xddf10c3b: LazyBound(self.struct_0xddf10c3b),
            0x52d8ccd9: LazyBound(self.struct_0x52d8ccd9),
            0xdbbdf614: LazyBound(self.struct_0xdbbdf614),
            0xdd570bd5: LazyBound(self.struct_0xdd570bd5),
            0x4cf4d72d: LazyBound(self.struct_0x4cf4d72d),
            0x9cb070d7: LazyBound(self.struct_0x9cb070d7),
            0xcbf24940: LazyBound(self.struct_0xcbf24940),
            0x70322949: LazyBound(self.struct_0x70322949)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8c79b63c, 'message_peer_reaction')
    def struct_0x8c79b63c(self):
        return Struct(
            'sname' / Computed('message_peer_reaction'),
            'signature' / Hex(Const(0x8c79b63c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_big=1,
                                is_unread=2),
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0xb156fe9c, 'message_peer_reaction_layer154')
    def struct_0xb156fe9c(self):
        return Struct(
            'sname' / Computed('message_peer_reaction_layer154'),
            'signature' / Hex(Const(0xb156fe9c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_big=1,
                                is_unread=2),
            'peer_id' / self.peer_structures('peer_id'),
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0x51b67eff, 'message_peer_reaction_layer144')
    def struct_0x51b67eff(self):
        return Struct(
            'sname' / Computed('message_peer_reaction_layer144'),
            'signature' / Hex(Const(0x51b67eff, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_big=1,
                                is_unread=2),
            'peer_id' / self.peer_structures('peer_id'),
            'reaction' / TString)

    @constructor(0x932844fa, 'message_peer_reaction_layer137')
    def struct_0x932844fa(self):
        return (
            'user_id' / Int64ul,
            'reaction' / TString)

    @structures
    def message_peer_reaction_structures(self, name):
        tag_map = {
            0x8c79b63c: LazyBound(self.struct_0x8c79b63c),
            0xb156fe9c: LazyBound(self.struct_0xb156fe9c),
            0x51b67eff: LazyBound(self.struct_0x51b67eff),
            0x932844fa: LazyBound(self.struct_0x932844fa)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4628f6e6, 'message_peer_vote_multiple')
    def struct_0x4628f6e6(self):
        return (
            'peer' / self.peer_structures('peer'),
            'options' / self.vector(TBytes, 'options'),
            'date' / TTimestamp)

    @constructor(0xb6cc2d5c, 'message_peer_vote')
    def struct_0xb6cc2d5c(self):
        return (
            'peer' / self.peer_structures('peer'),
            'option' / TBytes,
            'date' / TTimestamp)

    @constructor(0x74cda504, 'message_peer_vote_input_option')
    def struct_0x74cda504(self):
        return (
            'peer' / self.peer_structures('peer'),
            'date' / TTimestamp)

    @structures
    def message_peer_vote_structures(self, name):
        tag_map = {
            0x4628f6e6: LazyBound(self.struct_0x4628f6e6),
            0xb6cc2d5c: LazyBound(self.struct_0xb6cc2d5c),
            0x74cda504: LazyBound(self.struct_0x74cda504)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x087b6e36, 'message_reactions_old')
    def struct_0x087b6e36(self):
        return Struct(
            'sname' / Computed('message_reactions_old'),
            'signature' / Hex(Const(0x087b6e36, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                is_can_see_list=4,
                                has_recent_reactions=2),
            'results' / self.vector(self.reaction_count_structures('results'), 'results'),
            'recent_reactions' / If(this.flags.has_recent_reactions, self.vector(self.message_peer_reaction_structures('recent_reactions'), 'recent_reactions')))

    @constructor(0x0a339f0b, 'message_reactions')
    def struct_0x0a339f0b(self):
        return Struct(
            'sname' / Computed('message_reactions'),
            'signature' / Hex(Const(0x0a339f0b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                is_can_see_list=4,
                                is_reactions_as_tags=8,
                                has_recent_reactions=2,
                                has_top_reactors=16),
            'results' / self.vector(self.reaction_count_structures('results'), 'results'),
            'recent_reactions' / If(this.flags.has_recent_reactions, self.vector(self.message_peer_reaction_structures('recent_reactions'), 'recent_reactions')),
            'top_reactors' / If(this.flags.has_top_reactors, self.vector(self.message_reactor_structures('top_reactors'), 'top_reactors')))

    @constructor(0x4f2b9479, 'message_reactions_layer185')
    def struct_0x4f2b9479(self):
        return Struct(
            'sname' / Computed('message_reactions_layer185'),
            'signature' / Hex(Const(0x4f2b9479, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                is_can_see_list=4,
                                is_reactions_as_tags=8,
                                has_recent_reactions=2),
            'results' / self.vector(self.reaction_count_structures('results'), 'results'),
            'recent_reactions' / If(this.flags.has_recent_reactions, self.vector(self.message_peer_reaction_structures('recent_reactions'), 'recent_reactions')))

    @constructor(0xb87a24d1, 'message_reactions_layer137')
    def struct_0xb87a24d1(self):
        return Struct(
            'sname' / Computed('message_reactions_layer137'),
            'signature' / Hex(Const(0xb87a24d1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1),
            'results' / self.vector(self.reaction_count_structures('results'), 'results'))

    @structures
    def message_reactions_structures(self, name):
        tag_map = {
            0x087b6e36: LazyBound(self.struct_0x087b6e36),
            0x0a339f0b: LazyBound(self.struct_0x0a339f0b),
            0x4f2b9479: LazyBound(self.struct_0x4f2b9479),
            0xb87a24d1: LazyBound(self.struct_0xb87a24d1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4ba3a95a, 'message_reactor')
    def struct_0x4ba3a95a(self):
        return Struct(
            'sname' / Computed('message_reactor'),
            'signature' / Hex(Const(0x4ba3a95a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_top=1,
                                is_my=2,
                                is_anonymous=4,
                                has_peer_id=8),
            'peer_id' / If(this.flags.has_peer_id, self.peer_structures('peer_id')),
            'count' / Int32ul)

    @constructor(0xef00d448, 'message_reactor_old')
    def struct_0xef00d448(self):
        return Struct(
            'sname' / Computed('message_reactor_old'),
            'signature' / Hex(Const(0xef00d448, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_top=1,
                                is_my=2),
            'peer_id' / self.peer_structures('peer_id'),
            'count' / Int32ul)

    @structures
    def message_reactor_structures(self, name):
        tag_map = {
            0x4ba3a95a: LazyBound(self.struct_0x4ba3a95a),
            0xef00d448: LazyBound(self.struct_0xef00d448)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4128faac, 'message_replies_layer131')
    def struct_0x4128faac(self):
        return Struct(
            'sname' / Computed('message_replies_layer131'),
            'signature' / Hex(Const(0x4128faac, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_comments=1,
                                has_recent_repliers=2,
                                has_max_id=4,
                                has_read_max_id=8),
            'replies' / Int32ul,
            'replies_pts' / Int32ul,
            'recent_repliers' / If(this.flags.has_recent_repliers, self.vector(self.peer_structures('recent_repliers'), 'recent_repliers')),
            'channel_id' / If(this.flags.is_comments, Int32ul),
            'max_id' / If(this.flags.has_max_id, Int32ul),
            'read_max_id' / If(this.flags.has_read_max_id, Int32ul))

    @constructor(0x83d60fc2, 'message_replies')
    def struct_0x83d60fc2(self):
        return Struct(
            'sname' / Computed('message_replies'),
            'signature' / Hex(Const(0x83d60fc2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_comments=1,
                                has_recent_repliers=2,
                                has_max_id=4,
                                has_read_max_id=8),
            'replies' / Int32ul,
            'replies_pts' / Int32ul,
            'recent_repliers' / If(this.flags.has_recent_repliers, self.vector(self.peer_structures('recent_repliers'), 'recent_repliers')),
            'channel_id' / If(this.flags.is_comments, Int64ul),
            'max_id' / If(this.flags.has_max_id, Int32ul),
            'read_max_id' / If(this.flags.has_read_max_id, Int32ul))

    @structures
    def message_replies_structures(self, name):
        tag_map = {
            0x4128faac: LazyBound(self.struct_0x4128faac),
            0x83d60fc2: LazyBound(self.struct_0x83d60fc2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x0e5af939, 'message_reply_story_header')
    def struct_0x0e5af939(self):
        return (
            'peer' / self.peer_structures('peer'),
            'story_id' / Int32ul)

    @constructor(0x9c98bfc1, 'message_reply_story_header_layer174')
    def struct_0x9c98bfc1(self):
        return (
            'peer_user_id' / Int64ul,
            'story_id' / Int32ul)

    @constructor(0xafbc09db, 'message_reply_header')
    def struct_0xafbc09db(self):
        return Struct(
            'sname' / Computed('message_reply_header'),
            'signature' / Hex(Const(0xafbc09db, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_reply_to_scheduled=4,
                                is_forum_topic=8,
                                is_quote=512,
                                has_reply_to_msg_id=16,
                                has_reply_to_peer_id=1,
                                has_reply_from=32,
                                has_reply_media=256,
                                has_reply_to_top_id=2,
                                has_quote_text=64,
                                has_quote_entities=128,
                                has_quote_offset=1024),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.peer_structures('reply_to_peer_id')),
            'reply_from' / If(this.flags.has_reply_from, self.message_fwd_header_structures('reply_from')),
            'reply_media' / If(this.flags.has_reply_media, self.message_media_structures('reply_media')),
            'reply_to_top_id' / If(this.flags.has_reply_to_top_id, Int32ul),
            'quote_text' / If(this.flags.has_quote_text, TString),
            'quote_entities' / If(this.flags.has_quote_entities, self.vector(self.message_entity_structures('quote_entities'), 'quote_entities')),
            'quote_offset' / If(this.flags.has_quote_offset, Int32ul))

    @constructor(0x6eebcabd, 'message_reply_header_layer166')
    def struct_0x6eebcabd(self):
        return Struct(
            'sname' / Computed('message_reply_header_layer166'),
            'signature' / Hex(Const(0x6eebcabd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_reply_to_scheduled=4,
                                is_forum_topic=8,
                                is_quote=512,
                                has_reply_to_msg_id=16,
                                has_reply_to_peer_id=1,
                                has_reply_from=32,
                                has_reply_media=256,
                                has_reply_to_top_id=2,
                                has_quote_text=64,
                                has_quote_entities=128),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.peer_structures('reply_to_peer_id')),
            'reply_from' / If(this.flags.has_reply_from, self.message_fwd_header_structures('reply_from')),
            'reply_media' / If(this.flags.has_reply_media, self.message_media_structures('reply_media')),
            'reply_to_top_id' / If(this.flags.has_reply_to_top_id, Int32ul),
            'quote_text' / If(this.flags.has_quote_text, TString),
            'quote_entities' / If(this.flags.has_quote_entities, self.vector(self.message_entity_structures('quote_entities'), 'quote_entities')))

    @constructor(0x3d5c1693, 'message_reply_header_layer165_2')
    def struct_0x3d5c1693(self):
        return Struct(
            'sname' / Computed('message_reply_header_layer165_2'),
            'signature' / Hex(Const(0x3d5c1693, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_reply_to_scheduled=4,
                                is_forum_topic=8,
                                has_reply_to_msg_id=16,
                                has_reply_to_peer_id=1,
                                has_reply_from=32,
                                has_reply_to_top_id=2,
                                has_quote_text=64,
                                has_quote_entities=128),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.peer_structures('reply_to_peer_id')),
            'reply_from' / If(this.flags.has_reply_from, self.message_fwd_header_structures('reply_from')),
            'reply_to_top_id' / If(this.flags.has_reply_to_top_id, Int32ul),
            'quote_text' / If(this.flags.has_quote_text, TString),
            'quote_entities' / If(this.flags.has_quote_entities, self.vector(self.message_entity_structures('quote_entities'), 'quote_entities')))

    @constructor(0xa6d57763, 'message_reply_header_layer165')
    def struct_0xa6d57763(self):
        return Struct(
            'sname' / Computed('message_reply_header_layer165'),
            'signature' / Hex(Const(0xa6d57763, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_reply_to_scheduled=4,
                                is_forum_topic=8,
                                has_reply_to_peer_id=1,
                                has_reply_to_top_id=2),
            'reply_to_msg_id' / Int32ul,
            'reply_to_peer_id' / If(this.flags.has_reply_to_peer_id, self.peer_structures('reply_to_peer_id')),
            'reply_to_top_id' / If(this.flags.has_reply_to_top_id, Int32ul))

    @structures
    def message_reply_header_structures(self, name):
        tag_map = {
            0x0e5af939: LazyBound(self.struct_0x0e5af939),
            0x9c98bfc1: LazyBound(self.struct_0x9c98bfc1),
            0xafbc09db: LazyBound(self.struct_0xafbc09db),
            0x6eebcabd: LazyBound(self.struct_0x6eebcabd),
            0x3d5c1693: LazyBound(self.struct_0x3d5c1693),
            0xa6d57763: LazyBound(self.struct_0xa6d57763)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1d86f70e, 'message_service_old2')
    def struct_0x1d86f70e(self):
        return Struct(
            'sname' / Computed('message_service_old2'),
            'signature' / Hex(Const(0x1d86f70e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'))

    @constructor(0xa7ab1991, 'message_old3')
    def struct_0xa7ab1991(self):
        return Struct(
            'sname' / Computed('message_old3'),
            'signature' / Hex(Const(0xa7ab1991, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_fwd_from_user_id=4,
                                has_reply_to_msg_id=8),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_user_id' / If(this.flags.has_fwd_from_user_id, Int32ul),
            'fwd_from_date' / If(this.flags.has_fwd_from_user_id, TTimestamp),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'attach_path' / TString)

    @constructor(0xc3060325, 'message_old4')
    def struct_0xc3060325(self):
        return Struct(
            'sname' / Computed('message_old4'),
            'signature' / Hex(Const(0xc3060325, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_fwd_from_user_id=4,
                                has_reply_to_msg_id=8,
                                has_reply_markup=64),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_user_id' / If(this.flags.has_fwd_from_user_id, Int32ul),
            'fwd_from_date' / If(this.flags.has_fwd_from_user_id, TTimestamp),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'attach_path' / TString)

    @constructor(0x555555fa, 'message_secret')
    def struct_0x555555fa(self):
        return Struct(
            'sname' / Computed('message_secret'),
            'signature' / Hex(Const(0x555555fa, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_via_bot_name=2048,
                                has_reply_to_random_id=8,
                                has_grouped_id=131072),
            'id' / Int32ul,
            'ttl' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'),
            'via_bot_name' / If(this.flags.has_via_bot_name, TString),
            'reply_to_random_id' / If(this.flags.has_reply_to_random_id, Int64ul),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'attach_path' / TString)

    @constructor(0x555555f9, 'message_secret_layer72')
    def struct_0x555555f9(self):
        return Struct(
            'sname' / Computed('message_secret_layer72'),
            'signature' / Hex(Const(0x555555f9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_via_bot_name=2048,
                                has_reply_to_random_id=8),
            'id' / Int32ul,
            'ttl' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'),
            'via_bot_name' / If(this.flags.has_via_bot_name, TString),
            'reply_to_random_id' / If(this.flags.has_reply_to_random_id, Int64ul),
            'attach_path' / TString)

    @constructor(0x90dddc11, 'message_layer72')
    def struct_0x90dddc11(self):
        return Struct(
            'sname' / Computed('message_layer72'),
            'signature' / Hex(Const(0x90dddc11, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'attach_path' / TString)

    @constructor(0xc09be45f, 'message_layer68')
    def struct_0xc09be45f(self):
        return Struct(
            'sname' / Computed('message_layer68'),
            'signature' / Hex(Const(0xc09be45f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_with_my_score=1073741824,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'attach_path' / TString)

    @constructor(0xc992e15c, 'message_layer47')
    def struct_0xc992e15c(self):
        return Struct(
            'sname' / Computed('message_layer47'),
            'signature' / Hex(Const(0xc992e15c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_from_user_id=256,
                                has_fwd_from_from_id=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_from_id' / If(this.flags.has_fwd_from_from_id, self.peer_structures('fwd_from_from_id')),
            'fwd_from_date' / If(this.flags.has_fwd_from_from_id, TTimestamp),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'attach_path' / TString)

    @constructor(0x5ba66c13, 'message_old7')
    def struct_0x5ba66c13(self):
        return Struct(
            'sname' / Computed('message_old7'),
            'signature' / Hex(Const(0x5ba66c13, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_from_user_id=256,
                                has_fwd_from_from_id=4,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_from_id' / If(this.flags.has_fwd_from_from_id, self.peer_structures('fwd_from_from_id')),
            'fwd_from_date' / If(this.flags.has_fwd_from_from_id, TTimestamp),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'attach_path' / TString)

    @constructor(0xc06b9607, 'message_service_layer48')
    def struct_0xc06b9607(self):
        return Struct(
            'sname' / Computed('message_service_layer48'),
            'signature' / Hex(Const(0xc06b9607, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                has_from_user_id=256),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'))

    @constructor(0x83e5de54, 'message_empty_layer122')
    def struct_0x83e5de54(self):
        return ['id' / Int32ul]

    @constructor(0x2bebfa86, 'message_old6')
    def struct_0x2bebfa86(self):
        return Struct(
            'sname' / Computed('message_old6'),
            'signature' / Hex(Const(0x2bebfa86, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_fwd_from_user_id=4,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_user_id' / If(this.flags.has_fwd_from_user_id, Int32ul),
            'fwd_from_date' / If(this.flags.has_fwd_from_user_id, TTimestamp),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'attach_path' / TString)

    @constructor(0x44f9b43d, 'message_layer104')
    def struct_0x44f9b43d(self):
        return Struct(
            'sname' / Computed('message_layer104'),
            'signature' / Hex(Const(0x44f9b43d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'attach_path' / TString)

    @constructor(0x90a6ca84, 'message_empty')
    def struct_0x90a6ca84(self):
        return Struct(
            'sname' / Computed('message_empty'),
            'signature' / Hex(Const(0x90a6ca84, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_peer_id=1),
            'id' / Int32ul,
            'peer_id' / If(this.flags.has_peer_id, self.peer_structures('peer_id')))

    @constructor(0x1c9b1027, 'message_layer104_2')
    def struct_0x1c9b1027(self):
        return Struct(
            'sname' / Computed('message_layer104_2'),
            'signature' / Hex(Const(0x1c9b1027, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, TString),
            'attach_path' / TString)

    @constructor(0xa367e716, 'message_forwarded_old2')
    def struct_0xa367e716(self):
        return Struct(
            'sname' / Computed('message_forwarded_old2'),
            'signature' / Hex(Const(0xa367e716, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32),
            'id' / Int32ul,
            'fwd_from_user_id' / Int32ul,
            'fwd_from_date' / TTimestamp,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'))

    @constructor(0x05f46804, 'message_forwarded_old')
    def struct_0x05f46804(self):
        return (
            'id' / Int32ul,
            'fwd_from_user_id' / Int32ul,
            'fwd_from_date' / TTimestamp,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'out' / TBool,
            'unread' / TBool,
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'attach_path' / TString)

    @constructor(0x567699b3, 'message_old2')
    def struct_0x567699b3(self):
        return Struct(
            'sname' / Computed('message_old2'),
            'signature' / Hex(Const(0x567699b3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'attach_path' / TString)

    @constructor(0x9f8d60bb, 'message_service_old')
    def struct_0x9f8d60bb(self):
        return (
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'out' / TBool,
            'unread' / TBool,
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'))

    @constructor(0x22eb6aba, 'message_old')
    def struct_0x22eb6aba(self):
        return (
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'out' / TBool,
            'unread' / TBool,
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'attach_path' / TString)

    @constructor(0x555555f8, 'message_secret_old')
    def struct_0x555555f8(self):
        return Struct(
            'sname' / Computed('message_secret_old'),
            'signature' / Hex(Const(0x555555f8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32),
            'id' / Int32ul,
            'ttl' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'attach_path' / TString)

    @constructor(0x9789dac4, 'message_layer104_3')
    def struct_0x9789dac4(self):
        return Struct(
            'sname' / Computed('message_layer104_3'),
            'signature' / Hex(Const(0x9789dac4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'attach_path' / TString)

    @constructor(0x452c0e65, 'message_layer117')
    def struct_0x452c0e65(self):
        return Struct(
            'sname' / Computed('message_layer117'),
            'signature' / Hex(Const(0x452c0e65, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_restriction_reason=4194304),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'attach_path' / TString)

    @constructor(0xf52e6b7f, 'message_layer118')
    def struct_0xf52e6b7f(self):
        return Struct(
            'sname' / Computed('message_layer118'),
            'signature' / Hex(Const(0xf52e6b7f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                has_from_user_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to_msg_id=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_restriction_reason=4194304),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'attach_path' / TString)

    @constructor(0x58ae39c9, 'message_layer123')
    def struct_0x58ae39c9(self):
        return Struct(
            'sname' / Computed('message_layer123'),
            'signature' / Hex(Const(0x58ae39c9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                has_from_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_restriction_reason=4194304),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'attach_path' / TString)

    @constructor(0xbce383d2, 'message_layer131')
    def struct_0xbce383d2(self):
        return Struct(
            'sname' / Computed('message_layer131'),
            'signature' / Hex(Const(0xbce383d2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                has_from_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int32ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'attach_path' / TString)

    @constructor(0x85d6cbe2, 'message_layer135')
    def struct_0x85d6cbe2(self):
        return Struct(
            'sname' / Computed('message_layer135'),
            'signature' / Hex(Const(0x85d6cbe2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                has_from_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'attach_path' / TString)

    @constructor(0x96fdbbe9, 'message')
    def struct_0x96fdbbe9(self):
        return Struct(
            'sname' / Computed('message'),
            'signature' / Hex(Const(0x96fdbbe9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_offline=2,
                                 is_video_processing_pending=16,
                                 has_via_business_bot_id=1,
                                 has_effect=4,
                                 has_factcheck=8,
                                 has_report_delivery_until_date=32),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'via_business_bot_id' / If(this.flags2.has_via_business_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'effect' / If(this.flags2.has_effect, Int64ul),
            'factcheck' / If(this.flags2.has_factcheck, self.struct_0xb89bfccf()),
            'report_delivery_until_date' / If(this.flags2.has_report_delivery_until_date, TTimestamp),
            'attach_path' / TString)

    @constructor(0x94345242, 'message_layer195')
    def struct_0x94345242(self):
        return Struct(
            'sname' / Computed('message_layer195'),
            'signature' / Hex(Const(0x94345242, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_offline=2,
                                 is_video_processing_pending=16,
                                 has_via_business_bot_id=1,
                                 has_effect=4,
                                 has_factcheck=8),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'via_business_bot_id' / If(this.flags2.has_via_business_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'effect' / If(this.flags2.has_effect, Int64ul),
            'factcheck' / If(this.flags2.has_factcheck, self.struct_0xb89bfccf()),
            'attach_path' / TString)

    @constructor(0xbde09c2e, 'message_layer180')
    def struct_0xbde09c2e(self):
        return Struct(
            'sname' / Computed('message_layer180'),
            'signature' / Hex(Const(0xbde09c2e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_offline=2,
                                 has_via_business_bot_id=1,
                                 has_effect=4),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'via_business_bot_id' / If(this.flags2.has_via_business_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'effect' / If(this.flags2.has_effect, Int64ul),
            'attach_path' / TString)

    @constructor(0xa4e97f37, 'message_layer179_1')
    def struct_0xa4e97f37(self):
        return Struct(
            'sname' / Computed('message_layer179_1'),
            'signature' / Hex(Const(0xa4e97f37, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_offline=2,
                                 has_via_business_bot_id=1),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'via_business_bot_id' / If(this.flags2.has_via_business_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'attach_path' / TString)

    @constructor(0x2357bf25, 'message_layer179')
    def struct_0x2357bf25(self):
        return Struct(
            'sname' / Computed('message_layer179'),
            'signature' / Hex(Const(0x2357bf25, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_offline=2,
                                 has_via_business_bot_id=1),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'via_business_bot_id' / If(this.flags2.has_via_business_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'attach_path' / TString)

    @constructor(0xa66c7efc, 'message_layer176')
    def struct_0xa66c7efc(self):
        return Struct(
            'sname' / Computed('message_layer176'),
            'signature' / Hex(Const(0xa66c7efc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432,
                                has_quick_reply_shortcut_id=1073741824),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul),
            'attach_path' / TString)

    @constructor(0x1e4c8a69, 'message_layer175')
    def struct_0x1e4c8a69(self):
        return Struct(
            'sname' / Computed('message_layer175'),
            'signature' / Hex(Const(0x1e4c8a69, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_from_boosts_applied=536870912,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'from_boosts_applied' / If(this.flags.has_from_boosts_applied, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'attach_path' / TString)

    @constructor(0x38116ee0, 'message_layer169')
    def struct_0x38116ee0(self):
        return Struct(
            'sname' / Computed('message_layer169'),
            'signature' / Hex(Const(0x38116ee0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'attach_path' / TString)

    @constructor(0x76bec211, 'message_layer173')
    def struct_0x76bec211(self):
        return Struct(
            'sname' / Computed('message_layer173'),
            'signature' / Hex(Const(0x76bec211, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_from_scheduled=262144,
                                is_legacy=524288,
                                is_edit_hide=2097152,
                                is_pinned=16777216,
                                is_noforwards=67108864,
                                is_invert_media=134217728,
                                has_from_id=256,
                                has_saved_peer_id=268435456,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_media=512,
                                has_reply_markup=64,
                                has_entities=128,
                                has_views=1024,
                                has_replies=8388608,
                                has_edit_date=32768,
                                has_post_author=65536,
                                has_grouped_id=131072,
                                has_reactions=1048576,
                                has_restriction_reason=4194304,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.peer_structures('saved_peer_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'message' / TString,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_views, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')),
            'edit_date' / If(this.flags.has_edit_date, TTimestamp),
            'post_author' / If(this.flags.has_post_author, TString),
            'grouped_id' / If(this.flags.has_grouped_id, Int64ul),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'restriction_reason' / If(this.flags.has_restriction_reason, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'attach_path' / TString)

    @constructor(0x9e19a1f6, 'message_service_layer118')
    def struct_0x9e19a1f6(self):
        return Struct(
            'sname' / Computed('message_service_layer118'),
            'signature' / Hex(Const(0x9e19a1f6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_legacy=524288,
                                has_from_user_id=256,
                                has_reply_to_msg_id=8),
            'id' / Int32ul,
            'from_user_id' / If(this.flags.has_from_user_id, Int32ul),
            'peer_id' / self.peer_structures('peer_id'),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'),
            'attach_path' / TString)

    @constructor(0x286fa604, 'message_service_layer123')
    def struct_0x286fa604(self):
        return Struct(
            'sname' / Computed('message_service_layer123'),
            'signature' / Hex(Const(0x286fa604, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_legacy=524288,
                                has_from_id=256,
                                has_reply_to=8),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'),
            'attach_path' / TString)

    @constructor(0x2b085862, 'message_service_layer195')
    def struct_0x2b085862(self):
        return Struct(
            'sname' / Computed('message_service_layer195'),
            'signature' / Hex(Const(0x2b085862, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_legacy=524288,
                                has_from_id=256,
                                has_reply_to=8,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0xd3d28540, 'message_service')
    def struct_0xd3d28540(self):
        return Struct(
            'sname' / Computed('message_service'),
            'signature' / Hex(Const(0xd3d28540, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                is_post=16384,
                                is_legacy=524288,
                                is_reactions_are_possible=512,
                                has_from_id=256,
                                has_reply_to=8,
                                has_reactions=1048576,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'peer_id' / self.peer_structures('peer_id'),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'date' / TTimestamp,
            'action' / self.message_action_structures('action'),
            'reactions' / If(this.flags.has_reactions, self.message_reactions_structures('reactions')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0xf07814c8, 'message_old5')
    def struct_0xf07814c8(self):
        return Struct(
            'sname' / Computed('message_old5'),
            'signature' / Hex(Const(0xf07814c8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                has_fwd_from_user_id=4,
                                has_reply_to_msg_id=8,
                                has_reply_markup=64,
                                has_entities=128),
            'id' / Int32ul,
            'from_user_id' / Int32ul,
            'peer_id' / self.peer_structures('peer_id'),
            'fwd_from_user_id' / If(this.flags.has_fwd_from_user_id, Int32ul),
            'fwd_from_date' / If(this.flags.has_fwd_from_user_id, TTimestamp),
            'reply_to_msg_id' / If(this.flags.has_reply_to_msg_id, Int32ul),
            'date' / TTimestamp,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'attach_path' / TString)

    @structures
    def message_structures(self, name):
        tag_map = {
            0x1d86f70e: LazyBound(self.struct_0x1d86f70e),
            0xa7ab1991: LazyBound(self.struct_0xa7ab1991),
            0xc3060325: LazyBound(self.struct_0xc3060325),
            0x555555fa: LazyBound(self.struct_0x555555fa),
            0x555555f9: LazyBound(self.struct_0x555555f9),
            0x90dddc11: LazyBound(self.struct_0x90dddc11),
            0xc09be45f: LazyBound(self.struct_0xc09be45f),
            0xc992e15c: LazyBound(self.struct_0xc992e15c),
            0x5ba66c13: LazyBound(self.struct_0x5ba66c13),
            0xc06b9607: LazyBound(self.struct_0xc06b9607),
            0x83e5de54: LazyBound(self.struct_0x83e5de54),
            0x2bebfa86: LazyBound(self.struct_0x2bebfa86),
            0x44f9b43d: LazyBound(self.struct_0x44f9b43d),
            0x90a6ca84: LazyBound(self.struct_0x90a6ca84),
            0x1c9b1027: LazyBound(self.struct_0x1c9b1027),
            0xa367e716: LazyBound(self.struct_0xa367e716),
            0x05f46804: LazyBound(self.struct_0x05f46804),
            0x567699b3: LazyBound(self.struct_0x567699b3),
            0x9f8d60bb: LazyBound(self.struct_0x9f8d60bb),
            0x22eb6aba: LazyBound(self.struct_0x22eb6aba),
            0x555555f8: LazyBound(self.struct_0x555555f8),
            0x9789dac4: LazyBound(self.struct_0x9789dac4),
            0x452c0e65: LazyBound(self.struct_0x452c0e65),
            0xf52e6b7f: LazyBound(self.struct_0xf52e6b7f),
            0x58ae39c9: LazyBound(self.struct_0x58ae39c9),
            0xbce383d2: LazyBound(self.struct_0xbce383d2),
            0x85d6cbe2: LazyBound(self.struct_0x85d6cbe2),
            0x96fdbbe9: LazyBound(self.struct_0x96fdbbe9),
            0x94345242: LazyBound(self.struct_0x94345242),
            0xbde09c2e: LazyBound(self.struct_0xbde09c2e),
            0xa4e97f37: LazyBound(self.struct_0xa4e97f37),
            0x2357bf25: LazyBound(self.struct_0x2357bf25),
            0xa66c7efc: LazyBound(self.struct_0xa66c7efc),
            0x1e4c8a69: LazyBound(self.struct_0x1e4c8a69),
            0x38116ee0: LazyBound(self.struct_0x38116ee0),
            0x76bec211: LazyBound(self.struct_0x76bec211),
            0x9e19a1f6: LazyBound(self.struct_0x9e19a1f6),
            0x286fa604: LazyBound(self.struct_0x286fa604),
            0x2b085862: LazyBound(self.struct_0x2b085862),
            0xd3d28540: LazyBound(self.struct_0xd3d28540),
            0xf07814c8: LazyBound(self.struct_0xf07814c8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xcdbbcebb, 'messages_all_stickers')
    def struct_0xcdbbcebb(self):
        return (
            'hash2' / Int64ul,
            'sets' / self.vector(self.sticker_set_structures('sets'), 'sets'))

    @constructor(0xe86602c3, 'messages_all_stickers_not_modified')
    def struct_0xe86602c3(self):
        return []

    @structures
    def messages_all_stickers_structures(self, name):
        tag_map = {
            0xcdbbcebb: LazyBound(self.struct_0xcdbbcebb),
            0xe86602c3: LazyBound(self.struct_0xe86602c3)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd1ed9a5b, 'messages_available_effects_not_modified')
    def struct_0xd1ed9a5b(self):
        return []

    @constructor(0xbddb616e, 'messages_available_effects')
    def struct_0xbddb616e(self):
        return (
            'hash' / Int32ul,
            'effects' / self.vector(self.struct_0x93c3e27e(), 'effects'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @structures
    def messages_available_effects_structures(self, name):
        tag_map = {
            0xd1ed9a5b: LazyBound(self.struct_0xd1ed9a5b),
            0xbddb616e: LazyBound(self.struct_0xbddb616e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9f071957, 'messages_available_reactions_not_modified')
    def struct_0x9f071957(self):
        return []

    @constructor(0x768e3aad, 'messages_available_reactions')
    def struct_0x768e3aad(self):
        return (
            'hash' / Int32ul,
            'reactions' / self.vector(self.struct_0xc077ec01(), 'reactions'))

    @structures
    def messages_available_reactions_structures(self, name):
        tag_map = {
            0x9f071957: LazyBound(self.struct_0x9f071957),
            0x768e3aad: LazyBound(self.struct_0x768e3aad)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xccd3563d, 'messages_bot_results_layer71')
    def struct_0xccd3563d(self):
        return Struct(
            'sname' / Computed('messages_bot_results_layer71'),
            'signature' / Hex(Const(0xccd3563d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gallery=1,
                                has_next_offset=2,
                                has_switch_pm=4),
            'query_id' / Int64ul,
            'next_offset' / If(this.flags.has_next_offset, TString),
            'switch_pm' / If(this.flags.has_switch_pm, self.struct_0x3c20629f()),
            'results' / self.vector(self.bot_inline_result_structures('results'), 'results'),
            'cache_time' / Int32ul)

    @constructor(0x947ca848, 'messages_bot_results_layer153')
    def struct_0x947ca848(self):
        return Struct(
            'sname' / Computed('messages_bot_results_layer153'),
            'signature' / Hex(Const(0x947ca848, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gallery=1,
                                has_next_offset=2,
                                has_switch_pm=4),
            'query_id' / Int64ul,
            'next_offset' / If(this.flags.has_next_offset, TString),
            'switch_pm' / If(this.flags.has_switch_pm, self.struct_0x3c20629f()),
            'results' / self.vector(self.bot_inline_result_structures('results'), 'results'),
            'cache_time' / Int32ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xe021f2f6, 'messages_bot_results')
    def struct_0xe021f2f6(self):
        return Struct(
            'sname' / Computed('messages_bot_results'),
            'signature' / Hex(Const(0xe021f2f6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gallery=1,
                                has_next_offset=2,
                                has_switch_pm=4,
                                has_switch_webview=8),
            'query_id' / Int64ul,
            'next_offset' / If(this.flags.has_next_offset, TString),
            'switch_pm' / If(this.flags.has_switch_pm, self.struct_0x3c20629f()),
            'switch_webview' / If(this.flags.has_switch_webview, self.struct_0xb57295d5()),
            'results' / self.vector(self.bot_inline_result_structures('results'), 'results'),
            'cache_time' / Int32ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def messages_bot_results_structures(self, name):
        tag_map = {
            0xccd3563d: LazyBound(self.struct_0xccd3563d),
            0x947ca848: LazyBound(self.struct_0x947ca848),
            0xe021f2f6: LazyBound(self.struct_0xe021f2f6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x64ff9fd5, 'messages_chats')
    def struct_0x64ff9fd5(self):
        return ['chats' / self.vector(self.chat_structures('chats'), 'chats')]

    @constructor(0x9cd81144, 'messages_chats_slice')
    def struct_0x9cd81144(self):
        return (
            'count' / Int32ul,
            'chats' / self.vector(self.chat_structures('chats'), 'chats'))

    @structures
    def messages_chats_structures(self, name):
        tag_map = {
            0x64ff9fd5: LazyBound(self.struct_0x64ff9fd5),
            0x9cd81144: LazyBound(self.struct_0x9cd81144)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc0e24635, 'messages_dh_config_not_modified')
    def struct_0xc0e24635(self):
        return ['random' / TBytes]

    @constructor(0x2c221edd, 'messages_dh_config')
    def struct_0x2c221edd(self):
        return (
            'g' / Int32ul,
            'p' / TBytes,
            'version' / Int32ul,
            'random' / TBytes)

    @structures
    def messages_dh_config_structures(self, name):
        tag_map = {
            0xc0e24635: LazyBound(self.struct_0xc0e24635),
            0x2c221edd: LazyBound(self.struct_0x2c221edd)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x15ba6c40, 'messages_dialogs')
    def struct_0x15ba6c40(self):
        return (
            'dialogs' / self.vector(self.dialog_structures('dialogs'), 'dialogs'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x71e094f3, 'messages_dialogs_slice')
    def struct_0x71e094f3(self):
        return (
            'count' / Int32ul,
            'dialogs' / self.vector(self.dialog_structures('dialogs'), 'dialogs'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf0e3e596, 'messages_dialogs_not_modified')
    def struct_0xf0e3e596(self):
        return ['count' / Int32ul]

    @structures
    def messages_dialogs_structures(self, name):
        tag_map = {
            0x15ba6c40: LazyBound(self.struct_0x15ba6c40),
            0x71e094f3: LazyBound(self.struct_0x71e094f3),
            0xf0e3e596: LazyBound(self.struct_0xf0e3e596)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x6fb4ad87, 'messages_emoji_groups_not_modified')
    def struct_0x6fb4ad87(self):
        return []

    @constructor(0x881fb94b, 'messages_emoji_groups')
    def struct_0x881fb94b(self):
        return (
            'hash' / Int32ul,
            'groups' / self.vector(self.emoji_group_structures('groups'), 'groups'))

    @structures
    def messages_emoji_groups_structures(self, name):
        tag_map = {
            0x6fb4ad87: LazyBound(self.struct_0x6fb4ad87),
            0x881fb94b: LazyBound(self.struct_0x881fb94b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x222600ef, 'messages_exported_chat_invite_replaced')
    def struct_0x222600ef(self):
        return (
            'invite' / self.exported_chat_invite_structures('invite'),
            'new_invite' / self.exported_chat_invite_structures('new_invite'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x1871be50, 'messages_exported_chat_invite')
    def struct_0x1871be50(self):
        return (
            'invite' / self.exported_chat_invite_structures('invite'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def messages_exported_chat_invite_structures(self, name):
        tag_map = {
            0x222600ef: LazyBound(self.struct_0x222600ef),
            0x1871be50: LazyBound(self.struct_0x1871be50)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9e8fa6d3, 'messages_faved_stickers_not_modified')
    def struct_0x9e8fa6d3(self):
        return []

    @constructor(0x2cb51097, 'messages_faved_stickers')
    def struct_0x2cb51097(self):
        return (
            'hash' / Int64ul,
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'stickers' / self.vector(self.document_structures('stickers'), 'stickers'))

    @structures
    def messages_faved_stickers_structures(self, name):
        tag_map = {
            0x9e8fa6d3: LazyBound(self.struct_0x9e8fa6d3),
            0x2cb51097: LazyBound(self.struct_0x2cb51097)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbe382906, 'messages_featured_stickers')
    def struct_0xbe382906(self):
        return Struct(
            'sname' / Computed('messages_featured_stickers'),
            'signature' / Hex(Const(0xbe382906, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_premium=1),
            'hash' / Int64ul,
            'count' / Int32ul,
            'sets' / self.vector(self.sticker_set_covered_structures('sets'), 'sets'),
            'unread' / self.vector(Int64ul, 'unread'))

    @constructor(0xc6dc0c66, 'messages_featured_stickers_not_modified')
    def struct_0xc6dc0c66(self):
        return ['count' / Int32ul]

    @structures
    def messages_featured_stickers_structures(self, name):
        tag_map = {
            0xbe382906: LazyBound(self.struct_0xbe382906),
            0xc6dc0c66: LazyBound(self.struct_0xc6dc0c66)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xffc86587, 'input_messages_filter_gif')
    def struct_0xffc86587(self):
        return []

    @constructor(0x3751b49e, 'input_messages_filter_music')
    def struct_0x3751b49e(self):
        return []

    @constructor(0x3a20ecb8, 'input_messages_filter_chat_photos')
    def struct_0x3a20ecb8(self):
        return []

    @constructor(0x9609a51c, 'input_messages_filter_photos')
    def struct_0x9609a51c(self):
        return []

    @constructor(0x7ef0dd87, 'input_messages_filter_url')
    def struct_0x7ef0dd87(self):
        return []

    @constructor(0x9eddf188, 'input_messages_filter_document')
    def struct_0x9eddf188(self):
        return []

    @constructor(0x56e9f0e4, 'input_messages_filter_photo_video')
    def struct_0x56e9f0e4(self):
        return []

    @constructor(0xd95e73bb, 'input_messages_filter_photo_video_documents')
    def struct_0xd95e73bb(self):
        return []

    @constructor(0xe7026d0d, 'input_messages_filter_geo')
    def struct_0xe7026d0d(self):
        return []

    @constructor(0x1bb00451, 'input_messages_filter_pinned')
    def struct_0x1bb00451(self):
        return []

    @constructor(0xc1f8e69a, 'input_messages_filter_my_mentions')
    def struct_0xc1f8e69a(self):
        return []

    @constructor(0x7a7c17a4, 'input_messages_filter_round_voice')
    def struct_0x7a7c17a4(self):
        return []

    @constructor(0xe062db83, 'input_messages_filter_contacts')
    def struct_0xe062db83(self):
        return []

    @constructor(0x50f5c392, 'input_messages_filter_voice')
    def struct_0x50f5c392(self):
        return []

    @constructor(0x9fc00e65, 'input_messages_filter_video')
    def struct_0x9fc00e65(self):
        return []

    @constructor(0x80c99768, 'input_messages_filter_phone_calls')
    def struct_0x80c99768(self):
        return Struct(
            'sname' / Computed('input_messages_filter_phone_calls'),
            'signature' / Hex(Const(0x80c99768, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_missed=1))

    @constructor(0x57e2f66c, 'input_messages_filter_empty')
    def struct_0x57e2f66c(self):
        return []

    @constructor(0xb549da53, 'input_messages_filter_round_video')
    def struct_0xb549da53(self):
        return []

    @structures
    def messages_filter_structures(self, name):
        tag_map = {
            0xffc86587: LazyBound(self.struct_0xffc86587),
            0x3751b49e: LazyBound(self.struct_0x3751b49e),
            0x3a20ecb8: LazyBound(self.struct_0x3a20ecb8),
            0x9609a51c: LazyBound(self.struct_0x9609a51c),
            0x7ef0dd87: LazyBound(self.struct_0x7ef0dd87),
            0x9eddf188: LazyBound(self.struct_0x9eddf188),
            0x56e9f0e4: LazyBound(self.struct_0x56e9f0e4),
            0xd95e73bb: LazyBound(self.struct_0xd95e73bb),
            0xe7026d0d: LazyBound(self.struct_0xe7026d0d),
            0x1bb00451: LazyBound(self.struct_0x1bb00451),
            0xc1f8e69a: LazyBound(self.struct_0xc1f8e69a),
            0x7a7c17a4: LazyBound(self.struct_0x7a7c17a4),
            0xe062db83: LazyBound(self.struct_0xe062db83),
            0x50f5c392: LazyBound(self.struct_0x50f5c392),
            0x9fc00e65: LazyBound(self.struct_0x9fc00e65),
            0x80c99768: LazyBound(self.struct_0x80c99768),
            0x57e2f66c: LazyBound(self.struct_0x57e2f66c),
            0xb549da53: LazyBound(self.struct_0xb549da53)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x0d54b65d, 'messages_found_sticker_sets_not_modified')
    def struct_0x0d54b65d(self):
        return []

    @constructor(0x8af09dd2, 'messages_found_sticker_sets')
    def struct_0x8af09dd2(self):
        return (
            'hash' / Int64ul,
            'sets' / self.vector(self.sticker_set_covered_structures('sets'), 'sets'))

    @structures
    def messages_found_sticker_sets_structures(self, name):
        tag_map = {
            0x0d54b65d: LazyBound(self.struct_0x0d54b65d),
            0x8af09dd2: LazyBound(self.struct_0x8af09dd2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x82c9e290, 'messages_found_stickers')
    def struct_0x82c9e290(self):
        return Struct(
            'sname' / Computed('messages_found_stickers'),
            'signature' / Hex(Const(0x82c9e290, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'next_offset' / If(this.flags.has_next_offset, Int32ul),
            'hash' / Int64ul,
            'stickers' / self.vector(self.document_structures('stickers'), 'stickers'))

    @constructor(0x6010c534, 'messages_found_stickers_not_modified')
    def struct_0x6010c534(self):
        return Struct(
            'sname' / Computed('messages_found_stickers_not_modified'),
            'signature' / Hex(Const(0x6010c534, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'next_offset' / If(this.flags.has_next_offset, Int32ul))

    @structures
    def messages_found_stickers_structures(self, name):
        tag_map = {
            0x82c9e290: LazyBound(self.struct_0x82c9e290),
            0x6010c534: LazyBound(self.struct_0x6010c534)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3a54685e, 'messages_messages_slice')
    def struct_0x3a54685e(self):
        return Struct(
            'sname' / Computed('messages_messages_slice'),
            'signature' / Hex(Const(0x3a54685e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inexact=2,
                                has_next_rate=1,
                                has_offset_id_offset=4),
            'count' / Int32ul,
            'next_rate' / If(this.flags.has_next_rate, Int32ul),
            'offset_id_offset' / If(this.flags.has_offset_id_offset, Int32ul),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x8c718e87, 'messages_messages')
    def struct_0x8c718e87(self):
        return (
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xc776ba4e, 'messages_channel_messages')
    def struct_0xc776ba4e(self):
        return Struct(
            'sname' / Computed('messages_channel_messages'),
            'signature' / Hex(Const(0xc776ba4e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inexact=2,
                                has_offset_id_offset=4),
            'pts' / Int32ul,
            'count' / Int32ul,
            'offset_id_offset' / If(this.flags.has_offset_id_offset, Int32ul),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'topics' / self.vector(self.forum_topic_structures('topics'), 'topics'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x74535f21, 'messages_messages_not_modified')
    def struct_0x74535f21(self):
        return ['count' / Int32ul]

    @structures
    def messages_messages_structures(self, name):
        tag_map = {
            0x3a54685e: LazyBound(self.struct_0x3a54685e),
            0x8c718e87: LazyBound(self.struct_0x8c718e87),
            0xc776ba4e: LazyBound(self.struct_0xc776ba4e),
            0x74535f21: LazyBound(self.struct_0x74535f21)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xc68d6695, 'messages_quick_replies')
    def struct_0xc68d6695(self):
        return (
            'quick_replies' / self.vector(self.struct_0x0697102b(), 'quick_replies'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x5f91eb5b, 'messages_quick_replies_not_modified')
    def struct_0x5f91eb5b(self):
        return []

    @structures
    def messages_quick_replies_structures(self, name):
        tag_map = {
            0xc68d6695: LazyBound(self.struct_0xc68d6695),
            0x5f91eb5b: LazyBound(self.struct_0x5f91eb5b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb06fdbdf, 'messages_reactions_not_modified')
    def struct_0xb06fdbdf(self):
        return []

    @constructor(0xeafdf716, 'messages_reactions')
    def struct_0xeafdf716(self):
        return (
            'hash' / Int64ul,
            'reactions' / self.vector(self.reaction_structures('reactions'), 'reactions'))

    @structures
    def messages_reactions_structures(self, name):
        tag_map = {
            0xb06fdbdf: LazyBound(self.struct_0xb06fdbdf),
            0xeafdf716: LazyBound(self.struct_0xeafdf716)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x88d37c56, 'messages_recent_stickers')
    def struct_0x88d37c56(self):
        return (
            'hash' / Int64ul,
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'stickers' / self.vector(self.document_structures('stickers'), 'stickers'),
            'dates' / self.vector(Int32ul, 'dates'))

    @constructor(0x0b17f890, 'messages_recent_stickers_not_modified')
    def struct_0x0b17f890(self):
        return []

    @structures
    def messages_recent_stickers_structures(self, name):
        tag_map = {
            0x88d37c56: LazyBound(self.struct_0x88d37c56),
            0x0b17f890: LazyBound(self.struct_0x0b17f890)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf83ae221, 'messages_saved_dialogs')
    def struct_0xf83ae221(self):
        return (
            'dialogs' / self.vector(self.struct_0xbd87cb6c(), 'dialogs'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'))

    @constructor(0x44ba9dd9, 'messages_saved_dialogs_slice')
    def struct_0x44ba9dd9(self):
        return (
            'count' / Int32ul,
            'dialogs' / self.vector(self.struct_0xbd87cb6c(), 'dialogs'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'))

    @constructor(0xc01f6fe8, 'messages_saved_dialogs_not_modified')
    def struct_0xc01f6fe8(self):
        return ['count' / Int32ul]

    @structures
    def messages_saved_dialogs_structures(self, name):
        tag_map = {
            0xf83ae221: LazyBound(self.struct_0xf83ae221),
            0x44ba9dd9: LazyBound(self.struct_0x44ba9dd9),
            0xc01f6fe8: LazyBound(self.struct_0xc01f6fe8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe8025ca2, 'messages_saved_gifs_not_modified')
    def struct_0xe8025ca2(self):
        return []

    @constructor(0x84a02a0d, 'messages_saved_gifs')
    def struct_0x84a02a0d(self):
        return (
            'hash' / Int64ul,
            'gifs' / self.vector(self.document_structures('gifs'), 'gifs'))

    @structures
    def messages_saved_gifs_structures(self, name):
        tag_map = {
            0xe8025ca2: LazyBound(self.struct_0xe8025ca2),
            0x84a02a0d: LazyBound(self.struct_0x84a02a0d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x889b59ef, 'messages_saved_reactions_tags_not_modified')
    def struct_0x889b59ef(self):
        return []

    @constructor(0x3259950a, 'messages_saved_reactions_tags')
    def struct_0x3259950a(self):
        return (
            'tags' / self.vector(self.struct_0xcb6ff828(), 'tags'),
            'hash' / Int64ul)

    @structures
    def messages_saved_reaction_tags_structures(self, name):
        tag_map = {
            0x889b59ef: LazyBound(self.struct_0x889b59ef),
            0x3259950a: LazyBound(self.struct_0x3259950a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x560f8935, 'messages_sent_encrypted_message')
    def struct_0x560f8935(self):
        return ['date' / TTimestamp]

    @constructor(0x9493ff32, 'messages_sent_encrypted_file')
    def struct_0x9493ff32(self):
        return (
            'date' / TTimestamp,
            'file' / self.encrypted_file_structures('file'))

    @structures
    def messages_sent_encrypted_message_structures(self, name):
        tag_map = {
            0x560f8935: LazyBound(self.struct_0x560f8935),
            0x9493ff32: LazyBound(self.struct_0x9493ff32)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1839490f, 'messages_sponsored_messages_empty')
    def struct_0x1839490f(self):
        return []

    @constructor(0xc9ee1d87, 'messages_sponsored_messages')
    def struct_0xc9ee1d87(self):
        return Struct(
            'sname' / Computed('messages_sponsored_messages'),
            'signature' / Hex(Const(0xc9ee1d87, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_posts_between=1),
            'posts_between' / If(this.flags.has_posts_between, Int32ul),
            'messages' / self.vector(self.struct_0x4d93a990(), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def messages_sponsored_messages_structures(self, name):
        tag_map = {
            0x1839490f: LazyBound(self.struct_0x1839490f),
            0xc9ee1d87: LazyBound(self.struct_0xc9ee1d87)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x38641628, 'messages_sticker_set_install_result_success')
    def struct_0x38641628(self):
        return []

    @constructor(0x35e410a8, 'messages_sticker_set_install_result_archive')
    def struct_0x35e410a8(self):
        return ['sets' / self.vector(self.sticker_set_covered_structures('sets'), 'sets')]

    @structures
    def messages_sticker_set_install_result_structures(self, name):
        tag_map = {
            0x38641628: LazyBound(self.struct_0x38641628),
            0x35e410a8: LazyBound(self.struct_0x35e410a8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x6e153f16, 'messages_sticker_set')
    def struct_0x6e153f16(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'keywords' / self.vector(self.struct_0xfcfeb29c(), 'keywords'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0xb60a24a6, 'messages_sticker_set_layer146')
    def struct_0xb60a24a6(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0xd3f924eb, 'messages_sticker_set_not_modified')
    def struct_0xd3f924eb(self):
        return []

    @structures
    def messages_sticker_set_structures(self, name):
        tag_map = {
            0x6e153f16: LazyBound(self.struct_0x6e153f16),
            0xb60a24a6: LazyBound(self.struct_0xb60a24a6),
            0xd3f924eb: LazyBound(self.struct_0xd3f924eb)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf1749a22, 'messages_stickers_not_modified')
    def struct_0xf1749a22(self):
        return []

    @constructor(0x30a6ec7e, 'messages_stickers')
    def struct_0x30a6ec7e(self):
        return (
            'hash' / Int64ul,
            'stickers' / self.vector(self.document_structures('stickers'), 'stickers'))

    @structures
    def messages_stickers_structures(self, name):
        tag_map = {
            0xf1749a22: LazyBound(self.struct_0xf1749a22),
            0x30a6ec7e: LazyBound(self.struct_0x30a6ec7e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x97e8bebe, 'notification_sound_default')
    def struct_0x97e8bebe(self):
        return []

    @constructor(0x6f0c34df, 'notification_sound_none')
    def struct_0x6f0c34df(self):
        return []

    @constructor(0xff6c8049, 'notification_sound_ringtone')
    def struct_0xff6c8049(self):
        return ['id' / Int64ul]

    @constructor(0x830b9ae4, 'notification_sound_local')
    def struct_0x830b9ae4(self):
        return (
            'title' / TString,
            'data' / TString)

    @structures
    def notification_sound_structures(self, name):
        tag_map = {
            0x97e8bebe: LazyBound(self.struct_0x97e8bebe),
            0x6f0c34df: LazyBound(self.struct_0x6f0c34df),
            0xff6c8049: LazyBound(self.struct_0xff6c8049),
            0x830b9ae4: LazyBound(self.struct_0x830b9ae4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x226e6308, 'notify_forum_topic')
    def struct_0x226e6308(self):
        return (
            'peer' / self.peer_structures('peer'),
            'top_msg_id' / Int32ul)

    @constructor(0xd612e8ef, 'notify_broadcasts')
    def struct_0xd612e8ef(self):
        return []

    @constructor(0xc007cec3, 'notify_chats')
    def struct_0xc007cec3(self):
        return []

    @constructor(0xb4c83b4c, 'notify_users')
    def struct_0xb4c83b4c(self):
        return []

    @constructor(0x9fd40bd8, 'notify_peer')
    def struct_0x9fd40bd8(self):
        return ['peer' / self.peer_structures('peer')]

    @structures
    def notify_peer_structures(self, name):
        tag_map = {
            0x226e6308: LazyBound(self.struct_0x226e6308),
            0xd612e8ef: LazyBound(self.struct_0xd612e8ef),
            0xc007cec3: LazyBound(self.struct_0xc007cec3),
            0xb4c83b4c: LazyBound(self.struct_0xb4c83b4c),
            0x9fd40bd8: LazyBound(self.struct_0x9fd40bd8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9a8ae1e1, 'page_block_ordered_list')
    def struct_0x9a8ae1e1(self):
        return ['items' / self.vector(self.page_list_ordered_item_structures('items'), 'items')]

    @constructor(0xd9d71866, 'page_block_video_layer82')
    def struct_0xd9d71866(self):
        return Struct(
            'sname' / Computed('page_block_video_layer82'),
            'signature' / Hex(Const(0xd9d71866, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_autoplay=1,
                                is_loop=2),
            'video_id' / Int64ul,
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0xf259a80b, 'page_block_embed_post')
    def struct_0xf259a80b(self):
        return (
            'url' / TString,
            'webpage_id' / Int64ul,
            'author_photo_id' / Int64ul,
            'author' / TString,
            'date' / TTimestamp,
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'caption' / self.struct_0x6f747657())

    @constructor(0x467a0766, 'page_block_paragraph')
    def struct_0x467a0766(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x1e148390, 'page_block_kicker')
    def struct_0x1e148390(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x48870999, 'page_block_footer')
    def struct_0x48870999(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0xbfd064ec, 'page_block_header')
    def struct_0xbfd064ec(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0xc070d93e, 'page_block_preformatted')
    def struct_0xc070d93e(self):
        return (
            'text' / self.rich_text_structures('text'),
            'language' / TString)

    @constructor(0x16115a96, 'page_block_related_articles')
    def struct_0x16115a96(self):
        return (
            'title' / self.rich_text_structures('title'),
            'articles' / self.vector(self.struct_0xb390dc08(), 'articles'))

    @constructor(0xf12bb6e1, 'page_block_subheader')
    def struct_0xf12bb6e1(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x031f9590, 'page_block_slideshow')
    def struct_0x031f9590(self):
        return (
            'items' / self.vector(self.page_block_structures('items'), 'items'),
            'caption' / self.struct_0x6f747657())

    @constructor(0xce0d37b0, 'page_block_anchor')
    def struct_0xce0d37b0(self):
        return ['name' / TString]

    @constructor(0xa44f3ef6, 'page_block_map')
    def struct_0xa44f3ef6(self):
        return (
            'geo' / self.geo_point_structures('geo'),
            'zoom' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'caption' / self.struct_0x6f747657())

    @constructor(0xdb20b188, 'page_block_divider')
    def struct_0xdb20b188(self):
        return []

    @constructor(0x1759c560, 'page_block_photo')
    def struct_0x1759c560(self):
        return Struct(
            'sname' / Computed('page_block_photo'),
            'signature' / Hex(Const(0x1759c560, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_url=1),
            'photo_id' / Int64ul,
            'caption' / self.struct_0x6f747657(),
            'url' / If(this.flags.has_url, TString),
            'webpage_id' / If(this.flags.has_url, Int64ul))

    @constructor(0xe4e88011, 'page_block_list')
    def struct_0xe4e88011(self):
        return ['items' / self.vector(self.page_list_item_structures('items'), 'items')]

    @constructor(0x13567e8a, 'page_block_unsupported')
    def struct_0x13567e8a(self):
        return []

    @constructor(0x65a0fa4d, 'page_block_collage')
    def struct_0x65a0fa4d(self):
        return (
            'items' / self.vector(self.page_block_structures('items'), 'items'),
            'caption' / self.struct_0x6f747657())

    @constructor(0x3d5b64f2, 'page_block_author_date_layer60')
    def struct_0x3d5b64f2(self):
        return (
            'author' / TString,
            'published_date' / TTimestamp)

    @constructor(0x3a58c7f4, 'page_block_list_layer82')
    def struct_0x3a58c7f4(self):
        return (
            'ordered' / TBool,
            'items' / self.vector(self.page_list_item_structures('items'), 'items'))

    @constructor(0xa8718dc5, 'page_block_embed')
    def struct_0xa8718dc5(self):
        return Struct(
            'sname' / Computed('page_block_embed'),
            'signature' / Hex(Const(0xa8718dc5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_full_width=1,
                                is_allow_scrolling=8,
                                has_url=2,
                                has_html=4,
                                has_poster_photo_id=16,
                                has_w=32),
            'url' / If(this.flags.has_url, TString),
            'html' / If(this.flags.has_html, TString),
            'poster_photo_id' / If(this.flags.has_poster_photo_id, Int64ul),
            'w' / If(this.flags.has_w, Int32ul),
            'h' / If(this.flags.has_w, Int32ul),
            'caption' / self.struct_0x6f747657())

    @constructor(0x130c8963, 'page_block_slideshow_layer82')
    def struct_0x130c8963(self):
        return (
            'items' / self.vector(self.page_block_structures('items'), 'items'),
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0x8ffa9a1f, 'page_block_subtitle')
    def struct_0x8ffa9a1f(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x263d7c26, 'page_block_blockquote')
    def struct_0x263d7c26(self):
        return (
            'text' / self.rich_text_structures('text'),
            'caption' / self.rich_text_structures('caption'))

    @constructor(0x76768bed, 'page_block_details')
    def struct_0x76768bed(self):
        return Struct(
            'sname' / Computed('page_block_details'),
            'signature' / Hex(Const(0x76768bed, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_open=1),
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'title' / self.rich_text_structures('title'))

    @constructor(0xef1751b5, 'page_block_channel')
    def struct_0xef1751b5(self):
        return ['channel' / self.chat_structures('channel')]

    @constructor(0x7c8fe7b6, 'page_block_video')
    def struct_0x7c8fe7b6(self):
        return Struct(
            'sname' / Computed('page_block_video'),
            'signature' / Hex(Const(0x7c8fe7b6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_autoplay=1,
                                is_loop=2),
            'video_id' / Int64ul,
            'caption' / self.struct_0x6f747657())

    @constructor(0xd935d8fb, 'page_block_embed_layer60')
    def struct_0xd935d8fb(self):
        return Struct(
            'sname' / Computed('page_block_embed_layer60'),
            'signature' / Hex(Const(0xd935d8fb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_full_width=1,
                                is_allow_scrolling=8,
                                has_url=2,
                                has_html=4),
            'url' / If(this.flags.has_url, TString),
            'html' / If(this.flags.has_html, TString),
            'w' / Int32ul,
            'h' / Int32ul,
            'caption' / self.rich_text_structures('caption'))

    @constructor(0x4f4456d3, 'page_block_pullquote')
    def struct_0x4f4456d3(self):
        return (
            'text' / self.rich_text_structures('text'),
            'caption' / self.rich_text_structures('caption'))

    @constructor(0x804361ea, 'page_block_audio')
    def struct_0x804361ea(self):
        return (
            'audio_id' / Int64ul,
            'caption' / self.struct_0x6f747657())

    @constructor(0xbf4dea82, 'page_block_table')
    def struct_0xbf4dea82(self):
        return Struct(
            'sname' / Computed('page_block_table'),
            'signature' / Hex(Const(0xbf4dea82, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_bordered=1,
                                is_striped=2),
            'title' / self.rich_text_structures('title'),
            'rows' / self.vector(self.struct_0xe0c0c5e5(), 'rows'))

    @constructor(0xe9c69982, 'page_block_photo_layer82')
    def struct_0xe9c69982(self):
        return (
            'photo_id' / Int64ul,
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0x70abc3fd, 'page_block_title')
    def struct_0x70abc3fd(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x292c7be9, 'page_block_embed_post_layer82')
    def struct_0x292c7be9(self):
        return (
            'url' / TString,
            'webpage_id' / Int64ul,
            'author_photo_id' / Int64ul,
            'author' / TString,
            'date' / TTimestamp,
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0x08b31c4f, 'page_block_collage_layer82')
    def struct_0x08b31c4f(self):
        return (
            'items' / self.vector(self.page_block_structures('items'), 'items'),
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0x31b81a7f, 'page_block_audio_layer82')
    def struct_0x31b81a7f(self):
        return (
            'audio_id' / Int64ul,
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0x39f23300, 'page_block_cover')
    def struct_0x39f23300(self):
        return ['cover' / self.page_block_structures('cover')]

    @constructor(0xcde200d1, 'page_block_embed_layer82')
    def struct_0xcde200d1(self):
        return Struct(
            'sname' / Computed('page_block_embed_layer82'),
            'signature' / Hex(Const(0xcde200d1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_full_width=1,
                                is_allow_scrolling=8,
                                has_url=2,
                                has_html=4,
                                has_poster_photo_id=16),
            'url' / If(this.flags.has_url, TString),
            'html' / If(this.flags.has_html, TString),
            'poster_photo_id' / If(this.flags.has_poster_photo_id, Int64ul),
            'w' / Int32ul,
            'h' / Int32ul,
            'caption_text' / self.rich_text_structures('caption_text'))

    @constructor(0xbaafe5e0, 'page_block_author_date')
    def struct_0xbaafe5e0(self):
        return (
            'author' / self.rich_text_structures('author'),
            'published_date' / TTimestamp)

    @structures
    def page_block_structures(self, name):
        tag_map = {
            0x9a8ae1e1: LazyBound(self.struct_0x9a8ae1e1),
            0xd9d71866: LazyBound(self.struct_0xd9d71866),
            0xf259a80b: LazyBound(self.struct_0xf259a80b),
            0x467a0766: LazyBound(self.struct_0x467a0766),
            0x1e148390: LazyBound(self.struct_0x1e148390),
            0x48870999: LazyBound(self.struct_0x48870999),
            0xbfd064ec: LazyBound(self.struct_0xbfd064ec),
            0xc070d93e: LazyBound(self.struct_0xc070d93e),
            0x16115a96: LazyBound(self.struct_0x16115a96),
            0xf12bb6e1: LazyBound(self.struct_0xf12bb6e1),
            0x031f9590: LazyBound(self.struct_0x031f9590),
            0xce0d37b0: LazyBound(self.struct_0xce0d37b0),
            0xa44f3ef6: LazyBound(self.struct_0xa44f3ef6),
            0xdb20b188: LazyBound(self.struct_0xdb20b188),
            0x1759c560: LazyBound(self.struct_0x1759c560),
            0xe4e88011: LazyBound(self.struct_0xe4e88011),
            0x13567e8a: LazyBound(self.struct_0x13567e8a),
            0x65a0fa4d: LazyBound(self.struct_0x65a0fa4d),
            0x3d5b64f2: LazyBound(self.struct_0x3d5b64f2),
            0x3a58c7f4: LazyBound(self.struct_0x3a58c7f4),
            0xa8718dc5: LazyBound(self.struct_0xa8718dc5),
            0x130c8963: LazyBound(self.struct_0x130c8963),
            0x8ffa9a1f: LazyBound(self.struct_0x8ffa9a1f),
            0x263d7c26: LazyBound(self.struct_0x263d7c26),
            0x76768bed: LazyBound(self.struct_0x76768bed),
            0xef1751b5: LazyBound(self.struct_0xef1751b5),
            0x7c8fe7b6: LazyBound(self.struct_0x7c8fe7b6),
            0xd935d8fb: LazyBound(self.struct_0xd935d8fb),
            0x4f4456d3: LazyBound(self.struct_0x4f4456d3),
            0x804361ea: LazyBound(self.struct_0x804361ea),
            0xbf4dea82: LazyBound(self.struct_0xbf4dea82),
            0xe9c69982: LazyBound(self.struct_0xe9c69982),
            0x70abc3fd: LazyBound(self.struct_0x70abc3fd),
            0x292c7be9: LazyBound(self.struct_0x292c7be9),
            0x08b31c4f: LazyBound(self.struct_0x08b31c4f),
            0x31b81a7f: LazyBound(self.struct_0x31b81a7f),
            0x39f23300: LazyBound(self.struct_0x39f23300),
            0xcde200d1: LazyBound(self.struct_0xcde200d1),
            0xbaafe5e0: LazyBound(self.struct_0xbaafe5e0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x25e073fc, 'page_list_item_blocks')
    def struct_0x25e073fc(self):
        return ['blocks' / self.vector(self.page_block_structures('blocks'), 'blocks')]

    @constructor(0xb92fb6cd, 'page_list_item_text')
    def struct_0xb92fb6cd(self):
        return ['text' / self.rich_text_structures('text')]

    @structures
    def page_list_item_structures(self, name):
        tag_map = {
            0x25e073fc: LazyBound(self.struct_0x25e073fc),
            0xb92fb6cd: LazyBound(self.struct_0xb92fb6cd)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5e068047, 'page_list_ordered_item_text')
    def struct_0x5e068047(self):
        return (
            'num' / TString,
            'text' / self.rich_text_structures('text'))

    @constructor(0x98dd8936, 'page_list_ordered_item_blocks')
    def struct_0x98dd8936(self):
        return (
            'num' / TString,
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'))

    @structures
    def page_list_ordered_item_structures(self, name):
        tag_map = {
            0x5e068047: LazyBound(self.struct_0x5e068047),
            0x98dd8936: LazyBound(self.struct_0x98dd8936)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8dee6c44, 'page_part_layer67')
    def struct_0x8dee6c44(self):
        return (
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0x8e3f9ebe, 'page_part_layer82')
    def struct_0x8e3f9ebe(self):
        return (
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0xd7a19d69, 'page_full_layer67')
    def struct_0xd7a19d69(self):
        return (
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0x556ec7aa, 'page_full_layer82')
    def struct_0x556ec7aa(self):
        return (
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0xae891bec, 'page_layer110')
    def struct_0xae891bec(self):
        return Struct(
            'sname' / Computed('page_layer110'),
            'signature' / Hex(Const(0xae891bec, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_part=1,
                                is_rtl=2),
            'url' / TString,
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0x98657f0d, 'page')
    def struct_0x98657f0d(self):
        return Struct(
            'sname' / Computed('page'),
            'signature' / Hex(Const(0x98657f0d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_part=1,
                                is_rtl=2,
                                is_v2=4,
                                has_views=8),
            'url' / TString,
            'blocks' / self.vector(self.page_block_structures('blocks'), 'blocks'),
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'),
            'views' / If(this.flags.has_views, Int32ul))

    @structures
    def page_structures(self, name):
        tag_map = {
            0x8dee6c44: LazyBound(self.struct_0x8dee6c44),
            0x8e3f9ebe: LazyBound(self.struct_0x8e3f9ebe),
            0xd7a19d69: LazyBound(self.struct_0xd7a19d69),
            0x556ec7aa: LazyBound(self.struct_0x556ec7aa),
            0xae891bec: LazyBound(self.struct_0xae891bec),
            0x98657f0d: LazyBound(self.struct_0x98657f0d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd45ab096, 'password_kdf_algo_unknown')
    def struct_0xd45ab096(self):
        return []

    @constructor(0x3a912d4a, 'password_kdf_algo_sha256sha256pbkdf2hmacsha512iter100000sha256mod_pow')
    def struct_0x3a912d4a(self):
        return (
            'salt1' / TBytes,
            'salt2' / TBytes,
            'g' / Int32ul,
            'p' / TBytes)

    @structures
    def password_kdf_algo_structures(self, name):
        tag_map = {
            0xd45ab096: LazyBound(self.struct_0xd45ab096),
            0x3a912d4a: LazyBound(self.struct_0x3a912d4a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa0058751, 'payments_payment_form')
    def struct_0xa0058751(self):
        return Struct(
            'sname' / Computed('payments_payment_form'),
            'signature' / Hex(Const(0xa0058751, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_save_credentials=4,
                                is_password_missing=8,
                                has_photo=32,
                                has_native_provider=16,
                                has_additional_methods=64,
                                has_saved_info=1,
                                has_saved_credentials=2),
            'form_id' / Int64ul,
            'bot_id' / Int64ul,
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'invoice' / self.invoice_structures('invoice'),
            'provider_id' / Int64ul,
            'url' / TString,
            'native_provider' / If(this.flags.has_native_provider, TString),
            'native_params' / If(this.flags.has_native_provider, self.struct_0x7d748d04()),
            'additional_methods' / If(this.flags.has_additional_methods, self.vector(self.struct_0x88f8f21b(), 'additional_methods')),
            'saved_info' / If(this.flags.has_saved_info, self.struct_0x909c3f94()),
            'saved_credentials' / If(this.flags.has_saved_credentials, self.vector(self.struct_0xcdc27a1f(), 'saved_credentials')),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x7bf6b15c, 'payments_payment_form_stars')
    def struct_0x7bf6b15c(self):
        return Struct(
            'sname' / Computed('payments_payment_form_stars'),
            'signature' / Hex(Const(0x7bf6b15c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_save_credentials=4,
                                is_password_missing=8,
                                has_photo=32),
            'form_id' / Int64ul,
            'bot_id' / Int64ul,
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'invoice' / self.invoice_structures('invoice'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb425cfe1, 'payments_payment_form_star_gift')
    def struct_0xb425cfe1(self):
        return (
            'form_id' / Int64ul,
            'invoice' / self.invoice_structures('invoice'))

    @structures
    def payment_form_structures(self, name):
        tag_map = {
            0xa0058751: LazyBound(self.struct_0xa0058751),
            0x7bf6b15c: LazyBound(self.struct_0x7bf6b15c),
            0xb425cfe1: LazyBound(self.struct_0xb425cfe1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x70c4fe03, 'payments_payment_receipt')
    def struct_0x70c4fe03(self):
        return Struct(
            'sname' / Computed('payments_payment_receipt'),
            'signature' / Hex(Const(0x70c4fe03, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=4,
                                has_info=1,
                                has_shipping=2,
                                has_tip_amount=8),
            'date' / TTimestamp,
            'bot_id' / Int64ul,
            'provider_id' / Int64ul,
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'invoice' / self.invoice_structures('invoice'),
            'info' / If(this.flags.has_info, self.struct_0x909c3f94()),
            'shipping' / If(this.flags.has_shipping, self.struct_0xb6213cdf()),
            'tip_amount' / If(this.flags.has_tip_amount, Int64ul),
            'currency' / TString,
            'total_amount' / Int64ul,
            'credentials_title' / TString,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xdabbf83a, 'payments_payment_receipt_stars')
    def struct_0xdabbf83a(self):
        return Struct(
            'sname' / Computed('payments_payment_receipt_stars'),
            'signature' / Hex(Const(0xdabbf83a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=4),
            'date' / TTimestamp,
            'bot_id' / Int64ul,
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'invoice' / self.invoice_structures('invoice'),
            'currency' / TString,
            'total_amount' / Int64ul,
            'transaction_id' / TString,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def payment_receipt_structures(self, name):
        tag_map = {
            0x70c4fe03: LazyBound(self.struct_0x70c4fe03),
            0xdabbf83a: LazyBound(self.struct_0xdabbf83a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe175e66f, 'payments_giveaway_info_results')
    def struct_0xe175e66f(self):
        return Struct(
            'sname' / Computed('payments_giveaway_info_results'),
            'signature' / Hex(Const(0xe175e66f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_winner=1,
                                is_refunded=2,
                                has_activated_count=4),
            'start_date' / TTimestamp,
            'gift_code_slug' / If(this.flags.is_winner, TString),
            'stars_prize' / If(this.flags.is_winner, Int64ul),
            'finish_date' / TTimestamp,
            'winners_count' / Int32ul,
            'activated_count' / If(this.flags.has_activated_count, Int32ul))

    @constructor(0x00cd5570, 'payments_giveaway_info_results_layer186')
    def struct_0x00cd5570(self):
        return Struct(
            'sname' / Computed('payments_giveaway_info_results_layer186'),
            'signature' / Hex(Const(0x00cd5570, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_winner=1,
                                is_refunded=2),
            'start_date' / TTimestamp,
            'gift_code_slug' / If(this.flags.is_winner, TString),
            'finish_date' / TTimestamp,
            'winners_count' / Int32ul,
            'activated_count' / Int32ul)

    @constructor(0x4367daa0, 'payments_giveaway_info')
    def struct_0x4367daa0(self):
        return Struct(
            'sname' / Computed('payments_giveaway_info'),
            'signature' / Hex(Const(0x4367daa0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_participating=1,
                                is_preparing_results=8,
                                has_joined_too_early_date=2,
                                has_admin_disallowed_chat_id=4,
                                has_disallowed_country=16),
            'start_date' / TTimestamp,
            'joined_too_early_date' / If(this.flags.has_joined_too_early_date, TTimestamp),
            'admin_disallowed_chat_id' / If(this.flags.has_admin_disallowed_chat_id, Int64ul),
            'disallowed_country' / If(this.flags.has_disallowed_country, TString))

    @structures
    def payments_giveaway_info_structures(self, name):
        tag_map = {
            0xe175e66f: LazyBound(self.struct_0xe175e66f),
            0x00cd5570: LazyBound(self.struct_0x00cd5570),
            0x4367daa0: LazyBound(self.struct_0x4367daa0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd8411139, 'payments_payment_verification_needed')
    def struct_0xd8411139(self):
        return ['url' / TString]

    @constructor(0x4e5f810d, 'payments_payment_result')
    def struct_0x4e5f810d(self):
        return ['updates' / self.updates_structures('updates')]

    @structures
    def payments_payment_result_structures(self, name):
        tag_map = {
            0xd8411139: LazyBound(self.struct_0xd8411139),
            0x4e5f810d: LazyBound(self.struct_0x4e5f810d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf8ec284b, 'peer_self_located')
    def struct_0xf8ec284b(self):
        return ['expires' / Int32ul]

    @constructor(0xca461b5d, 'peer_located')
    def struct_0xca461b5d(self):
        return (
            'peer' / self.peer_structures('peer'),
            'expires' / Int32ul,
            'distance' / Int32ul)

    @structures
    def peer_located_structures(self, name):
        tag_map = {
            0xf8ec284b: LazyBound(self.struct_0xf8ec284b),
            0xca461b5d: LazyBound(self.struct_0xca461b5d)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x99622c0c, 'peer_notify_settings')
    def struct_0x99622c0c(self):
        return Struct(
            'sname' / Computed('peer_notify_settings'),
            'signature' / Hex(Const(0x99622c0c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_show_previews=1,
                                has_silent=2,
                                has_mute_until=4,
                                has_ios_sound=8,
                                has_android_sound=16,
                                has_other_sound=32,
                                has_stories_muted=64,
                                has_stories_hide_sender=128,
                                has_stories_ios_sound=256,
                                has_stories_android_sound=512,
                                has_stories_other_sound=1024),
            'show_previews' / If(this.flags.has_show_previews, TBool),
            'silent' / If(this.flags.has_silent, TBool),
            'mute_until' / If(this.flags.has_mute_until, Int32ul),
            'ios_sound' / If(this.flags.has_ios_sound, self.notification_sound_structures('ios_sound')),
            'android_sound' / If(this.flags.has_android_sound, self.notification_sound_structures('android_sound')),
            'other_sound' / If(this.flags.has_other_sound, self.notification_sound_structures('other_sound')),
            'stories_muted' / If(this.flags.has_stories_muted, TBool),
            'stories_hide_sender' / If(this.flags.has_stories_hide_sender, TBool),
            'stories_ios_sound' / If(this.flags.has_stories_ios_sound, self.notification_sound_structures('stories_ios_sound')),
            'stories_android_sound' / If(this.flags.has_stories_android_sound, self.notification_sound_structures('stories_android_sound')),
            'stories_other_sound' / If(this.flags.has_stories_other_sound, self.notification_sound_structures('stories_other_sound')))

    @constructor(0xa83b0426, 'peer_notify_settings_layer156')
    def struct_0xa83b0426(self):
        return Struct(
            'sname' / Computed('peer_notify_settings_layer156'),
            'signature' / Hex(Const(0xa83b0426, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_show_previews=1,
                                has_silent=2,
                                has_mute_until=4,
                                has_ios_sound=8,
                                has_android_sound=16,
                                has_other_sound=32),
            'show_previews' / If(this.flags.has_show_previews, TBool),
            'silent' / If(this.flags.has_silent, TBool),
            'mute_until' / If(this.flags.has_mute_until, Int32ul),
            'ios_sound' / If(this.flags.has_ios_sound, self.notification_sound_structures('ios_sound')),
            'android_sound' / If(this.flags.has_android_sound, self.notification_sound_structures('android_sound')),
            'other_sound' / If(this.flags.has_other_sound, self.notification_sound_structures('other_sound')))

    @constructor(0x9acda4c0, 'peer_notify_settings_layer77')
    def struct_0x9acda4c0(self):
        return Struct(
            'sname' / Computed('peer_notify_settings_layer77'),
            'signature' / Hex(Const(0x9acda4c0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_show_previews=1,
                                is_silent=2),
            'mute_until' / Int32ul,
            'sound' / TString)

    @constructor(0xaf509d20, 'peer_notify_settings_layer139')
    def struct_0xaf509d20(self):
        return Struct(
            'sname' / Computed('peer_notify_settings_layer139'),
            'signature' / Hex(Const(0xaf509d20, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_show_previews=1,
                                has_silent=2,
                                has_mute_until=4,
                                has_sound=8),
            'show_previews' / If(this.flags.has_show_previews, TBool),
            'silent' / If(this.flags.has_silent, TBool),
            'mute_until' / If(this.flags.has_mute_until, Int32ul),
            'sound' / If(this.flags.has_sound, TString))

    @constructor(0x8d5e11ee, 'peer_notify_settings_layer47')
    def struct_0x8d5e11ee(self):
        return (
            'mute_until' / Int32ul,
            'sound' / TString,
            'show_previews' / TBool,
            'events_mask' / Int32ul)

    @constructor(0x70a68512, 'peer_notify_settings_empty_layer77')
    def struct_0x70a68512(self):
        return []

    @structures
    def peer_notify_settings_structures(self, name):
        tag_map = {
            0x99622c0c: LazyBound(self.struct_0x99622c0c),
            0xa83b0426: LazyBound(self.struct_0xa83b0426),
            0x9acda4c0: LazyBound(self.struct_0x9acda4c0),
            0xaf509d20: LazyBound(self.struct_0xaf509d20),
            0x8d5e11ee: LazyBound(self.struct_0x8d5e11ee),
            0x70a68512: LazyBound(self.struct_0x70a68512)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xacd66c5e, 'peer_settings')
    def struct_0xacd66c5e(self):
        return Struct(
            'sname' / Computed('peer_settings'),
            'signature' / Hex(Const(0xacd66c5e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_report_spam=1,
                                is_add_contact=2,
                                is_block_contact=4,
                                is_share_contact=8,
                                is_need_contacts_exception=16,
                                is_report_geo=32,
                                is_autoarchived=128,
                                is_invite_members=256,
                                is_request_chat_broadcast=1024,
                                is_business_bot_paused=2048,
                                is_business_bot_can_reply=4096,
                                has_geo_distance=64,
                                has_request_chat_title=512,
                                has_business_bot_id=8192),
            'geo_distance' / If(this.flags.has_geo_distance, Int32ul),
            'request_chat_title' / If(this.flags.has_request_chat_title, TString),
            'request_chat_date' / If(this.flags.has_request_chat_title, TTimestamp),
            'business_bot_id' / If(this.flags.has_business_bot_id, Int64ul),
            'business_bot_manage_url' / If(this.flags.has_business_bot_id, TString))

    @constructor(0xa518110d, 'peer_settings_layer176')
    def struct_0xa518110d(self):
        return Struct(
            'sname' / Computed('peer_settings_layer176'),
            'signature' / Hex(Const(0xa518110d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_report_spam=1,
                                is_add_contact=2,
                                is_block_contact=4,
                                is_share_contact=8,
                                is_need_contacts_exception=16,
                                is_report_geo=32,
                                is_autoarchived=128,
                                is_invite_members=256,
                                is_request_chat_broadcast=1024,
                                has_geo_distance=64,
                                has_request_chat_title=512),
            'geo_distance' / If(this.flags.has_geo_distance, Int32ul),
            'request_chat_title' / If(this.flags.has_request_chat_title, TString),
            'request_chat_date' / If(this.flags.has_request_chat_title, TTimestamp))

    @constructor(0x733f2961, 'peer_settings_layer134')
    def struct_0x733f2961(self):
        return Struct(
            'sname' / Computed('peer_settings_layer134'),
            'signature' / Hex(Const(0x733f2961, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_report_spam=1,
                                is_add_contact=2,
                                is_block_contact=4,
                                is_share_contact=8,
                                is_need_contacts_exception=16,
                                is_report_geo=32,
                                is_autoarchived=128,
                                is_invite_members=256,
                                is_request_chat_broadcast=1024,
                                has_geo_distance=64),
            'geo_distance' / If(this.flags.has_geo_distance, Int32ul))

    @structures
    def peer_settings_structures(self, name):
        tag_map = {
            0xacd66c5e: LazyBound(self.struct_0xacd66c5e),
            0xa518110d: LazyBound(self.struct_0xa518110d),
            0x733f2961: LazyBound(self.struct_0x733f2961)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa2a5371e, 'peer_channel')
    def struct_0xa2a5371e(self):
        return ['channel_id' / Int64ul]

    @constructor(0xbddde532, 'peer_channel_layer131')
    def struct_0xbddde532(self):
        return ['channel_id' / Int32ul]

    @constructor(0x59511722, 'peer_user')
    def struct_0x59511722(self):
        return ['user_id' / Int64ul]

    @constructor(0x9db1bc6d, 'peer_user_layer131')
    def struct_0x9db1bc6d(self):
        return ['user_id' / Int32ul]

    @constructor(0x36c6019a, 'peer_chat')
    def struct_0x36c6019a(self):
        return ['chat_id' / Int64ul]

    @constructor(0xbad0e5bb, 'peer_chat_layer131')
    def struct_0xbad0e5bb(self):
        return ['chat_id' / Int32ul]

    @structures
    def peer_structures(self, name):
        tag_map = {
            0xa2a5371e: LazyBound(self.struct_0xa2a5371e),
            0xbddde532: LazyBound(self.struct_0xbddde532),
            0x59511722: LazyBound(self.struct_0x59511722),
            0x9db1bc6d: LazyBound(self.struct_0x9db1bc6d),
            0x36c6019a: LazyBound(self.struct_0x36c6019a),
            0xbad0e5bb: LazyBound(self.struct_0xbad0e5bb)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x57adc690, 'phone_call_discard_reason_hangup')
    def struct_0x57adc690(self):
        return []

    @constructor(0xfaf7e8c9, 'phone_call_discard_reason_busy')
    def struct_0xfaf7e8c9(self):
        return []

    @constructor(0x85e42301, 'phone_call_discard_reason_missed')
    def struct_0x85e42301(self):
        return []

    @constructor(0xe095c1a0, 'phone_call_discard_reason_disconnect')
    def struct_0xe095c1a0(self):
        return []

    @constructor(0xafe2b839, 'phone_call_discard_reason_allow_group_call')
    def struct_0xafe2b839(self):
        return ['encrypted_key' / TBytes]

    @structures
    def phone_call_discard_reason_structures(self, name):
        tag_map = {
            0x57adc690: LazyBound(self.struct_0x57adc690),
            0xfaf7e8c9: LazyBound(self.struct_0xfaf7e8c9),
            0x85e42301: LazyBound(self.struct_0x85e42301),
            0xe095c1a0: LazyBound(self.struct_0xe095c1a0),
            0xafe2b839: LazyBound(self.struct_0xafe2b839)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfc878fc8, 'phone_call_protocol')
    def struct_0xfc878fc8(self):
        return Struct(
            'sname' / Computed('phone_call_protocol'),
            'signature' / Hex(Const(0xfc878fc8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_udp_p2p=1,
                                is_udp_reflector=2),
            'min_layer' / Int32ul,
            'max_layer' / Int32ul,
            'library_versions' / self.vector(TString, 'library_versions'))

    @constructor(0xa2bb35cb, 'phone_call_protocol_layer110')
    def struct_0xa2bb35cb(self):
        return Struct(
            'sname' / Computed('phone_call_protocol_layer110'),
            'signature' / Hex(Const(0xa2bb35cb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_udp_p2p=1,
                                is_udp_reflector=2),
            'min_layer' / Int32ul,
            'max_layer' / Int32ul)

    @structures
    def phone_call_protocol_structures(self, name):
        tag_map = {
            0xfc878fc8: LazyBound(self.struct_0xfc878fc8),
            0xa2bb35cb: LazyBound(self.struct_0xa2bb35cb)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x45361c63, 'phone_call_requested')
    def struct_0x45361c63(self):
        return Struct(
            'sname' / Computed('phone_call_requested'),
            'signature' / Hex(Const(0x45361c63, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64,
                                has_conference_call=256),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_hash' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()))

    @constructor(0x14b0ed0c, 'phone_call_requested_layer195')
    def struct_0x14b0ed0c(self):
        return Struct(
            'sname' / Computed('phone_call_requested_layer195'),
            'signature' / Hex(Const(0x14b0ed0c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_hash' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'))

    @constructor(0x3ba5940c, 'phone_call')
    def struct_0x3ba5940c(self):
        return Struct(
            'sname' / Computed('phone_call'),
            'signature' / Hex(Const(0x3ba5940c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_p2p_allowed=32,
                                is_video=64,
                                has_custom_parameters=128,
                                has_conference_call=256),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_or_b' / TBytes,
            'key_fingerprint' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'connections' / self.vector(self.phone_connection_structures('connections'), 'connections'),
            'start_date' / TTimestamp,
            'custom_parameters' / If(this.flags.has_custom_parameters, self.struct_0x7d748d04()),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()))

    @constructor(0x30535af5, 'phone_call_layer195')
    def struct_0x30535af5(self):
        return Struct(
            'sname' / Computed('phone_call_layer195'),
            'signature' / Hex(Const(0x30535af5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_p2p_allowed=32,
                                is_video=64,
                                has_custom_parameters=128),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_or_b' / TBytes,
            'key_fingerprint' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'connections' / self.vector(self.phone_connection_structures('connections'), 'connections'),
            'start_date' / TTimestamp,
            'custom_parameters' / If(this.flags.has_custom_parameters, self.struct_0x7d748d04()))

    @constructor(0x967f7c67, 'phone_call_layer176')
    def struct_0x967f7c67(self):
        return Struct(
            'sname' / Computed('phone_call_layer176'),
            'signature' / Hex(Const(0x967f7c67, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_p2p_allowed=32,
                                is_video=64),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_a_or_b' / TBytes,
            'key_fingerprint' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'connections' / self.vector(self.phone_connection_structures('connections'), 'connections'),
            'start_date' / TTimestamp)

    @constructor(0x5366c915, 'phone_call_empty')
    def struct_0x5366c915(self):
        return ['id' / Int64ul]

    @constructor(0x22fd7181, 'phone_call_accepted')
    def struct_0x22fd7181(self):
        return Struct(
            'sname' / Computed('phone_call_accepted'),
            'signature' / Hex(Const(0x22fd7181, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64,
                                has_conference_call=256),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_b' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()))

    @constructor(0xeed42858, 'phone_call_waiting')
    def struct_0xeed42858(self):
        return Struct(
            'sname' / Computed('phone_call_waiting'),
            'signature' / Hex(Const(0xeed42858, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64,
                                has_receive_date=1,
                                has_conference_call=256),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'receive_date' / If(this.flags.has_receive_date, TTimestamp),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()))

    @constructor(0xc5226f17, 'phone_call_waiting_layer195')
    def struct_0xc5226f17(self):
        return Struct(
            'sname' / Computed('phone_call_waiting_layer195'),
            'signature' / Hex(Const(0xc5226f17, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64,
                                has_receive_date=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'),
            'receive_date' / If(this.flags.has_receive_date, TTimestamp))

    @constructor(0x50ca4de1, 'phone_call_discarded_layer195')
    def struct_0x50ca4de1(self):
        return Struct(
            'sname' / Computed('phone_call_discarded_layer195'),
            'signature' / Hex(Const(0x50ca4de1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_need_rating=4,
                                is_need_debug=8,
                                is_video=64,
                                has_reason=1,
                                has_duration=2),
            'id' / Int64ul,
            'reason' / If(this.flags.has_reason, self.phone_call_discard_reason_structures('reason')),
            'duration' / If(this.flags.has_duration, Int32ul))

    @constructor(0xf9d25503, 'phone_call_discarded')
    def struct_0xf9d25503(self):
        return Struct(
            'sname' / Computed('phone_call_discarded'),
            'signature' / Hex(Const(0xf9d25503, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_need_rating=4,
                                is_need_debug=8,
                                is_video=64,
                                has_reason=1,
                                has_duration=2,
                                has_conference_call=256),
            'id' / Int64ul,
            'reason' / If(this.flags.has_reason, self.phone_call_discard_reason_structures('reason')),
            'duration' / If(this.flags.has_duration, Int32ul),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()))

    @structures
    def phone_call_structures(self, name):
        tag_map = {
            0x45361c63: LazyBound(self.struct_0x45361c63),
            0x14b0ed0c: LazyBound(self.struct_0x14b0ed0c),
            0x3ba5940c: LazyBound(self.struct_0x3ba5940c),
            0x30535af5: LazyBound(self.struct_0x30535af5),
            0x967f7c67: LazyBound(self.struct_0x967f7c67),
            0x5366c915: LazyBound(self.struct_0x5366c915),
            0x22fd7181: LazyBound(self.struct_0x22fd7181),
            0xeed42858: LazyBound(self.struct_0xeed42858),
            0xc5226f17: LazyBound(self.struct_0xc5226f17),
            0x50ca4de1: LazyBound(self.struct_0x50ca4de1),
            0xf9d25503: LazyBound(self.struct_0xf9d25503)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9cc123c7, 'phone_connection')
    def struct_0x9cc123c7(self):
        return Struct(
            'sname' / Computed('phone_connection'),
            'signature' / Hex(Const(0x9cc123c7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_tcp=1),
            'id' / Int64ul,
            'ip' / TString,
            'ipv6' / TString,
            'port' / Int32ul,
            'peer_tag' / TBytes)

    @constructor(0x635fe375, 'phone_connection_webrtc')
    def struct_0x635fe375(self):
        return Struct(
            'sname' / Computed('phone_connection_webrtc'),
            'signature' / Hex(Const(0x635fe375, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_turn=1,
                                is_stun=2),
            'id' / Int64ul,
            'ip' / TString,
            'ipv6' / TString,
            'port' / Int32ul,
            'username' / TString,
            'password' / TString)

    @structures
    def phone_connection_structures(self, name):
        tag_map = {
            0x9cc123c7: LazyBound(self.struct_0x9cc123c7),
            0x635fe375: LazyBound(self.struct_0x635fe375)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd8214d41, 'photo_path_size')
    def struct_0xd8214d41(self):
        return (
            'type' / TString,
            'bytes' / TBytes,
            'h' / Computed(50),
            'w' / Computed(50))

    @constructor(0x77bfb61b, 'photo_size_layer127')
    def struct_0x77bfb61b(self):
        return (
            'type' / TString,
            'location' / self.file_location_structures('location'),
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul)

    @constructor(0x0e17e23c, 'photo_size_empty')
    def struct_0x0e17e23c(self):
        return ['type' / TString]

    @constructor(0x5aa86a51, 'photo_size_progressive_layer127')
    def struct_0x5aa86a51(self):
        return (
            'type' / TString,
            'location' / self.file_location_structures('location'),
            'w' / Int32ul,
            'h' / Int32ul,
            'sizes' / self.vector(Int32ul, 'sizes'))

    @constructor(0xe0b0bc2e, 'photo_stripped_size')
    def struct_0xe0b0bc2e(self):
        return (
            'type' / TString,
            'bytes' / TBytes,
            'h' / Computed(50),
            'w' / Computed(50))

    @constructor(0xe9a734fa, 'photo_cached_size_layer127')
    def struct_0xe9a734fa(self):
        return (
            'type' / TString,
            'location' / self.file_location_structures('location'),
            'w' / Int32ul,
            'h' / Int32ul,
            'bytes' / TBytes)

    @constructor(0x75c78e60, 'photo_size')
    def struct_0x75c78e60(self):
        return (
            'type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul)

    @constructor(0x021e1ad6, 'photo_cached_size')
    def struct_0x021e1ad6(self):
        return (
            'type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'bytes' / TBytes)

    @constructor(0xfa3efb95, 'photo_size_progressive')
    def struct_0xfa3efb95(self):
        return (
            'type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'sizes' / self.vector(Int32ul, 'sizes'))

    @structures
    def photo_size_structures(self, name):
        tag_map = {
            0xd8214d41: LazyBound(self.struct_0xd8214d41),
            0x77bfb61b: LazyBound(self.struct_0x77bfb61b),
            0x0e17e23c: LazyBound(self.struct_0x0e17e23c),
            0x5aa86a51: LazyBound(self.struct_0x5aa86a51),
            0xe0b0bc2e: LazyBound(self.struct_0xe0b0bc2e),
            0xe9a734fa: LazyBound(self.struct_0xe9a734fa),
            0x75c78e60: LazyBound(self.struct_0x75c78e60),
            0x021e1ad6: LazyBound(self.struct_0x021e1ad6),
            0xfa3efb95: LazyBound(self.struct_0xfa3efb95)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9c477dd8, 'photo_layer97')
    def struct_0x9c477dd8(self):
        return Struct(
            'sname' / Computed('photo_layer97'),
            'signature' / Hex(Const(0x9c477dd8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_stickers=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'))

    @constructor(0xcded42fe, 'photo_layer55')
    def struct_0xcded42fe(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'))

    @constructor(0xc3838076, 'photo_old2')
    def struct_0xc3838076(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'geo' / self.geo_point_structures('geo'),
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'))

    @constructor(0x2331b22d, 'photo_empty')
    def struct_0x2331b22d(self):
        return ['id' / Int64ul]

    @constructor(0x22b56751, 'photo_old')
    def struct_0x22b56751(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'caption' / TString,
            'geo' / self.geo_point_structures('geo'),
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'))

    @constructor(0xd07504a5, 'photo_layer115')
    def struct_0xd07504a5(self):
        return Struct(
            'sname' / Computed('photo_layer115'),
            'signature' / Hex(Const(0xd07504a5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_stickers=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'),
            'dc_id' / Int32ul)

    @constructor(0xfb197a65, 'photo')
    def struct_0xfb197a65(self):
        return Struct(
            'sname' / Computed('photo'),
            'signature' / Hex(Const(0xfb197a65, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_stickers=1,
                                has_video_sizes=2),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'file_reference' / TBytes,
            'date' / TTimestamp,
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'),
            'video_sizes' / If(this.flags.has_video_sizes, self.vector(self.video_size_structures('video_sizes'), 'video_sizes')),
            'dc_id' / Int32ul)

    @constructor(0x9288dd29, 'photo_layer82')
    def struct_0x9288dd29(self):
        return Struct(
            'sname' / Computed('photo_layer82'),
            'signature' / Hex(Const(0x9288dd29, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_stickers=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'sizes' / self.vector(self.photo_size_structures('sizes'), 'sizes'))

    @structures
    def photo_structures(self, name):
        tag_map = {
            0x9c477dd8: LazyBound(self.struct_0x9c477dd8),
            0xcded42fe: LazyBound(self.struct_0xcded42fe),
            0xc3838076: LazyBound(self.struct_0xc3838076),
            0x2331b22d: LazyBound(self.struct_0x2331b22d),
            0x22b56751: LazyBound(self.struct_0x22b56751),
            0xd07504a5: LazyBound(self.struct_0xd07504a5),
            0xfb197a65: LazyBound(self.struct_0xfb197a65),
            0x9288dd29: LazyBound(self.struct_0x9288dd29)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8dca6aa5, 'photos_photos')
    def struct_0x8dca6aa5(self):
        return (
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x15051f54, 'photos_photos_slice')
    def struct_0x15051f54(self):
        return (
            'count' / Int32ul,
            'photos' / self.vector(self.photo_structures('photos'), 'photos'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def photos_photos_structures(self, name):
        tag_map = {
            0x8dca6aa5: LazyBound(self.struct_0x8dca6aa5),
            0x15051f54: LazyBound(self.struct_0x15051f54)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xff16e2ca, 'poll_answer')
    def struct_0xff16e2ca(self):
        return (
            'text' / self.struct_0x751f3146(),
            'option' / TBytes)

    @constructor(0x6ca9c2e9, 'poll_answer_layer178')
    def struct_0x6ca9c2e9(self):
        return (
            'text' / TString,
            'option' / TBytes)

    @structures
    def poll_answer_structures(self, name):
        tag_map = {
            0xff16e2ca: LazyBound(self.struct_0xff16e2ca),
            0x6ca9c2e9: LazyBound(self.struct_0x6ca9c2e9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5755785a, 'poll_results_layer108')
    def struct_0x5755785a(self):
        return Struct(
            'sname' / Computed('poll_results_layer108'),
            'signature' / Hex(Const(0x5755785a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                has_results=2,
                                has_total_voters=4),
            'results' / If(this.flags.has_results, self.vector(self.struct_0x3b6ddad2(), 'results')),
            'total_voters' / If(this.flags.has_total_voters, Int32ul))

    @constructor(0xc87024a2, 'poll_results_layer111')
    def struct_0xc87024a2(self):
        return Struct(
            'sname' / Computed('poll_results_layer111'),
            'signature' / Hex(Const(0xc87024a2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                has_results=2,
                                has_total_voters=4,
                                has_recent_voters=8),
            'results' / If(this.flags.has_results, self.vector(self.struct_0x3b6ddad2(), 'results')),
            'total_voters' / If(this.flags.has_total_voters, Int32ul),
            'recent_voters' / If(this.flags.has_recent_voters, self.vector(Int32ul, 'recent_voters')))

    @constructor(0xbadcc1a3, 'poll_results_layer131')
    def struct_0xbadcc1a3(self):
        return Struct(
            'sname' / Computed('poll_results_layer131'),
            'signature' / Hex(Const(0xbadcc1a3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                has_results=2,
                                has_total_voters=4,
                                has_recent_voters=8,
                                has_solution=16),
            'results' / If(this.flags.has_results, self.vector(self.struct_0x3b6ddad2(), 'results')),
            'total_voters' / If(this.flags.has_total_voters, Int32ul),
            'recent_voters' / If(this.flags.has_recent_voters, self.vector(Int32ul, 'recent_voters')),
            'solution' / If(this.flags.has_solution, TString),
            'solution_entities' / If(this.flags.has_solution, self.vector(self.message_entity_structures('solution_entities'), 'solution_entities')))

    @constructor(0xdcb82ea3, 'poll_results_layer158')
    def struct_0xdcb82ea3(self):
        return Struct(
            'sname' / Computed('poll_results_layer158'),
            'signature' / Hex(Const(0xdcb82ea3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                has_results=2,
                                has_total_voters=4,
                                has_recent_voters=8,
                                has_solution=16),
            'results' / If(this.flags.has_results, self.vector(self.struct_0x3b6ddad2(), 'results')),
            'total_voters' / If(this.flags.has_total_voters, Int32ul),
            'recent_voters' / If(this.flags.has_recent_voters, self.vector(Int64ul, 'recent_voters')),
            'solution' / If(this.flags.has_solution, TString),
            'solution_entities' / If(this.flags.has_solution, self.vector(self.message_entity_structures('solution_entities'), 'solution_entities')))

    @constructor(0x7adf2420, 'poll_results')
    def struct_0x7adf2420(self):
        return Struct(
            'sname' / Computed('poll_results'),
            'signature' / Hex(Const(0x7adf2420, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_min=1,
                                has_results=2,
                                has_total_voters=4,
                                has_recent_voters=8,
                                has_solution=16),
            'results' / If(this.flags.has_results, self.vector(self.struct_0x3b6ddad2(), 'results')),
            'total_voters' / If(this.flags.has_total_voters, Int32ul),
            'recent_voters' / If(this.flags.has_recent_voters, self.vector(self.peer_structures('recent_voters'), 'recent_voters')),
            'solution' / If(this.flags.has_solution, TString),
            'solution_entities' / If(this.flags.has_solution, self.vector(self.message_entity_structures('solution_entities'), 'solution_entities')))

    @structures
    def poll_results_structures(self, name):
        tag_map = {
            0x5755785a: LazyBound(self.struct_0x5755785a),
            0xc87024a2: LazyBound(self.struct_0xc87024a2),
            0xbadcc1a3: LazyBound(self.struct_0xbadcc1a3),
            0xdcb82ea3: LazyBound(self.struct_0xdcb82ea3),
            0x7adf2420: LazyBound(self.struct_0x7adf2420)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x58747131, 'poll')
    def struct_0x58747131(self):
        return Struct(
            'sname' / Computed('poll'),
            'signature' / Hex(Const(0x58747131, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_closed=1,
                                is_public_voters=2,
                                is_multiple_choice=4,
                                is_quiz=8,
                                has_close_period=16,
                                has_close_date=32),
            'question' / self.struct_0x751f3146(),
            'answers' / self.vector(self.poll_answer_structures('answers'), 'answers'),
            'close_period' / If(this.flags.has_close_period, Int32ul),
            'close_date' / If(this.flags.has_close_date, TTimestamp))

    @constructor(0x86e18161, 'poll_layer178')
    def struct_0x86e18161(self):
        return Struct(
            'sname' / Computed('poll_layer178'),
            'signature' / Hex(Const(0x86e18161, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_closed=1,
                                is_public_voters=2,
                                is_multiple_choice=4,
                                is_quiz=8,
                                has_close_period=16,
                                has_close_date=32),
            'question_text' / TString,
            'answers' / self.vector(self.poll_answer_structures('answers'), 'answers'),
            'close_period' / If(this.flags.has_close_period, Int32ul),
            'close_date' / If(this.flags.has_close_date, TTimestamp))

    @constructor(0xaf746786, 'poll_to_delete')
    def struct_0xaf746786(self):
        return Struct(
            'sname' / Computed('poll_to_delete'),
            'signature' / Hex(Const(0xaf746786, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_closed=1,
                                is_public_voters=2,
                                is_multiple_choice=4,
                                is_quiz=8,
                                has_close_date=16),
            'question_text' / TString,
            'answers' / self.vector(self.poll_answer_structures('answers'), 'answers'),
            'close_date' / If(this.flags.has_close_date, TTimestamp))

    @constructor(0xd5529d06, 'poll_layer111')
    def struct_0xd5529d06(self):
        return Struct(
            'sname' / Computed('poll_layer111'),
            'signature' / Hex(Const(0xd5529d06, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_closed=1,
                                is_public_voters=2,
                                is_multiple_choice=4,
                                is_quiz=8),
            'question_text' / TString,
            'answers' / self.vector(self.poll_answer_structures('answers'), 'answers'))

    @structures
    def poll_structures(self, name):
        tag_map = {
            0x58747131: LazyBound(self.struct_0x58747131),
            0x86e18161: LazyBound(self.struct_0x86e18161),
            0xaf746786: LazyBound(self.struct_0xaf746786),
            0xd5529d06: LazyBound(self.struct_0xd5529d06)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5f2d1df2, 'premium_subscription_option')
    def struct_0x5f2d1df2(self):
        return Struct(
            'sname' / Computed('premium_subscription_option'),
            'signature' / Hex(Const(0x5f2d1df2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_current=2,
                                is_can_purchase_upgrade=4,
                                has_transaction=8,
                                has_store_product=1),
            'transaction' / If(this.flags.has_transaction, TString),
            'months' / Int32ul,
            'currency' / TString,
            'amount' / Int64ul,
            'bot_url' / TString,
            'store_product' / If(this.flags.has_store_product, TString))

    @constructor(0xb6f11ebe, 'premium_subscription_option_layer151')
    def struct_0xb6f11ebe(self):
        return Struct(
            'sname' / Computed('premium_subscription_option_layer151'),
            'signature' / Hex(Const(0xb6f11ebe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_store_product=1),
            'months' / Int32ul,
            'currency' / TString,
            'amount' / Int64ul,
            'bot_url' / TString,
            'store_product' / If(this.flags.has_store_product, TString))

    @structures
    def premium_subscription_option_structures(self, name):
        tag_map = {
            0x5f2d1df2: LazyBound(self.struct_0x5f2d1df2),
            0xb6f11ebe: LazyBound(self.struct_0xb6f11ebe)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbc2eab30, 'privacy_key_status_timestamp')
    def struct_0xbc2eab30(self):
        return []

    @constructor(0x39491cc8, 'privacy_key_phonep2p')
    def struct_0x39491cc8(self):
        return []

    @constructor(0x500e6dfa, 'privacy_key_chat_invite')
    def struct_0x500e6dfa(self):
        return []

    @constructor(0x42ffd42b, 'privacy_key_added_by_phone')
    def struct_0x42ffd42b(self):
        return []

    @constructor(0x0697f414, 'privacy_key_voice_messages')
    def struct_0x0697f414(self):
        return []

    @constructor(0xa486b761, 'privacy_key_about')
    def struct_0xa486b761(self):
        return []

    @constructor(0x3d662b7b, 'privacy_key_phone_call')
    def struct_0x3d662b7b(self):
        return []

    @constructor(0x69ec56a3, 'privacy_key_forwards')
    def struct_0x69ec56a3(self):
        return []

    @constructor(0xd19ae46d, 'privacy_key_phone_number')
    def struct_0xd19ae46d(self):
        return []

    @constructor(0x96151fed, 'privacy_key_profile_photo')
    def struct_0x96151fed(self):
        return []

    @constructor(0x2000a518, 'privacy_key_birthday')
    def struct_0x2000a518(self):
        return []

    @constructor(0x2ca4fdf8, 'privacy_key_star_gifts_auto_save')
    def struct_0x2ca4fdf8(self):
        return []

    @structures
    def privacy_key_structures(self, name):
        tag_map = {
            0xbc2eab30: LazyBound(self.struct_0xbc2eab30),
            0x39491cc8: LazyBound(self.struct_0x39491cc8),
            0x500e6dfa: LazyBound(self.struct_0x500e6dfa),
            0x42ffd42b: LazyBound(self.struct_0x42ffd42b),
            0x0697f414: LazyBound(self.struct_0x0697f414),
            0xa486b761: LazyBound(self.struct_0xa486b761),
            0x3d662b7b: LazyBound(self.struct_0x3d662b7b),
            0x69ec56a3: LazyBound(self.struct_0x69ec56a3),
            0xd19ae46d: LazyBound(self.struct_0xd19ae46d),
            0x96151fed: LazyBound(self.struct_0x96151fed),
            0x2000a518: LazyBound(self.struct_0x2000a518),
            0x2ca4fdf8: LazyBound(self.struct_0x2ca4fdf8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf888fa1a, 'privacy_value_disallow_contacts')
    def struct_0xf888fa1a(self):
        return []

    @constructor(0xe4621141, 'privacy_value_disallow_users')
    def struct_0xe4621141(self):
        return ['users' / self.vector(Int64ul, 'users')]

    @constructor(0x6b134e8e, 'privacy_value_allow_chat_participants')
    def struct_0x6b134e8e(self):
        return ['chats' / self.vector(Int64ul, 'chats')]

    @constructor(0x41c87565, 'privacy_value_disallow_chat_participants')
    def struct_0x41c87565(self):
        return ['chats' / self.vector(Int64ul, 'chats')]

    @constructor(0x65427b82, 'privacy_value_allow_all')
    def struct_0x65427b82(self):
        return []

    @constructor(0x8b73e763, 'privacy_value_disallow_all')
    def struct_0x8b73e763(self):
        return []

    @constructor(0xb8905fb2, 'privacy_value_allow_users')
    def struct_0xb8905fb2(self):
        return ['users' / self.vector(Int64ul, 'users')]

    @constructor(0xfffe1bac, 'privacy_value_allow_contacts')
    def struct_0xfffe1bac(self):
        return []

    @constructor(0xf7e8d89b, 'privacy_value_allow_close_friends')
    def struct_0xf7e8d89b(self):
        return []

    @constructor(0xece9814b, 'privacy_value_allow_premium')
    def struct_0xece9814b(self):
        return []

    @constructor(0x21461b5d, 'privacy_value_allow_bots')
    def struct_0x21461b5d(self):
        return []

    @constructor(0xf6a5f82f, 'privacy_value_disallow_bots')
    def struct_0xf6a5f82f(self):
        return []

    @structures
    def privacy_rule_structures(self, name):
        tag_map = {
            0xf888fa1a: LazyBound(self.struct_0xf888fa1a),
            0xe4621141: LazyBound(self.struct_0xe4621141),
            0x6b134e8e: LazyBound(self.struct_0x6b134e8e),
            0x41c87565: LazyBound(self.struct_0x41c87565),
            0x65427b82: LazyBound(self.struct_0x65427b82),
            0x8b73e763: LazyBound(self.struct_0x8b73e763),
            0xb8905fb2: LazyBound(self.struct_0xb8905fb2),
            0xfffe1bac: LazyBound(self.struct_0xfffe1bac),
            0xf7e8d89b: LazyBound(self.struct_0xf7e8d89b),
            0xece9814b: LazyBound(self.struct_0xece9814b),
            0x21461b5d: LazyBound(self.struct_0x21461b5d),
            0xf6a5f82f: LazyBound(self.struct_0xf6a5f82f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa3d1cb80, 'reaction_count')
    def struct_0xa3d1cb80(self):
        return Struct(
            'sname' / Computed('reaction_count'),
            'signature' / Hex(Const(0xa3d1cb80, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_chosen_order=1),
            'chosen_order' / If(this.flags.has_chosen_order, Int32ul),
            'reaction' / self.reaction_structures('reaction'),
            'count' / Int32ul)

    @constructor(0x6fb250d1, 'reaction_count_old')
    def struct_0x6fb250d1(self):
        return Struct(
            'sname' / Computed('reaction_count_old'),
            'signature' / Hex(Const(0x6fb250d1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_chosen=1),
            'reaction' / TString,
            'count' / Int32ul)

    @structures
    def reaction_count_structures(self, name):
        tag_map = {
            0xa3d1cb80: LazyBound(self.struct_0xa3d1cb80),
            0x6fb250d1: LazyBound(self.struct_0x6fb250d1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8935fc73, 'reaction_custom_emoji')
    def struct_0x8935fc73(self):
        return ['document_id' / Int64ul]

    @constructor(0x79f5d419, 'reaction_empty')
    def struct_0x79f5d419(self):
        return []

    @constructor(0x1b2286b8, 'reaction_emoji')
    def struct_0x1b2286b8(self):
        return ['emoticon' / TString]

    @constructor(0x523da4eb, 'reaction_paid')
    def struct_0x523da4eb(self):
        return []

    @structures
    def reaction_structures(self, name):
        tag_map = {
            0x8935fc73: LazyBound(self.struct_0x8935fc73),
            0x79f5d419: LazyBound(self.struct_0x79f5d419),
            0x1b2286b8: LazyBound(self.struct_0x1b2286b8),
            0x523da4eb: LazyBound(self.struct_0x523da4eb)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb2da71d2, 'recent_me_url_chat')
    def struct_0xb2da71d2(self):
        return (
            'url' / TString,
            'chat_id' / Int64ul)

    @constructor(0xbc0a57dc, 'recent_me_url_sticker_set')
    def struct_0xbc0a57dc(self):
        return (
            'url' / TString,
            'set' / self.sticker_set_covered_structures('set'))

    @constructor(0x46e1d13d, 'recent_me_url_unknown')
    def struct_0x46e1d13d(self):
        return ['url' / TString]

    @constructor(0xeb49081d, 'recent_me_url_chat_invite')
    def struct_0xeb49081d(self):
        return (
            'url' / TString,
            'chat_invite' / self.chat_invite_structures('chat_invite'))

    @constructor(0xb92c09e2, 'recent_me_url_user')
    def struct_0xb92c09e2(self):
        return (
            'url' / TString,
            'user_id' / Int64ul)

    @structures
    def recent_me_url_structures(self, name):
        tag_map = {
            0xb2da71d2: LazyBound(self.struct_0xb2da71d2),
            0xbc0a57dc: LazyBound(self.struct_0xbc0a57dc),
            0x46e1d13d: LazyBound(self.struct_0x46e1d13d),
            0xeb49081d: LazyBound(self.struct_0xeb49081d),
            0xb92c09e2: LazyBound(self.struct_0xb92c09e2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x85dd99d1, 'reply_keyboard_markup')
    def struct_0x85dd99d1(self):
        return Struct(
            'sname' / Computed('reply_keyboard_markup'),
            'signature' / Hex(Const(0x85dd99d1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_resize=1,
                                is_single_use=2,
                                is_selective=4,
                                is_persistent=16,
                                has_placeholder=8),
            'rows' / self.vector(self.struct_0x77608b83(), 'rows'),
            'placeholder' / If(this.flags.has_placeholder, TString))

    @constructor(0xa03e5b85, 'reply_keyboard_hide')
    def struct_0xa03e5b85(self):
        return Struct(
            'sname' / Computed('reply_keyboard_hide'),
            'signature' / Hex(Const(0xa03e5b85, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_selective=4))

    @constructor(0x86b40b08, 'reply_keyboard_force_reply')
    def struct_0x86b40b08(self):
        return Struct(
            'sname' / Computed('reply_keyboard_force_reply'),
            'signature' / Hex(Const(0x86b40b08, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_single_use=2,
                                is_selective=4,
                                has_placeholder=8),
            'placeholder' / If(this.flags.has_placeholder, TString))

    @constructor(0x3502758c, 'reply_keyboard_markup_layer129')
    def struct_0x3502758c(self):
        return Struct(
            'sname' / Computed('reply_keyboard_markup_layer129'),
            'signature' / Hex(Const(0x3502758c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_resize=1,
                                is_single_use=2,
                                is_selective=4),
            'rows' / self.vector(self.struct_0x77608b83(), 'rows'))

    @constructor(0xf4108aa0, 'reply_keyboard_force_reply_layer129')
    def struct_0xf4108aa0(self):
        return Struct(
            'sname' / Computed('reply_keyboard_force_reply_layer129'),
            'signature' / Hex(Const(0xf4108aa0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_single_use=2,
                                is_selective=4))

    @constructor(0x48a30254, 'reply_inline_markup')
    def struct_0x48a30254(self):
        return ['rows' / self.vector(self.struct_0x77608b83(), 'rows')]

    @structures
    def reply_markup_structures(self, name):
        tag_map = {
            0x85dd99d1: LazyBound(self.struct_0x85dd99d1),
            0xa03e5b85: LazyBound(self.struct_0xa03e5b85),
            0x86b40b08: LazyBound(self.struct_0x86b40b08),
            0x3502758c: LazyBound(self.struct_0x3502758c),
            0xf4108aa0: LazyBound(self.struct_0xf4108aa0),
            0x48a30254: LazyBound(self.struct_0x48a30254)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xdbd4feed, 'input_report_reason_geo_irrelevant')
    def struct_0xdbd4feed(self):
        return []

    @constructor(0xc1e4a2b1, 'input_report_reason_other')
    def struct_0xc1e4a2b1(self):
        return []

    @constructor(0xf5ddd6e7, 'input_report_reason_fake')
    def struct_0xf5ddd6e7(self):
        return []

    @constructor(0x9b89f93a, 'input_report_reason_copyright')
    def struct_0x9b89f93a(self):
        return []

    @constructor(0x58dbcab8, 'input_report_reason_spam')
    def struct_0x58dbcab8(self):
        return []

    @constructor(0x1e22c78d, 'input_report_reason_violence')
    def struct_0x1e22c78d(self):
        return []

    @constructor(0xadf44ee3, 'input_report_reason_child_abuse')
    def struct_0xadf44ee3(self):
        return []

    @constructor(0x2e59d922, 'input_report_reason_pornography')
    def struct_0x2e59d922(self):
        return []

    @structures
    def report_reason_structures(self, name):
        tag_map = {
            0xdbd4feed: LazyBound(self.struct_0xdbd4feed),
            0xc1e4a2b1: LazyBound(self.struct_0xc1e4a2b1),
            0xf5ddd6e7: LazyBound(self.struct_0xf5ddd6e7),
            0x9b89f93a: LazyBound(self.struct_0x9b89f93a),
            0x58dbcab8: LazyBound(self.struct_0x58dbcab8),
            0x1e22c78d: LazyBound(self.struct_0x1e22c78d),
            0xadf44ee3: LazyBound(self.struct_0xadf44ee3),
            0x2e59d922: LazyBound(self.struct_0x2e59d922)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf0e4e0b6, 'report_result_choose_option')
    def struct_0xf0e4e0b6(self):
        return (
            'title' / TString,
            'options' / self.vector(self.struct_0x7903e3d9(), 'options'))

    @constructor(0x6f09ac31, 'report_result_add_comment')
    def struct_0x6f09ac31(self):
        return Struct(
            'sname' / Computed('report_result_add_comment'),
            'signature' / Hex(Const(0x6f09ac31, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_optional=1),
            'option' / TBytes)

    @constructor(0x8db33c4b, 'report_result_reported')
    def struct_0x8db33c4b(self):
        return []

    @structures
    def report_result_structures(self, name):
        tag_map = {
            0xf0e4e0b6: LazyBound(self.struct_0xf0e4e0b6),
            0x6f09ac31: LazyBound(self.struct_0x6f09ac31),
            0x8db33c4b: LazyBound(self.struct_0x8db33c4b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x5f3b8a00, 'request_peer_type_user')
    def struct_0x5f3b8a00(self):
        return Struct(
            'sname' / Computed('request_peer_type_user'),
            'signature' / Hex(Const(0x5f3b8a00, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_bot=1,
                                is_premium=2),
            'bot' / If(this.flags.is_bot, TBool),
            'premium' / If(this.flags.is_premium, TBool))

    @constructor(0xc9f06e1b, 'request_peer_type_chat')
    def struct_0xc9f06e1b(self):
        return Struct(
            'sname' / Computed('request_peer_type_chat'),
            'signature' / Hex(Const(0xc9f06e1b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                has_user_admin_rights=2,
                                has_bot_admin_rights=4,
                                has_username=8,
                                is_forum=16,
                                is_bot_participant=32),
            'has_username' / If(this.flags.has_username, TBool),
            'forum' / If(this.flags.is_forum, TBool),
            'user_admin_rights' / If(this.flags.has_user_admin_rights, self.struct_0x5fb224d5()),
            'bot_admin_rights' / If(this.flags.has_bot_admin_rights, self.struct_0x5fb224d5()))

    @constructor(0x339bef6c, 'request_peer_type_broadcast')
    def struct_0x339bef6c(self):
        return Struct(
            'sname' / Computed('request_peer_type_broadcast'),
            'signature' / Hex(Const(0x339bef6c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                has_user_admin_rights=2,
                                has_bot_admin_rights=4,
                                has_username=8),
            'has_username' / If(this.flags.has_username, TBool),
            'user_admin_rights' / If(this.flags.has_user_admin_rights, self.struct_0x5fb224d5()),
            'bot_admin_rights' / If(this.flags.has_bot_admin_rights, self.struct_0x5fb224d5()))

    @structures
    def request_peer_type_structures(self, name):
        tag_map = {
            0x5f3b8a00: LazyBound(self.struct_0x5f3b8a00),
            0xc9f06e1b: LazyBound(self.struct_0xc9f06e1b),
            0x339bef6c: LazyBound(self.struct_0x339bef6c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd072acb4, 'restriction_reason')
    def struct_0xd072acb4(self):
        return (
            'platform' / TString,
            'reason' / TString,
            'text' / TString)

    @structures
    def restriction_reason_structures(self, name):
        tag_map = {
            0xd072acb4: LazyBound(self.struct_0xd072acb4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1ccb966a, 'text_phone')
    def struct_0x1ccb966a(self):
        return (
            'text' / self.rich_text_structures('text'),
            'phone' / TString)

    @constructor(0xc7fb5e01, 'text_superscript')
    def struct_0xc7fb5e01(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x081ccf4f, 'text_image')
    def struct_0x081ccf4f(self):
        return (
            'document_id' / Int64ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0xc12622c4, 'text_underline')
    def struct_0xc12622c4(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0xed6a8504, 'text_subscript')
    def struct_0xed6a8504(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x3c2884c1, 'text_url')
    def struct_0x3c2884c1(self):
        return (
            'text' / self.rich_text_structures('text'),
            'url' / TString,
            'webpage_id' / Int64ul)

    @constructor(0x35553762, 'text_anchor')
    def struct_0x35553762(self):
        return (
            'text' / self.rich_text_structures('text'),
            'name' / TString)

    @constructor(0xdc3d824f, 'text_empty')
    def struct_0xdc3d824f(self):
        return []

    @constructor(0xde5a0dd6, 'text_email')
    def struct_0xde5a0dd6(self):
        return (
            'text' / self.rich_text_structures('text'),
            'email' / TString)

    @constructor(0x744694e0, 'text_plain')
    def struct_0x744694e0(self):
        return ['text' / TString]

    @constructor(0x6724abc4, 'text_bold')
    def struct_0x6724abc4(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x9bf8bb95, 'text_strike')
    def struct_0x9bf8bb95(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x7e6260d7, 'text_concat')
    def struct_0x7e6260d7(self):
        return ['texts' / self.vector(self.rich_text_structures('texts'), 'texts')]

    @constructor(0xd912a59c, 'text_italic')
    def struct_0xd912a59c(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x034b8621, 'text_marked')
    def struct_0x034b8621(self):
        return ['text' / self.rich_text_structures('text')]

    @constructor(0x6c3f19b9, 'text_fixed')
    def struct_0x6c3f19b9(self):
        return ['text' / self.rich_text_structures('text')]

    @structures
    def rich_text_structures(self, name):
        tag_map = {
            0x1ccb966a: LazyBound(self.struct_0x1ccb966a),
            0xc7fb5e01: LazyBound(self.struct_0xc7fb5e01),
            0x081ccf4f: LazyBound(self.struct_0x081ccf4f),
            0xc12622c4: LazyBound(self.struct_0xc12622c4),
            0xed6a8504: LazyBound(self.struct_0xed6a8504),
            0x3c2884c1: LazyBound(self.struct_0x3c2884c1),
            0x35553762: LazyBound(self.struct_0x35553762),
            0xdc3d824f: LazyBound(self.struct_0xdc3d824f),
            0xde5a0dd6: LazyBound(self.struct_0xde5a0dd6),
            0x744694e0: LazyBound(self.struct_0x744694e0),
            0x6724abc4: LazyBound(self.struct_0x6724abc4),
            0x9bf8bb95: LazyBound(self.struct_0x9bf8bb95),
            0x7e6260d7: LazyBound(self.struct_0x7e6260d7),
            0xd912a59c: LazyBound(self.struct_0xd912a59c),
            0x034b8621: LazyBound(self.struct_0x034b8621),
            0x6c3f19b9: LazyBound(self.struct_0x6c3f19b9)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x64199744, 'secure_file_empty')
    def struct_0x64199744(self):
        return []

    @constructor(0x7d09c27e, 'secure_file')
    def struct_0x7d09c27e(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'size' / Int64ul,
            'dc_id' / Int32ul,
            'date' / TTimestamp,
            'file_hash' / TBytes,
            'secret' / TBytes)

    @structures
    def secure_file_structures(self, name):
        tag_map = {
            0x64199744: LazyBound(self.struct_0x64199744),
            0x7d09c27e: LazyBound(self.struct_0x7d09c27e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbbf2dda0, 'secure_password_kdf_algo_pbkdf2hmacsha512iter100000')
    def struct_0xbbf2dda0(self):
        return ['salt' / TBytes]

    @constructor(0x86471d92, 'secure_password_kdf_algo_sha512')
    def struct_0x86471d92(self):
        return ['salt' / TBytes]

    @constructor(0x004a8537, 'secure_password_kdf_algo_unknown')
    def struct_0x004a8537(self):
        return []

    @structures
    def secure_password_kdf_algo_structures(self, name):
        tag_map = {
            0xbbf2dda0: LazyBound(self.struct_0xbbf2dda0),
            0x86471d92: LazyBound(self.struct_0x86471d92),
            0x004a8537: LazyBound(self.struct_0x004a8537)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x21ec5a5f, 'secure_plain_email')
    def struct_0x21ec5a5f(self):
        return ['email' / TString]

    @constructor(0x7d6099dd, 'secure_plain_phone')
    def struct_0x7d6099dd(self):
        return ['phone' / TString]

    @structures
    def secure_plain_data_structures(self, name):
        tag_map = {
            0x21ec5a5f: LazyBound(self.struct_0x21ec5a5f),
            0x7d6099dd: LazyBound(self.struct_0x7d6099dd)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x829d99da, 'secure_required_type')
    def struct_0x829d99da(self):
        return Struct(
            'sname' / Computed('secure_required_type'),
            'signature' / Hex(Const(0x829d99da, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_native_names=1,
                                is_selfie_required=2,
                                is_translation_required=4),
            'type' / self.secure_value_type_structures('type'))

    @constructor(0x027477b4, 'secure_required_type_one_of')
    def struct_0x027477b4(self):
        return ['types' / self.vector(self.secure_required_type_structures('types'), 'types')]

    @structures
    def secure_required_type_structures(self, name):
        tag_map = {
            0x829d99da: LazyBound(self.struct_0x829d99da),
            0x027477b4: LazyBound(self.struct_0x027477b4)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x7a700873, 'secure_value_error_file')
    def struct_0x7a700873(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / TBytes,
            'text' / TString)

    @constructor(0x00be3dfa, 'secure_value_error_front_side')
    def struct_0x00be3dfa(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / TBytes,
            'text' / TString)

    @constructor(0x666220e9, 'secure_value_error_files')
    def struct_0x666220e9(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / self.vector(TBytes, 'file_hash'),
            'text' / TString)

    @constructor(0x868a2aa5, 'secure_value_error_reverse_side')
    def struct_0x868a2aa5(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / TBytes,
            'text' / TString)

    @constructor(0xa1144770, 'secure_value_error_translation_file')
    def struct_0xa1144770(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / TBytes,
            'text' / TString)

    @constructor(0x869d758f, 'secure_value_error')
    def struct_0x869d758f(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'hash' / TBytes,
            'text' / TString)

    @constructor(0xe8a40bd9, 'secure_value_error_data')
    def struct_0xe8a40bd9(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'data_hash' / TBytes,
            'field' / TString,
            'text' / TString)

    @constructor(0x34636dd8, 'secure_value_error_translation_files')
    def struct_0x34636dd8(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / self.vector(TBytes, 'file_hash'),
            'text' / TString)

    @constructor(0xe537ced6, 'secure_value_error_selfie')
    def struct_0xe537ced6(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'file_hash' / TBytes,
            'text' / TString)

    @structures
    def secure_value_error_structures(self, name):
        tag_map = {
            0x7a700873: LazyBound(self.struct_0x7a700873),
            0x00be3dfa: LazyBound(self.struct_0x00be3dfa),
            0x666220e9: LazyBound(self.struct_0x666220e9),
            0x868a2aa5: LazyBound(self.struct_0x868a2aa5),
            0xa1144770: LazyBound(self.struct_0xa1144770),
            0x869d758f: LazyBound(self.struct_0x869d758f),
            0xe8a40bd9: LazyBound(self.struct_0xe8a40bd9),
            0x34636dd8: LazyBound(self.struct_0x34636dd8),
            0xe537ced6: LazyBound(self.struct_0xe537ced6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xcbe31e26, 'secure_value_type_address')
    def struct_0xcbe31e26(self):
        return []

    @constructor(0x99e3806a, 'secure_value_type_passport_registration')
    def struct_0x99e3806a(self):
        return []

    @constructor(0xa0d0744b, 'secure_value_type_identity_card')
    def struct_0xa0d0744b(self):
        return []

    @constructor(0xfc36954e, 'secure_value_type_utility_bill')
    def struct_0xfc36954e(self):
        return []

    @constructor(0x89137c0d, 'secure_value_type_bank_statement')
    def struct_0x89137c0d(self):
        return []

    @constructor(0x8e3ca7ee, 'secure_value_type_email')
    def struct_0x8e3ca7ee(self):
        return []

    @constructor(0x9d2a81e3, 'secure_value_type_personal_details')
    def struct_0x9d2a81e3(self):
        return []

    @constructor(0xea02ec33, 'secure_value_type_temporary_registration')
    def struct_0xea02ec33(self):
        return []

    @constructor(0x3dac6a00, 'secure_value_type_passport')
    def struct_0x3dac6a00(self):
        return []

    @constructor(0x8b883488, 'secure_value_type_rental_agreement')
    def struct_0x8b883488(self):
        return []

    @constructor(0x06e425c4, 'secure_value_type_driver_license')
    def struct_0x06e425c4(self):
        return []

    @constructor(0xb320aadb, 'secure_value_type_phone')
    def struct_0xb320aadb(self):
        return []

    @constructor(0x99a48f23, 'secure_value_type_internal_passport')
    def struct_0x99a48f23(self):
        return []

    @structures
    def secure_value_type_structures(self, name):
        tag_map = {
            0xcbe31e26: LazyBound(self.struct_0xcbe31e26),
            0x99e3806a: LazyBound(self.struct_0x99e3806a),
            0xa0d0744b: LazyBound(self.struct_0xa0d0744b),
            0xfc36954e: LazyBound(self.struct_0xfc36954e),
            0x89137c0d: LazyBound(self.struct_0x89137c0d),
            0x8e3ca7ee: LazyBound(self.struct_0x8e3ca7ee),
            0x9d2a81e3: LazyBound(self.struct_0x9d2a81e3),
            0xea02ec33: LazyBound(self.struct_0xea02ec33),
            0x3dac6a00: LazyBound(self.struct_0x3dac6a00),
            0x8b883488: LazyBound(self.struct_0x8b883488),
            0x06e425c4: LazyBound(self.struct_0x06e425c4),
            0xb320aadb: LazyBound(self.struct_0xb320aadb),
            0x99a48f23: LazyBound(self.struct_0x99a48f23)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xdd6a8f48, 'send_message_game_play_action')
    def struct_0xdd6a8f48(self):
        return []

    @constructor(0xd52f73f7, 'send_message_record_audio_action')
    def struct_0xd52f73f7(self):
        return []

    @constructor(0x92042ff7, 'send_message_upload_video_action_old')
    def struct_0x92042ff7(self):
        return []

    @constructor(0xe6ac8a6f, 'send_message_upload_audio_action_old')
    def struct_0xe6ac8a6f(self):
        return []

    @constructor(0xf351d7ab, 'send_message_upload_audio_action')
    def struct_0xf351d7ab(self):
        return ['progress' / Int32ul]

    @constructor(0xd1d34a26, 'send_message_upload_photo_action')
    def struct_0xd1d34a26(self):
        return ['progress' / Int32ul]

    @constructor(0x8faee98e, 'send_message_upload_document_action_old')
    def struct_0x8faee98e(self):
        return []

    @constructor(0xe9763aec, 'send_message_upload_video_action')
    def struct_0xe9763aec(self):
        return ['progress' / Int32ul]

    @constructor(0xfd5ec8f5, 'send_message_cancel_action')
    def struct_0xfd5ec8f5(self):
        return []

    @constructor(0x176f8ba1, 'send_message_geo_location_action')
    def struct_0x176f8ba1(self):
        return []

    @constructor(0x628cbc6f, 'send_message_choose_contact_action')
    def struct_0x628cbc6f(self):
        return []

    @constructor(0xb05ac6b1, 'send_message_choose_sticker_action')
    def struct_0xb05ac6b1(self):
        return []

    @constructor(0x88f27fbc, 'send_message_record_round_action')
    def struct_0x88f27fbc(self):
        return []

    @constructor(0x243e1c66, 'send_message_upload_round_action')
    def struct_0x243e1c66(self):
        return ['progress' / Int32ul]

    @constructor(0x16bf744e, 'send_message_typing_action')
    def struct_0x16bf744e(self):
        return []

    @constructor(0xdbda9246, 'send_message_history_import_action')
    def struct_0xdbda9246(self):
        return ['progress' / Int32ul]

    @constructor(0x990a3c1a, 'send_message_upload_photo_action_old')
    def struct_0x990a3c1a(self):
        return []

    @constructor(0xaa0cd9e4, 'send_message_upload_document_action')
    def struct_0xaa0cd9e4(self):
        return ['progress' / Int32ul]

    @constructor(0xd92c2285, 'speaking_in_group_call_action')
    def struct_0xd92c2285(self):
        return []

    @constructor(0xa187d66f, 'send_message_record_video_action')
    def struct_0xa187d66f(self):
        return []

    @constructor(0x25972bcb, 'send_message_emoji_interaction')
    def struct_0x25972bcb(self):
        return (
            'emoticon' / TString,
            'msg_id' / Int32ul,
            'interaction' / self.struct_0x7d748d04())

    @constructor(0xb665902e, 'send_message_emoji_interaction_seen')
    def struct_0xb665902e(self):
        return ['emoticon' / TString]

    @structures
    def send_message_action_structures(self, name):
        tag_map = {
            0xdd6a8f48: LazyBound(self.struct_0xdd6a8f48),
            0xd52f73f7: LazyBound(self.struct_0xd52f73f7),
            0x92042ff7: LazyBound(self.struct_0x92042ff7),
            0xe6ac8a6f: LazyBound(self.struct_0xe6ac8a6f),
            0xf351d7ab: LazyBound(self.struct_0xf351d7ab),
            0xd1d34a26: LazyBound(self.struct_0xd1d34a26),
            0x8faee98e: LazyBound(self.struct_0x8faee98e),
            0xe9763aec: LazyBound(self.struct_0xe9763aec),
            0xfd5ec8f5: LazyBound(self.struct_0xfd5ec8f5),
            0x176f8ba1: LazyBound(self.struct_0x176f8ba1),
            0x628cbc6f: LazyBound(self.struct_0x628cbc6f),
            0xb05ac6b1: LazyBound(self.struct_0xb05ac6b1),
            0x88f27fbc: LazyBound(self.struct_0x88f27fbc),
            0x243e1c66: LazyBound(self.struct_0x243e1c66),
            0x16bf744e: LazyBound(self.struct_0x16bf744e),
            0xdbda9246: LazyBound(self.struct_0xdbda9246),
            0x990a3c1a: LazyBound(self.struct_0x990a3c1a),
            0xaa0cd9e4: LazyBound(self.struct_0xaa0cd9e4),
            0xd92c2285: LazyBound(self.struct_0xd92c2285),
            0xa187d66f: LazyBound(self.struct_0xa187d66f),
            0x25972bcb: LazyBound(self.struct_0x25972bcb),
            0xb665902e: LazyBound(self.struct_0xb665902e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x39d99013, 'star_gift_attribute_model')
    def struct_0x39d99013(self):
        return (
            'name' / TString,
            'document' / self.document_structures('document'),
            'rarity_permille' / Int32ul)

    @constructor(0x13acff19, 'star_gift_attribute_pattern')
    def struct_0x13acff19(self):
        return (
            'name' / TString,
            'document' / self.document_structures('document'),
            'rarity_permille' / Int32ul)

    @constructor(0x94271762, 'star_gift_attribute_backdrop')
    def struct_0x94271762(self):
        return (
            'name' / TString,
            'center_color' / Int32ul,
            'edge_color' / Int32ul,
            'pattern_color' / Int32ul,
            'text_color' / Int32ul,
            'rarity_permille' / Int32ul)

    @constructor(0xe0bff26c, 'star_gift_attribute_original_details')
    def struct_0xe0bff26c(self):
        return Struct(
            'sname' / Computed('star_gift_attribute_original_details'),
            'signature' / Hex(Const(0xe0bff26c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_sender_id=1,
                                has_message=2),
            'sender_id' / If(this.flags.has_sender_id, self.peer_structures('sender_id')),
            'recipient_id' / self.peer_structures('recipient_id'),
            'date' / TTimestamp,
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @constructor(0xc02c4f4b, 'star_gift_attribute_original_details_layer197')
    def struct_0xc02c4f4b(self):
        return Struct(
            'sname' / Computed('star_gift_attribute_original_details_layer197'),
            'signature' / Hex(Const(0xc02c4f4b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_sender_user_id=1,
                                has_message=2),
            'sender_user_id' / If(this.flags.has_sender_user_id, Int64ul),
            'recipient_user_id' / Int64ul,
            'date' / TTimestamp,
            'message' / If(this.flags.has_message, self.struct_0x751f3146()))

    @structures
    def star_gift_attribute_structures(self, name):
        tag_map = {
            0x39d99013: LazyBound(self.struct_0x39d99013),
            0x13acff19: LazyBound(self.struct_0x13acff19),
            0x94271762: LazyBound(self.struct_0x94271762),
            0xe0bff26c: LazyBound(self.struct_0xe0bff26c),
            0xc02c4f4b: LazyBound(self.struct_0xc02c4f4b)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x02cc73c8, 'star_gift')
    def struct_0x02cc73c8(self):
        return Struct(
            'sname' / Computed('star_gift'),
            'signature' / Hex(Const(0x02cc73c8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_limited=1,
                                is_sold_out=2,
                                is_birthday=4,
                                is_can_upgrade=8),
            'id' / Int64ul,
            'sticker' / self.document_structures('sticker'),
            'stars' / Int64ul,
            'availability_remains' / If(this.flags.is_limited, Int32ul),
            'availability_total' / If(this.flags.is_limited, Int32ul),
            'convert_stars' / Int64ul,
            'first_sale_date' / If(this.flags.is_sold_out, TTimestamp),
            'last_sale_date' / If(this.flags.is_sold_out, TTimestamp),
            'upgrade_stars' / If(this.flags.is_can_upgrade, Int64ul))

    @constructor(0xf2fe7e4a, 'star_gift_unique')
    def struct_0xf2fe7e4a(self):
        return Struct(
            'sname' / Computed('star_gift_unique'),
            'signature' / Hex(Const(0xf2fe7e4a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_owner_id=1,
                                has_owner_name=2,
                                has_owner_address=4),
            'id' / Int64ul,
            'title' / TString,
            'slug' / TString,
            'num' / Int32ul,
            'owner_id' / If(this.flags.has_owner_id, self.peer_structures('owner_id')),
            'owner_name' / If(this.flags.has_owner_name, TString),
            'owner_address' / If(this.flags.has_owner_address, TString),
            'attributes' / self.vector(self.star_gift_attribute_structures('attributes'), 'attributes'),
            'availability_issued' / Int32ul,
            'availability_total' / Int32ul)

    @constructor(0x3482f322, 'star_gift_unique_layer197')
    def struct_0x3482f322(self):
        return Struct(
            'sname' / Computed('star_gift_unique_layer197'),
            'signature' / Hex(Const(0x3482f322, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_owner_user_id=1,
                                has_owner_name=2),
            'id' / Int64ul,
            'title' / TString,
            'slug' / TString,
            'num' / Int32ul,
            'owner_user_id' / If(this.flags.has_owner_user_id, Int64ul),
            'owner_name' / If(this.flags.has_owner_name, TString),
            'attributes' / self.vector(self.star_gift_attribute_structures('attributes'), 'attributes'),
            'availability_issued' / Int32ul,
            'availability_total' / Int32ul)

    @constructor(0x6a1407cd, 'star_gift_unique_layer196')
    def struct_0x6a1407cd(self):
        return (
            'id' / Int64ul,
            'title' / TString,
            'num' / Int32ul,
            'owner_user_id' / Int64ul,
            'attributes' / self.vector(self.star_gift_attribute_structures('attributes'), 'attributes'),
            'availability_issued' / Int32ul,
            'availability_total' / Int32ul)

    @constructor(0xaea174ee, 'star_gift_layer190')
    def struct_0xaea174ee(self):
        return Struct(
            'sname' / Computed('star_gift_layer190'),
            'signature' / Hex(Const(0xaea174ee, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_limited=1),
            'id' / Int64ul,
            'sticker' / self.document_structures('sticker'),
            'stars' / Int64ul,
            'availability_remains' / If(this.flags.is_limited, Int32ul),
            'availability_total' / If(this.flags.is_limited, Int32ul),
            'convert_stars' / Int64ul)

    @constructor(0x49c577cd, 'star_gift_layer195')
    def struct_0x49c577cd(self):
        return Struct(
            'sname' / Computed('star_gift_layer195'),
            'signature' / Hex(Const(0x49c577cd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_limited=1,
                                is_sold_out=2,
                                is_birthday=4),
            'id' / Int64ul,
            'sticker' / self.document_structures('sticker'),
            'stars' / Int64ul,
            'availability_remains' / If(this.flags.is_limited, Int32ul),
            'availability_total' / If(this.flags.is_limited, Int32ul),
            'convert_stars' / Int64ul,
            'first_sale_date' / If(this.flags.is_sold_out, TTimestamp),
            'last_sale_date' / If(this.flags.is_sold_out, TTimestamp))

    @structures
    def star_gift_structures(self, name):
        tag_map = {
            0x02cc73c8: LazyBound(self.struct_0x02cc73c8),
            0xf2fe7e4a: LazyBound(self.struct_0xf2fe7e4a),
            0x3482f322: LazyBound(self.struct_0x3482f322),
            0x6a1407cd: LazyBound(self.struct_0x6a1407cd),
            0xaea174ee: LazyBound(self.struct_0xaea174ee),
            0x49c577cd: LazyBound(self.struct_0x49c577cd)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x901689ea, 'star_gifts')
    def struct_0x901689ea(self):
        return (
            'hash' / Int32ul,
            'gifts' / self.vector(self.star_gift_structures('gifts'), 'gifts'))

    @constructor(0xa388a368, 'star_gifts_not_modified')
    def struct_0xa388a368(self):
        return []

    @structures
    def star_gifts_structures(self, name):
        tag_map = {
            0x901689ea: LazyBound(self.struct_0x901689ea),
            0xa388a368: LazyBound(self.struct_0xa388a368)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x69279795, 'stars_input_saved_star_gift_user')
    def struct_0x69279795(self):
        return ['msg_id' / Int32ul]

    @constructor(0xf101aa7f, 'stars_input_saved_star_gift_chat')
    def struct_0xf101aa7f(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'saved_id' / Int64ul)

    @structures
    def stars_input_saved_star_gift_structures(self, name):
        tag_map = {
            0x69279795: LazyBound(self.struct_0x69279795),
            0xf101aa7f: LazyBound(self.struct_0xf101aa7f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xbbfa316c, 'stars_payments_stars_status_layer194')
    def struct_0xbbfa316c(self):
        return Struct(
            'sname' / Computed('stars_payments_stars_status_layer194'),
            'signature' / Hex(Const(0xbbfa316c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_subscriptions=2,
                                has_subscriptions_next_offset=4,
                                has_subscriptions_missing_balance=16,
                                has_history=8,
                                has_next_offset=1),
            'balance_amount' / Int64ul,
            'subscriptions' / If(this.flags.has_subscriptions, self.vector(self.stars_subscription_structures('subscriptions'), 'subscriptions')),
            'subscriptions_next_offset' / If(this.flags.has_subscriptions_next_offset, TString),
            'subscriptions_missing_balance' / If(this.flags.has_subscriptions_missing_balance, Int64ul),
            'history' / If(this.flags.has_history, self.vector(self.stars_transaction_structures('history'), 'history')),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x6c9ce8ed, 'stars_payments_stars_status')
    def struct_0x6c9ce8ed(self):
        return Struct(
            'sname' / Computed('stars_payments_stars_status'),
            'signature' / Hex(Const(0x6c9ce8ed, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_subscriptions=2,
                                has_subscriptions_next_offset=4,
                                has_subscriptions_missing_balance=16,
                                has_history=8,
                                has_next_offset=1),
            'balance' / self.struct_0xbbb6b4a3(),
            'subscriptions' / If(this.flags.has_subscriptions, self.vector(self.stars_subscription_structures('subscriptions'), 'subscriptions')),
            'subscriptions_next_offset' / If(this.flags.has_subscriptions_next_offset, TString),
            'subscriptions_missing_balance' / If(this.flags.has_subscriptions_missing_balance, Int64ul),
            'history' / If(this.flags.has_history, self.vector(self.stars_transaction_structures('history'), 'history')),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def stars_status_structures(self, name):
        tag_map = {
            0xbbfa316c: LazyBound(self.struct_0xbbfa316c),
            0x6c9ce8ed: LazyBound(self.struct_0x6c9ce8ed)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x2e6eab1a, 'stars_subscription')
    def struct_0x2e6eab1a(self):
        return Struct(
            'sname' / Computed('stars_subscription'),
            'signature' / Hex(Const(0x2e6eab1a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_canceled=1,
                                is_can_refulfill=2,
                                is_missing_balance=4,
                                is_bot_canceled=128,
                                has_chat_invite_hash=8,
                                has_title=16,
                                has_photo=32,
                                has_invoice_slug=64),
            'id' / TString,
            'peer' / self.peer_structures('peer'),
            'until_date' / TTimestamp,
            'pricing' / self.struct_0x05416d58(),
            'chat_invite_hash' / If(this.flags.has_chat_invite_hash, TString),
            'title' / If(this.flags.has_title, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'invoice_slug' / If(this.flags.has_invoice_slug, TString))

    @constructor(0x538ecf18, 'stars_subscription_layer193')
    def struct_0x538ecf18(self):
        return Struct(
            'sname' / Computed('stars_subscription_layer193'),
            'signature' / Hex(Const(0x538ecf18, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_canceled=1,
                                is_can_refulfill=2,
                                is_missing_balance=4,
                                has_chat_invite_hash=8),
            'id' / TString,
            'peer' / self.peer_structures('peer'),
            'until_date' / TTimestamp,
            'pricing' / self.struct_0x05416d58(),
            'chat_invite_hash' / If(this.flags.has_chat_invite_hash, TString))

    @constructor(0xd073f1e6, 'stars_subscription_old')
    def struct_0xd073f1e6(self):
        return Struct(
            'sname' / Computed('stars_subscription_old'),
            'signature' / Hex(Const(0xd073f1e6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_canceled=1,
                                is_can_refulfill=2,
                                is_missing_balance=4),
            'id' / TString,
            'peer' / self.peer_structures('peer'),
            'until_date' / TTimestamp,
            'pricing' / self.struct_0x05416d58())

    @structures
    def stars_subscription_structures(self, name):
        tag_map = {
            0x2e6eab1a: LazyBound(self.struct_0x2e6eab1a),
            0x538ecf18: LazyBound(self.struct_0x538ecf18),
            0xd073f1e6: LazyBound(self.struct_0xd073f1e6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd80da15d, 'stars_transaction_peer')
    def struct_0xd80da15d(self):
        return ['peer' / self.peer_structures('peer')]

    @constructor(0xb457b375, 'stars_transaction_peer_app_store')
    def struct_0xb457b375(self):
        return []

    @constructor(0x7b560a0b, 'stars_transaction_peer_play_market')
    def struct_0x7b560a0b(self):
        return []

    @constructor(0xe92fd902, 'stars_transaction_peer_fragment')
    def struct_0xe92fd902(self):
        return []

    @constructor(0x250dbaf8, 'stars_transaction_peer_premium_bot')
    def struct_0x250dbaf8(self):
        return []

    @constructor(0x95f2bfe4, 'stars_transaction_peer_unsupported')
    def struct_0x95f2bfe4(self):
        return []

    @constructor(0x60682812, 'stars_transaction_peer_ads')
    def struct_0x60682812(self):
        return []

    @constructor(0xf9677aad, 'stars_transaction_peer_api')
    def struct_0xf9677aad(self):
        return []

    @structures
    def stars_transaction_peer_structures(self, name):
        tag_map = {
            0xd80da15d: LazyBound(self.struct_0xd80da15d),
            0xb457b375: LazyBound(self.struct_0xb457b375),
            0x7b560a0b: LazyBound(self.struct_0x7b560a0b),
            0xe92fd902: LazyBound(self.struct_0xe92fd902),
            0x250dbaf8: LazyBound(self.struct_0x250dbaf8),
            0x95f2bfe4: LazyBound(self.struct_0x95f2bfe4),
            0x60682812: LazyBound(self.struct_0x60682812),
            0xf9677aad: LazyBound(self.struct_0xf9677aad)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xcc7079b2, 'stars_transaction_layer181')
    def struct_0xcc7079b2(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer181'),
            'signature' / Hex(Const(0xcc7079b2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                has_title=1,
                                has_description=2,
                                has_photo=4),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')))

    @constructor(0xaa00c898, 'stars_transaction_layer182')
    def struct_0xaa00c898(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer182'),
            'signature' / Hex(Const(0xaa00c898, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString))

    @constructor(0x2db5418f, 'stars_transaction_layer185')
    def struct_0x2db5418f(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer185'),
            'signature' / Hex(Const(0x2db5418f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')))

    @constructor(0x433aeb2b, 'stars_transaction_layer186')
    def struct_0x433aeb2b(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer186'),
            'signature' / Hex(Const(0x433aeb2b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                is_reaction=2048,
                                is_subscription=4096,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')),
            'subscription_period' / If(this.flags.is_subscription, Int32ul))

    @constructor(0xee7522d5, 'stars_transaction_layer188')
    def struct_0xee7522d5(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer188'),
            'signature' / Hex(Const(0xee7522d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                is_reaction=2048,
                                is_subscription=4096,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512,
                                has_giveaway_post_id=8192),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')),
            'subscription_period' / If(this.flags.is_subscription, Int32ul),
            'giveaway_post_id' / If(this.flags.has_giveaway_post_id, Int32ul))

    @constructor(0x0a9ee4c2, 'stars_transaction_layer191')
    def struct_0x0a9ee4c2(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer191'),
            'signature' / Hex(Const(0x0a9ee4c2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                is_reaction=2048,
                                is_subscription=4096,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512,
                                has_giveaway_post_id=8192,
                                has_stargift=16384),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')),
            'subscription_period' / If(this.flags.is_subscription, Int32ul),
            'giveaway_post_id' / If(this.flags.has_giveaway_post_id, Int32ul),
            'stargift' / If(this.flags.has_stargift, self.star_gift_structures('stargift')))

    @constructor(0x35d4f276, 'stars_transaction_layer194')
    def struct_0x35d4f276(self):
        return Struct(
            'sname' / Computed('stars_transaction_layer194'),
            'signature' / Hex(Const(0x35d4f276, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                is_reaction=2048,
                                is_subscription=4096,
                                is_floodskip=32768,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512,
                                has_giveaway_post_id=8192,
                                has_stargift=16384),
            'stars_amount' / Int64ul,
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')),
            'subscription_period' / If(this.flags.is_subscription, Int32ul),
            'giveaway_post_id' / If(this.flags.has_giveaway_post_id, Int32ul),
            'stargift' / If(this.flags.has_stargift, self.star_gift_structures('stargift')),
            'floodskip_number' / If(this.flags.is_floodskip, Int32ul))

    @constructor(0x64dfc926, 'stars_transaction')
    def struct_0x64dfc926(self):
        return Struct(
            'sname' / Computed('stars_transaction'),
            'signature' / Hex(Const(0x64dfc926, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_refund=8,
                                is_pending=16,
                                is_failed=64,
                                is_gift=1024,
                                is_reaction=2048,
                                is_subscription=4096,
                                is_floodskip=32768,
                                is_stargift_upgrade=262144,
                                has_title=1,
                                has_description=2,
                                has_photo=4,
                                has_transaction_date=32,
                                has_bot_payload=128,
                                has_msg_id=256,
                                has_extended_media=512,
                                has_giveaway_post_id=8192,
                                has_stargift=16384,
                                has_starref_commission_permille=65536,
                                has_starref_peer=131072),
            'stars' / self.struct_0xbbb6b4a3(),
            'date' / TTimestamp,
            'peer' / self.stars_transaction_peer_structures('peer'),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.web_document_structures('photo')),
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString),
            'bot_payload' / If(this.flags.has_bot_payload, TBytes),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'extended_media' / If(this.flags.has_extended_media, self.vector(self.message_media_structures('extended_media'), 'extended_media')),
            'subscription_period' / If(this.flags.is_subscription, Int32ul),
            'giveaway_post_id' / If(this.flags.has_giveaway_post_id, Int32ul),
            'stargift' / If(this.flags.has_stargift, self.star_gift_structures('stargift')),
            'floodskip_number' / If(this.flags.is_floodskip, Int32ul),
            'starref_commission_permille' / If(this.flags.has_starref_commission_permille, Int32ul),
            'starref_peer' / If(this.flags.has_starref_peer, self.peer_structures('starref_peer')),
            'starref_amount' / If(this.flags.has_starref_peer, self.struct_0xbbb6b4a3()))

    @structures
    def stars_transaction_structures(self, name):
        tag_map = {
            0xcc7079b2: LazyBound(self.struct_0xcc7079b2),
            0xaa00c898: LazyBound(self.struct_0xaa00c898),
            0x2db5418f: LazyBound(self.struct_0x2db5418f),
            0x433aeb2b: LazyBound(self.struct_0x433aeb2b),
            0xee7522d5: LazyBound(self.struct_0xee7522d5),
            0x0a9ee4c2: LazyBound(self.struct_0x0a9ee4c2),
            0x35d4f276: LazyBound(self.struct_0x35d4f276),
            0x64dfc926: LazyBound(self.struct_0x64dfc926)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x557e2cc4, 'stats_broadcast_revenue_transaction_proceeds')
    def struct_0x557e2cc4(self):
        return (
            'amount' / Int64ul,
            'from_date' / TTimestamp,
            'to_date' / TTimestamp)

    @constructor(0x5a590978, 'stats_broadcast_revenue_transaction_withdrawal')
    def struct_0x5a590978(self):
        return Struct(
            'sname' / Computed('stats_broadcast_revenue_transaction_withdrawal'),
            'signature' / Hex(Const(0x5a590978, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pending=1,
                                is_failed=4,
                                has_transaction_date=2),
            'amount' / Int64ul,
            'date' / TTimestamp,
            'provider' / TString,
            'transaction_date' / If(this.flags.has_transaction_date, TTimestamp),
            'transaction_url' / If(this.flags.has_transaction_date, TString))

    @constructor(0x42d30d2e, 'stats_broadcast_revenue_transaction_refund')
    def struct_0x42d30d2e(self):
        return (
            'amount' / Int64ul,
            'from_date' / TTimestamp,
            'provider' / TString)

    @structures
    def stats_broadcast_revenue_transaction_structures(self, name):
        tag_map = {
            0x557e2cc4: LazyBound(self.struct_0x557e2cc4),
            0x5a590978: LazyBound(self.struct_0x5a590978),
            0x42d30d2e: LazyBound(self.struct_0x42d30d2e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8ea464b6, 'stats_graph')
    def struct_0x8ea464b6(self):
        return Struct(
            'sname' / Computed('stats_graph'),
            'signature' / Hex(Const(0x8ea464b6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_zoom_token=1),
            'json' / self.struct_0x7d748d04(),
            'zoom_token' / If(this.flags.has_zoom_token, TString))

    @constructor(0x4a27eb2d, 'stats_graph_async')
    def struct_0x4a27eb2d(self):
        return ['token' / TString]

    @constructor(0xbedc9822, 'stats_graph_error')
    def struct_0xbedc9822(self):
        return ['error' / TString]

    @structures
    def stats_graph_structures(self, name):
        tag_map = {
            0x8ea464b6: LazyBound(self.struct_0x8ea464b6),
            0x4a27eb2d: LazyBound(self.struct_0x4a27eb2d),
            0xbedc9822: LazyBound(self.struct_0xbedc9822)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x8a480e27, 'stats_post_interaction_counters_story')
    def struct_0x8a480e27(self):
        return (
            'story_id' / Int32ul,
            'views' / Int32ul,
            'forwards' / Int32ul,
            'reactions' / Int32ul)

    @constructor(0xe7058e7f, 'stats_post_interaction_counters_message')
    def struct_0xe7058e7f(self):
        return (
            'msg_id' / Int32ul,
            'views' / Int32ul,
            'forwards' / Int32ul,
            'reactions' / Int32ul)

    @structures
    def stats_post_interaction_counters_structures(self, name):
        tag_map = {
            0x8a480e27: LazyBound(self.struct_0x8a480e27),
            0xe7058e7f: LazyBound(self.struct_0xe7058e7f)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x01f2bf4a, 'stats_public_forward_message')
    def struct_0x01f2bf4a(self):
        return ['message' / self.message_structures('message')]

    @constructor(0xedf3add0, 'stories_public_forward_story')
    def struct_0xedf3add0(self):
        return (
            'peer' / self.peer_structures('peer'),
            'story' / self.story_item_structures('story'))

    @structures
    def stats_public_forward_structures(self, name):
        tag_map = {
            0x01f2bf4a: LazyBound(self.struct_0x01f2bf4a),
            0xedf3add0: LazyBound(self.struct_0xedf3add0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3407e51b, 'sticker_set_multi_covered')
    def struct_0x3407e51b(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'covers' / self.vector(self.document_structures('covers'), 'covers'))

    @constructor(0x1aed5ee5, 'sticker_set_full_covered_layer146')
    def struct_0x1aed5ee5(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0x40d13c0e, 'sticker_set_full_covered')
    def struct_0x40d13c0e(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'packs' / self.vector(self.struct_0x12b299d4(), 'packs'),
            'keywords' / self.vector(self.struct_0xfcfeb29c(), 'keywords'),
            'documents' / self.vector(self.document_structures('documents'), 'documents'))

    @constructor(0x77b15d1c, 'sticker_set_no_covered')
    def struct_0x77b15d1c(self):
        return ['set' / self.sticker_set_structures('set')]

    @constructor(0x6410a5d2, 'sticker_set_covered')
    def struct_0x6410a5d2(self):
        return (
            'set' / self.sticker_set_structures('set'),
            'cover' / self.document_structures('cover'))

    @structures
    def sticker_set_covered_structures(self, name):
        tag_map = {
            0x3407e51b: LazyBound(self.struct_0x3407e51b),
            0x1aed5ee5: LazyBound(self.struct_0x1aed5ee5),
            0x40d13c0e: LazyBound(self.struct_0x40d13c0e),
            0x77b15d1c: LazyBound(self.struct_0x77b15d1c),
            0x6410a5d2: LazyBound(self.struct_0x6410a5d2)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa7a43b17, 'sticker_set_old')
    def struct_0xa7a43b17(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString)

    @constructor(0x5585a139, 'sticker_set_layer96')
    def struct_0x5585a139(self):
        return Struct(
            'sname' / Computed('sticker_set_layer96'),
            'signature' / Hex(Const(0x5585a139, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                has_installed_date=1),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0x6a90bcb7, 'sticker_set_layer97')
    def struct_0x6a90bcb7(self):
        return Struct(
            'sname' / Computed('sticker_set_layer97'),
            'signature' / Hex(Const(0x6a90bcb7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                has_installed_date=1,
                                has_thumb=16),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'thumb' / If(this.flags.has_thumb, self.photo_size_structures('thumb')),
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0xeeb46f27, 'sticker_set_layer121')
    def struct_0xeeb46f27(self):
        return Struct(
            'sname' / Computed('sticker_set_layer121'),
            'signature' / Hex(Const(0xeeb46f27, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                has_installed_date=1,
                                has_thumb=16),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'thumb' / If(this.flags.has_thumb, self.photo_size_structures('thumb')),
            'thumb_dc_id' / If(this.flags.has_thumb, Int32ul),
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0x40e237a8, 'sticker_set_layer126')
    def struct_0x40e237a8(self):
        return Struct(
            'sname' / Computed('sticker_set_layer126'),
            'signature' / Hex(Const(0x40e237a8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                has_installed_date=1,
                                has_thumbs=16),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'thumb_dc_id' / If(this.flags.has_thumbs, Int32ul),
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0xcd303b41, 'sticker_set_layer75')
    def struct_0xcd303b41(self):
        return Struct(
            'sname' / Computed('sticker_set_layer75'),
            'signature' / Hex(Const(0xcd303b41, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_installed=1,
                                is_archived=2,
                                is_official=4,
                                is_masks=8),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0xd7df217a, 'sticker_set_layer143')
    def struct_0xd7df217a(self):
        return Struct(
            'sname' / Computed('sticker_set_layer143'),
            'signature' / Hex(Const(0xd7df217a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                is_emojis=128,
                                has_installed_date=1,
                                has_thumbs=16,
                                has_thumb_document_id=256),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'thumb_dc_id' / If(this.flags.has_thumbs, Int32ul),
            'thumb_version' / If(this.flags.has_thumbs, Int32ul),
            'thumb_document_id' / If(this.flags.has_thumb_document_id, Int64ul),
            'count' / Int32ul,
            'hash' / Int32ul)

    @constructor(0x2dd14edc, 'sticker_set')
    def struct_0x2dd14edc(self):
        return Struct(
            'sname' / Computed('sticker_set'),
            'signature' / Hex(Const(0x2dd14edc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archived=2,
                                is_official=4,
                                is_masks=8,
                                is_emojis=128,
                                is_text_color=512,
                                is_channel_emoji_status=1024,
                                is_creator=2048,
                                has_installed_date=1,
                                has_thumbs=16,
                                has_thumb_document_id=256),
            'installed_date' / If(this.flags.has_installed_date, TTimestamp),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'title' / TString,
            'short_name' / TString,
            'thumbs' / If(this.flags.has_thumbs, self.vector(self.photo_size_structures('thumbs'), 'thumbs')),
            'thumb_dc_id' / If(this.flags.has_thumbs, Int32ul),
            'thumb_version' / If(this.flags.has_thumbs, Int32ul),
            'thumb_document_id' / If(this.flags.has_thumb_document_id, Int64ul),
            'count' / Int32ul,
            'hash' / Int32ul)

    @structures
    def sticker_set_structures(self, name):
        tag_map = {
            0xa7a43b17: LazyBound(self.struct_0xa7a43b17),
            0x5585a139: LazyBound(self.struct_0x5585a139),
            0x6a90bcb7: LazyBound(self.struct_0x6a90bcb7),
            0xeeb46f27: LazyBound(self.struct_0xeeb46f27),
            0x40e237a8: LazyBound(self.struct_0x40e237a8),
            0xcd303b41: LazyBound(self.struct_0xcd303b41),
            0xd7df217a: LazyBound(self.struct_0xd7df217a),
            0x2dd14edc: LazyBound(self.struct_0x2dd14edc)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xaa963b05, 'storage_file_unknown')
    def struct_0xaa963b05(self):
        return []

    @constructor(0xb3cea0e4, 'storage_file_mp4')
    def struct_0xb3cea0e4(self):
        return []

    @constructor(0x1081464c, 'storage_file_webp')
    def struct_0x1081464c(self):
        return []

    @constructor(0x0a4f63c0, 'storage_file_png')
    def struct_0x0a4f63c0(self):
        return []

    @constructor(0xcae1aadf, 'storage_file_gif')
    def struct_0xcae1aadf(self):
        return []

    @constructor(0xae1e508d, 'storage_file_pdf')
    def struct_0xae1e508d(self):
        return []

    @constructor(0x528a0677, 'storage_file_mp3')
    def struct_0x528a0677(self):
        return []

    @constructor(0x007efe0e, 'storage_file_jpeg')
    def struct_0x007efe0e(self):
        return []

    @constructor(0x4b09ebbc, 'storage_file_mov')
    def struct_0x4b09ebbc(self):
        return []

    @constructor(0x40bc6f52, 'storage_file_partial')
    def struct_0x40bc6f52(self):
        return []

    @structures
    def storage_file_type_structures(self, name):
        tag_map = {
            0xaa963b05: LazyBound(self.struct_0xaa963b05),
            0xb3cea0e4: LazyBound(self.struct_0xb3cea0e4),
            0x1081464c: LazyBound(self.struct_0x1081464c),
            0x0a4f63c0: LazyBound(self.struct_0x0a4f63c0),
            0xcae1aadf: LazyBound(self.struct_0xcae1aadf),
            0xae1e508d: LazyBound(self.struct_0xae1e508d),
            0x528a0677: LazyBound(self.struct_0x528a0677),
            0x007efe0e: LazyBound(self.struct_0x007efe0e),
            0x4b09ebbc: LazyBound(self.struct_0x4b09ebbc),
            0x40bc6f52: LazyBound(self.struct_0x40bc6f52)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x1158fe3e, 'stories_all_stories_not_modified')
    def struct_0x1158fe3e(self):
        return (
            'flags' / Int32ul,
            'state' / TString,
            'stealth_mode' / self.struct_0x712e27fd())

    @constructor(0x6efc5e81, 'stories_all_stories')
    def struct_0x6efc5e81(self):
        return Struct(
            'sname' / Computed('stories_all_stories'),
            'signature' / Hex(Const(0x6efc5e81, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_more=1),
            'count' / Int32ul,
            'state' / TString,
            'peer_stories' / self.vector(self.stories_peer_stories_structures('peer_stories'), 'peer_stories'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'stealth_mode' / self.struct_0x712e27fd())

    @structures
    def stories_all_stories_structures(self, name):
        tag_map = {
            0x1158fe3e: LazyBound(self.struct_0x1158fe3e),
            0x6efc5e81: LazyBound(self.struct_0x6efc5e81)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4b3e14d6, 'stories_boost')
    def struct_0x4b3e14d6(self):
        return Struct(
            'sname' / Computed('stories_boost'),
            'signature' / Hex(Const(0x4b3e14d6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gift=2,
                                is_giveaway=4,
                                is_unclaimed=8,
                                has_user_id=1,
                                has_used_gift_slug=16,
                                has_multiplier=32,
                                has_stars=64),
            'id' / TString,
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'giveaway_msg_id' / If(this.flags.is_giveaway, Int32ul),
            'date' / TTimestamp,
            'expires' / Int32ul,
            'used_gift_slug' / If(this.flags.has_used_gift_slug, TString),
            'multiplier' / If(this.flags.has_multiplier, Int32ul),
            'stars' / If(this.flags.has_stars, Int64ul))

    @constructor(0x2a1c8c71, 'stories_boost_layer186')
    def struct_0x2a1c8c71(self):
        return Struct(
            'sname' / Computed('stories_boost_layer186'),
            'signature' / Hex(Const(0x2a1c8c71, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gift=2,
                                is_giveaway=4,
                                is_unclaimed=8,
                                has_user_id=1,
                                has_used_gift_slug=16,
                                has_multiplier=32),
            'id' / TString,
            'user_id' / If(this.flags.has_user_id, Int64ul),
            'giveaway_msg_id' / If(this.flags.is_giveaway, Int32ul),
            'date' / TTimestamp,
            'expires' / Int32ul,
            'used_gift_slug' / If(this.flags.has_used_gift_slug, TString),
            'multiplier' / If(this.flags.has_multiplier, Int32ul))

    @structures
    def stories_boost_structures(self, name):
        tag_map = {
            0x4b3e14d6: LazyBound(self.struct_0x4b3e14d6),
            0x2a1c8c71: LazyBound(self.struct_0x2a1c8c71)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xcfc9e002, 'stories_media_area_coordinates')
    def struct_0xcfc9e002(self):
        return Struct(
            'sname' / Computed('stories_media_area_coordinates'),
            'signature' / Hex(Const(0xcfc9e002, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_radius=1),
            'x' / Double,
            'y' / Double,
            'w' / Double,
            'h' / Double,
            'rotation' / Double,
            'radius' / If(this.flags.has_radius, Double))

    @constructor(0x03d1ea4e, 'stories_media_area_coordinates_layer181')
    def struct_0x03d1ea4e(self):
        return (
            'x' / Double,
            'y' / Double,
            'w' / Double,
            'h' / Double,
            'rotation' / Double)

    @structures
    def stories_media_area_coordinates_structures(self, name):
        tag_map = {
            0xcfc9e002: LazyBound(self.struct_0xcfc9e002),
            0x03d1ea4e: LazyBound(self.struct_0x03d1ea4e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x37381085, 'stories_media_area_url')
    def struct_0x37381085(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'url' / TString)

    @constructor(0x5787686d, 'stories_media_area_star_gift')
    def struct_0x5787686d(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'slug' / TString)

    @constructor(0xbe82db9c, 'stories_media_area_venue')
    def struct_0xbe82db9c(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'geo' / self.geo_point_structures('geo'),
            'title' / TString,
            'address' / TString,
            'provider' / TString,
            'venue_id' / TString,
            'venue_type' / TString)

    @constructor(0xcad5452d, 'stories_media_area_geo_point')
    def struct_0xcad5452d(self):
        return Struct(
            'sname' / Computed('stories_media_area_geo_point'),
            'signature' / Hex(Const(0xcad5452d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_address=1),
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'geo' / self.geo_point_structures('geo'),
            'address' / If(this.flags.has_address, self.struct_0xde4c5d93()))

    @constructor(0xdf8b3b22, 'stories_media_area_geo_point_layer181')
    def struct_0xdf8b3b22(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'geo' / self.geo_point_structures('geo'))

    @constructor(0x14455871, 'stories_media_area_suggested_reaction')
    def struct_0x14455871(self):
        return Struct(
            'sname' / Computed('stories_media_area_suggested_reaction'),
            'signature' / Hex(Const(0x14455871, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1,
                                is_flipped=2),
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0x770416af, 'stories_media_area_channel_post')
    def struct_0x770416af(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'channel_id' / Int64ul,
            'msg_id' / Int32ul)

    @constructor(0xb282217f, 'stories_input_media_area_venue')
    def struct_0xb282217f(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'query_id' / Int64ul,
            'result_id' / TString)

    @constructor(0x2271f2bf, 'stories_input_media_area_channel_post')
    def struct_0x2271f2bf(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'channel' / self.input_channel_structures('channel'),
            'msg_id' / Int32ul)

    @constructor(0x49a6549c, 'stories_media_area_weather')
    def struct_0x49a6549c(self):
        return (
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'emoji' / TString,
            'temperature_c' / Double,
            'color' / Int32ul)

    @constructor(0x4386f849, 'stories_media_area_weather_old')
    def struct_0x4386f849(self):
        return Struct(
            'sname' / Computed('stories_media_area_weather_old'),
            'signature' / Hex(Const(0x4386f849, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'emoji' / TString,
            'temperature_c' / Double)

    @constructor(0x855f223e, 'stories_media_area_weather2')
    def struct_0x855f223e(self):
        return Struct(
            'sname' / Computed('stories_media_area_weather2'),
            'signature' / Hex(Const(0x855f223e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'coordinates' / self.stories_media_area_coordinates_structures('coordinates'),
            'emoji' / TString,
            'temperature_c' / Int32ul)

    @structures
    def stories_media_area_structures(self, name):
        tag_map = {
            0x37381085: LazyBound(self.struct_0x37381085),
            0x5787686d: LazyBound(self.struct_0x5787686d),
            0xbe82db9c: LazyBound(self.struct_0xbe82db9c),
            0xcad5452d: LazyBound(self.struct_0xcad5452d),
            0xdf8b3b22: LazyBound(self.struct_0xdf8b3b22),
            0x14455871: LazyBound(self.struct_0x14455871),
            0x770416af: LazyBound(self.struct_0x770416af),
            0xb282217f: LazyBound(self.struct_0xb282217f),
            0x2271f2bf: LazyBound(self.struct_0x2271f2bf),
            0x49a6549c: LazyBound(self.struct_0x49a6549c),
            0x4386f849: LazyBound(self.struct_0x4386f849),
            0x855f223e: LazyBound(self.struct_0x855f223e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x9a35e999, 'stories_peer_stories')
    def struct_0x9a35e999(self):
        return Struct(
            'sname' / Computed('stories_peer_stories'),
            'signature' / Hex(Const(0x9a35e999, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_max_read_id=1),
            'peer' / self.peer_structures('peer'),
            'max_read_id' / If(this.flags.has_max_read_id, Int32ul),
            'stories' / self.vector(self.story_item_structures('stories'), 'stories'))

    @constructor(0x8611a200, 'stories_peer_stories_layer162')
    def struct_0x8611a200(self):
        return Struct(
            'sname' / Computed('stories_peer_stories_layer162'),
            'signature' / Hex(Const(0x8611a200, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_max_read_id=1),
            'peer_user_id' / Int64ul,
            'max_read_id' / If(this.flags.has_max_read_id, Int32ul),
            'stories' / self.vector(self.story_item_structures('stories'), 'stories'))

    @structures
    def stories_peer_stories_structures(self, name):
        tag_map = {
            0x9a35e999: LazyBound(self.struct_0x9a35e999),
            0x8611a200: LazyBound(self.struct_0x8611a200)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb2539d54, 'stories_prepaid_giveaway')
    def struct_0xb2539d54(self):
        return (
            'id' / Int64ul,
            'months' / Int32ul,
            'quantity' / Int32ul,
            'date' / TTimestamp)

    @constructor(0x9a9d77e0, 'stories_prepaid_stars_giveaway')
    def struct_0x9a9d77e0(self):
        return (
            'id' / Int64ul,
            'stars' / Int64ul,
            'quantity' / Int32ul,
            'boosts' / Int32ul,
            'date' / TTimestamp)

    @structures
    def stories_prepaid_giveaway_structures(self, name):
        tag_map = {
            0xb2539d54: LazyBound(self.struct_0xb2539d54),
            0x9a9d77e0: LazyBound(self.struct_0x9a9d77e0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb826e150, 'story_fwd_header')
    def struct_0xb826e150(self):
        return Struct(
            'sname' / Computed('story_fwd_header'),
            'signature' / Hex(Const(0xb826e150, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_modified=8,
                                has_from=1,
                                has_from_name=2,
                                has_story_id=4),
            'from' / If(this.flags.has_from, self.peer_structures('from')),
            'from_name' / If(this.flags.has_from_name, TString),
            'story_id' / If(this.flags.has_story_id, Int32ul))

    @structures
    def story_fwd_header_structures(self, name):
        tag_map = {
            0xb826e150: LazyBound(self.struct_0xb826e150)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x79b26a24, 'story_item')
    def struct_0x79b26a24(self):
        return Struct(
            'sname' / Computed('story_item'),
            'signature' / Hex(Const(0x79b26a24, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=32,
                                is_public=128,
                                is_close_friends=256,
                                is_min=512,
                                is_noforwards=1024,
                                is_edited=2048,
                                is_contacts=4096,
                                is_selected_contacts=8192,
                                is_out=65536,
                                has_from_id=262144,
                                has_fwd_from=131072,
                                has_caption=1,
                                has_entities=2,
                                has_media_areas=16384,
                                has_privacy=4,
                                has_views=8,
                                has_sent_reaction=32768),
            'id' / Int32ul,
            'date' / TTimestamp,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'fwd_from' / If(this.flags.has_fwd_from, self.story_fwd_header_structures('fwd_from')),
            'expire_date' / TTimestamp,
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / self.message_media_structures('media'),
            'media_areas' / If(this.flags.has_media_areas, self.vector(self.stories_media_area_structures('media_areas'), 'media_areas')),
            'privacy' / If(this.flags.has_privacy, self.vector(self.privacy_rule_structures('privacy'), 'privacy')),
            'views' / If(this.flags.has_views, self.story_views_structures('views')),
            'sent_reaction' / If(this.flags.has_sent_reaction, self.reaction_structures('sent_reaction')))

    @constructor(0xaf6365a1, 'story_item_layer174')
    def struct_0xaf6365a1(self):
        return Struct(
            'sname' / Computed('story_item_layer174'),
            'signature' / Hex(Const(0xaf6365a1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=32,
                                is_public=128,
                                is_close_friends=256,
                                is_min=512,
                                is_noforwards=1024,
                                is_edited=2048,
                                is_contacts=4096,
                                is_selected_contacts=8192,
                                is_out=65536,
                                has_fwd_from=131072,
                                has_caption=1,
                                has_entities=2,
                                has_media_areas=16384,
                                has_privacy=4,
                                has_views=8,
                                has_sent_reaction=32768),
            'id' / Int32ul,
            'date' / TTimestamp,
            'fwd_from' / If(this.flags.has_fwd_from, self.story_fwd_header_structures('fwd_from')),
            'expire_date' / TTimestamp,
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / self.message_media_structures('media'),
            'media_areas' / If(this.flags.has_media_areas, self.vector(self.stories_media_area_structures('media_areas'), 'media_areas')),
            'privacy' / If(this.flags.has_privacy, self.vector(self.privacy_rule_structures('privacy'), 'privacy')),
            'views' / If(this.flags.has_views, self.story_views_structures('views')),
            'sent_reaction' / If(this.flags.has_sent_reaction, self.reaction_structures('sent_reaction')))

    @constructor(0x44c457ce, 'story_item_layer166')
    def struct_0x44c457ce(self):
        return Struct(
            'sname' / Computed('story_item_layer166'),
            'signature' / Hex(Const(0x44c457ce, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=32,
                                is_public=128,
                                is_close_friends=256,
                                is_min=512,
                                is_noforwards=1024,
                                is_edited=2048,
                                is_contacts=4096,
                                is_selected_contacts=8192,
                                is_out=65536,
                                has_caption=1,
                                has_entities=2,
                                has_media_areas=16384,
                                has_privacy=4,
                                has_views=8,
                                has_sent_reaction=32768),
            'id' / Int32ul,
            'date' / TTimestamp,
            'expire_date' / TTimestamp,
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / self.message_media_structures('media'),
            'media_areas' / If(this.flags.has_media_areas, self.vector(self.stories_media_area_structures('media_areas'), 'media_areas')),
            'privacy' / If(this.flags.has_privacy, self.vector(self.privacy_rule_structures('privacy'), 'privacy')),
            'views' / If(this.flags.has_views, self.story_views_structures('views')),
            'sent_reaction' / If(this.flags.has_sent_reaction, self.reaction_structures('sent_reaction')))

    @constructor(0x562aa637, 'story_item_layer160')
    def struct_0x562aa637(self):
        return Struct(
            'sname' / Computed('story_item_layer160'),
            'signature' / Hex(Const(0x562aa637, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=32,
                                is_public=128,
                                is_close_friends=256,
                                is_min=512,
                                is_noforwards=1024,
                                is_edited=2048,
                                is_contacts=4096,
                                is_selected_contacts=8192,
                                has_caption=1,
                                has_entities=2,
                                has_privacy=4,
                                has_views=8),
            'id' / Int32ul,
            'date' / TTimestamp,
            'expire_date' / TTimestamp,
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / self.message_media_structures('media'),
            'privacy' / If(this.flags.has_privacy, self.vector(self.privacy_rule_structures('privacy'), 'privacy')),
            'views' / If(this.flags.has_views, self.story_views_structures('views')))

    @constructor(0x51e6ee4f, 'story_item_deleted')
    def struct_0x51e6ee4f(self):
        return ['id' / Int32ul]

    @constructor(0xffadc913, 'story_item_skipped')
    def struct_0xffadc913(self):
        return Struct(
            'sname' / Computed('story_item_skipped'),
            'signature' / Hex(Const(0xffadc913, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_close_friends=256),
            'id' / Int32ul,
            'date' / TTimestamp,
            'expire_date' / TTimestamp)

    @structures
    def story_item_structures(self, name):
        tag_map = {
            0x79b26a24: LazyBound(self.struct_0x79b26a24),
            0xaf6365a1: LazyBound(self.struct_0xaf6365a1),
            0x44c457ce: LazyBound(self.struct_0x44c457ce),
            0x562aa637: LazyBound(self.struct_0x562aa637),
            0x51e6ee4f: LazyBound(self.struct_0x51e6ee4f),
            0xffadc913: LazyBound(self.struct_0xffadc913)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x6090d6d5, 'story_reaction')
    def struct_0x6090d6d5(self):
        return (
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp,
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0xbbab2643, 'story_reaction_public_forward')
    def struct_0xbbab2643(self):
        return ['message' / self.message_structures('message')]

    @constructor(0xcfcd0f13, 'story_reaction_public_repost')
    def struct_0xcfcd0f13(self):
        return (
            'peer_id' / self.peer_structures('peer_id'),
            'story' / self.story_item_structures('story'))

    @structures
    def story_reaction_structures(self, name):
        tag_map = {
            0x6090d6d5: LazyBound(self.struct_0x6090d6d5),
            0xbbab2643: LazyBound(self.struct_0xbbab2643),
            0xcfcd0f13: LazyBound(self.struct_0xcfcd0f13)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xb0bdeac5, 'story_view')
    def struct_0xb0bdeac5(self):
        return Struct(
            'sname' / Computed('story_view'),
            'signature' / Hex(Const(0xb0bdeac5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_blocked_my_stories_from=2,
                                has_reaction=4),
            'user_id' / Int64ul,
            'date' / TTimestamp,
            'reaction' / If(this.flags.has_reaction, self.reaction_structures('reaction')))

    @constructor(0x9083670b, 'story_view_public_forward')
    def struct_0x9083670b(self):
        return Struct(
            'sname' / Computed('story_view_public_forward'),
            'signature' / Hex(Const(0x9083670b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_blocked_my_stories_from=2),
            'message' / self.message_structures('message'))

    @constructor(0xbd74cf49, 'story_view_public_repost')
    def struct_0xbd74cf49(self):
        return Struct(
            'sname' / Computed('story_view_public_repost'),
            'signature' / Hex(Const(0xbd74cf49, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_blocked_my_stories_from=2),
            'peer_id' / self.peer_structures('peer_id'),
            'story' / self.story_item_structures('story'))

    @structures
    def story_view_structures(self, name):
        tag_map = {
            0xb0bdeac5: LazyBound(self.struct_0xb0bdeac5),
            0x9083670b: LazyBound(self.struct_0x9083670b),
            0xbd74cf49: LazyBound(self.struct_0xbd74cf49)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x59d78fc5, 'story_views_list')
    def struct_0x59d78fc5(self):
        return Struct(
            'sname' / Computed('story_views_list'),
            'signature' / Hex(Const(0x59d78fc5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'views_count' / Int32ul,
            'forwards_count' / Int32ul,
            'reactions_count' / Int32ul,
            'views' / self.vector(self.story_view_structures('views'), 'views'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @constructor(0x46e9b9ec, 'story_views_list_layer167')
    def struct_0x46e9b9ec(self):
        return Struct(
            'sname' / Computed('story_views_list_layer167'),
            'signature' / Hex(Const(0x46e9b9ec, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'reactions_count' / Int32ul,
            'views' / self.vector(self.story_view_structures('views'), 'views'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @structures
    def story_views_list_structures(self, name):
        tag_map = {
            0x59d78fc5: LazyBound(self.struct_0x59d78fc5),
            0x46e9b9ec: LazyBound(self.struct_0x46e9b9ec)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xd36760cf, 'story_views_layer160')
    def struct_0xd36760cf(self):
        return Struct(
            'sname' / Computed('story_views_layer160'),
            'signature' / Hex(Const(0xd36760cf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_recent_viewers=1),
            'views_count' / Int32ul,
            'recent_viewers' / If(this.flags.has_recent_viewers, self.vector(Int64ul, 'recent_viewers')))

    @constructor(0xc64c0b97, 'story_views_layer161')
    def struct_0xc64c0b97(self):
        return Struct(
            'sname' / Computed('story_views_layer161'),
            'signature' / Hex(Const(0xc64c0b97, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_recent_viewers=1),
            'views_count' / Int32ul,
            'reactions_count' / Int32ul,
            'recent_viewers' / If(this.flags.has_recent_viewers, self.vector(Int64ul, 'recent_viewers')))

    @constructor(0x8d595cd6, 'story_views')
    def struct_0x8d595cd6(self):
        return Struct(
            'sname' / Computed('story_views'),
            'signature' / Hex(Const(0x8d595cd6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_viewers=2,
                                has_forwards_count=4,
                                has_reactions=8,
                                has_reactions_count=16,
                                has_recent_viewers=1),
            'views_count' / Int32ul,
            'forwards_count' / If(this.flags.has_forwards_count, Int32ul),
            'reactions' / If(this.flags.has_reactions, self.vector(self.reaction_count_structures('reactions'), 'reactions')),
            'reactions_count' / If(this.flags.has_reactions_count, Int32ul),
            'recent_viewers' / If(this.flags.has_recent_viewers, self.vector(Int64ul, 'recent_viewers')))

    @structures
    def story_views_structures(self, name):
        tag_map = {
            0xd36760cf: LazyBound(self.struct_0xd36760cf),
            0xc64c0b97: LazyBound(self.struct_0xc64c0b97),
            0x8d595cd6: LazyBound(self.struct_0x8d595cd6)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xfa58b6d4, 'theme_settings')
    def struct_0xfa58b6d4(self):
        return Struct(
            'sname' / Computed('theme_settings'),
            'signature' / Hex(Const(0xfa58b6d4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_message_colors_animated=4,
                                has_outbox_accent_color=8,
                                has_message_colors=1,
                                has_wallpaper=2),
            'base_theme' / self.base_theme_structures('base_theme'),
            'accent_color' / Int32ul,
            'outbox_accent_color' / If(this.flags.has_outbox_accent_color, Int32ul),
            'message_colors' / If(this.flags.has_message_colors, self.vector(Int32ul, 'message_colors')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @constructor(0x8db4e76c, 'theme_settings_layer132')
    def struct_0x8db4e76c(self):
        return Struct(
            'sname' / Computed('theme_settings_layer132'),
            'signature' / Hex(Const(0x8db4e76c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_message_colors_animated=4,
                                has_message_colors=1,
                                has_wallpaper=2),
            'base_theme' / self.base_theme_structures('base_theme'),
            'accent_color' / Int32ul,
            'message_colors' / If(this.flags.has_message_colors, self.vector(Int32ul, 'message_colors')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @constructor(0x9c14984a, 'theme_settings_layer131')
    def struct_0x9c14984a(self):
        return Struct(
            'sname' / Computed('theme_settings_layer131'),
            'signature' / Hex(Const(0x9c14984a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_message_color=1,
                                has_wallpaper=2),
            'base_theme' / self.base_theme_structures('base_theme'),
            'accent_color' / Int32ul,
            'message_top_color' / If(this.flags.has_message_color, Int32ul),
            'message_bottom_color' / If(this.flags.has_message_color, Int32ul),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @structures
    def theme_settings_structures(self, name):
        tag_map = {
            0xfa58b6d4: LazyBound(self.struct_0xfa58b6d4),
            0x8db4e76c: LazyBound(self.struct_0x8db4e76c),
            0x9c14984a: LazyBound(self.struct_0x9c14984a)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x028f1114, 'theme_layer131')
    def struct_0x028f1114(self):
        return Struct(
            'sname' / Computed('theme_layer131'),
            'signature' / Hex(Const(0x028f1114, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2,
                                has_document=4,
                                has_setting=8),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'slug' / TString,
            'title' / TString,
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'setting' / If(this.flags.has_setting, self.theme_settings_structures('setting')),
            'installs_count' / Int32ul)

    @constructor(0xf7d90ce0, 'theme_layer106')
    def struct_0xf7d90ce0(self):
        return Struct(
            'sname' / Computed('theme_layer106'),
            'signature' / Hex(Const(0xf7d90ce0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2,
                                has_document=4),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'slug' / TString,
            'title' / TString,
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'installs_count' / Int32ul)

    @constructor(0x483d270c, 'theme_document_not_modified_layer106')
    def struct_0x483d270c(self):
        return []

    @constructor(0xa00e67d6, 'theme')
    def struct_0xa00e67d6(self):
        return Struct(
            'sname' / Computed('theme'),
            'signature' / Hex(Const(0xa00e67d6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2,
                                is_for_chat=32,
                                has_document=4,
                                has_settings=8,
                                has_emoticon=64,
                                has_installs_count=16),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'slug' / TString,
            'title' / TString,
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'settings' / If(this.flags.has_settings, self.vector(self.theme_settings_structures('settings'), 'settings')),
            'emoticon' / If(this.flags.has_emoticon, TString),
            'installs_count' / If(this.flags.has_installs_count, Int32ul))

    @constructor(0xe802b8dc, 'theme_layer133')
    def struct_0xe802b8dc(self):
        return Struct(
            'sname' / Computed('theme_layer133'),
            'signature' / Hex(Const(0xe802b8dc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2,
                                is_for_chat=32,
                                has_document=4,
                                has_setting=8,
                                has_installs_count=16),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'slug' / TString,
            'title' / TString,
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'setting' / If(this.flags.has_setting, self.theme_settings_structures('setting')),
            'installs_count' / If(this.flags.has_installs_count, Int32ul))

    @structures
    def theme_structures(self, name):
        tag_map = {
            0x028f1114: LazyBound(self.struct_0x028f1114),
            0xf7d90ce0: LazyBound(self.struct_0xf7d90ce0),
            0x483d270c: LazyBound(self.struct_0x483d270c),
            0xa00e67d6: LazyBound(self.struct_0xa00e67d6),
            0xe802b8dc: LazyBound(self.struct_0xe802b8dc)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x161d9628, 'top_peer_category_channels')
    def struct_0x161d9628(self):
        return []

    @constructor(0x1e76a78c, 'top_peer_category_phone_calls')
    def struct_0x1e76a78c(self):
        return []

    @constructor(0xbd17a14a, 'top_peer_category_groups')
    def struct_0xbd17a14a(self):
        return []

    @constructor(0x148677e2, 'top_peer_category_bots_inline')
    def struct_0x148677e2(self):
        return []

    @constructor(0xa8406ca9, 'top_peer_category_forward_users')
    def struct_0xa8406ca9(self):
        return []

    @constructor(0xfbeec0f0, 'top_peer_category_forward_chats')
    def struct_0xfbeec0f0(self):
        return []

    @constructor(0xab661b5b, 'top_peer_category_bots_pm')
    def struct_0xab661b5b(self):
        return []

    @constructor(0x0637b7ed, 'top_peer_category_correspondents')
    def struct_0x0637b7ed(self):
        return []

    @constructor(0xfd9e7bec, 'top_peer_category_bots_app')
    def struct_0xfd9e7bec(self):
        return []

    @structures
    def top_peer_category_structures(self, name):
        tag_map = {
            0x161d9628: LazyBound(self.struct_0x161d9628),
            0x1e76a78c: LazyBound(self.struct_0x1e76a78c),
            0xbd17a14a: LazyBound(self.struct_0xbd17a14a),
            0x148677e2: LazyBound(self.struct_0x148677e2),
            0xa8406ca9: LazyBound(self.struct_0xa8406ca9),
            0xfbeec0f0: LazyBound(self.struct_0xfbeec0f0),
            0xab661b5b: LazyBound(self.struct_0xab661b5b),
            0x0637b7ed: LazyBound(self.struct_0x0637b7ed),
            0xfd9e7bec: LazyBound(self.struct_0xfd9e7bec)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x24f40e77, 'update_message_poll_vote')
    def struct_0x24f40e77(self):
        return (
            'poll_id' / Int64ul,
            'peer' / self.peer_structures('peer'),
            'options' / self.vector(TBytes, 'options'),
            'qts' / Int32ul)

    @constructor(0xd5a41724, 'update_message_extended_media')
    def struct_0xd5a41724(self):
        return (
            'peer' / self.peer_structures('peer'),
            'msg_id' / Int32ul,
            'extended_media' / self.vector(self.message_extended_media_structures('extended_media'), 'extended_media'))

    @constructor(0xaca1657b, 'update_message_poll')
    def struct_0xaca1657b(self):
        return Struct(
            'sname' / Computed('update_message_poll'),
            'signature' / Hex(Const(0xaca1657b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_poll=1),
            'poll_id' / Int64ul,
            'poll' / If(this.flags.has_poll, self.poll_structures('poll')),
            'results' / self.poll_results_structures('results'))

    @constructor(0xbb9bb9a5, 'update_peer_history_ttl')
    def struct_0xbb9bb9a5(self):
        return Struct(
            'sname' / Computed('update_peer_history_ttl'),
            'signature' / Hex(Const(0xbb9bb9a5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_ttl_period=1),
            'peer' / self.peer_structures('peer'),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0xf89a6a4e, 'update_chat')
    def struct_0xf89a6a4e(self):
        return ['chat_id' / Int64ul]

    @constructor(0xa20db0e5, 'update_delete_messages')
    def struct_0xa20db0e5(self):
        return (
            'messages' / self.vector(Int32ul, 'messages'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x5bb98608, 'update_pinned_channel_messages')
    def struct_0x5bb98608(self):
        return Struct(
            'sname' / Computed('update_pinned_channel_messages'),
            'signature' / Hex(Const(0x5bb98608, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'channel_id' / Int64ul,
            'messages' / self.vector(Int32ul, 'messages'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0xf2ebdb4e, 'update_group_call_participants')
    def struct_0xf2ebdb4e(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'participants' / self.vector(self.struct_0xeba636fe(), 'participants'),
            'version' / Int32ul)

    @constructor(0x571d2742, 'update_read_featured_stickers')
    def struct_0x571d2742(self):
        return []

    @constructor(0x1710f156, 'update_encrypted_chat_typing')
    def struct_0x1710f156(self):
        return ['chat_id' / Int32ul]

    @constructor(0xd6b19546, 'update_read_channel_discussion_inbox')
    def struct_0xd6b19546(self):
        return Struct(
            'sname' / Computed('update_read_channel_discussion_inbox'),
            'signature' / Hex(Const(0xd6b19546, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_broadcast_id=1),
            'channel_id' / Int64ul,
            'top_msg_id' / Int32ul,
            'read_max_id' / Int32ul,
            'broadcast_id' / If(this.flags.has_broadcast_id, Int64ul),
            'broadcast_post' / If(this.flags.has_broadcast_id, Int32ul))

    @constructor(0x2f2f21bf, 'update_read_history_outbox')
    def struct_0x2f2f21bf(self):
        return (
            'peer' / self.peer_structures('peer'),
            'max_id' / Int32ul,
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x62ba04d9, 'update_new_channel_message')
    def struct_0x62ba04d9(self):
        return (
            'message' / self.message_structures('message'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x1592b79d, 'update_web_view_result_sent')
    def struct_0x1592b79d(self):
        return ['query_id' / Int64ul]

    @constructor(0x6e6fe51c, 'update_dialog_pinned')
    def struct_0x6e6fe51c(self):
        return Struct(
            'sname' / Computed('update_dialog_pinned'),
            'signature' / Hex(Const(0x6e6fe51c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1,
                                has_folder_id=2),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'peer' / self.dialog_peer_structures('peer'))

    @constructor(0x6a7e7366, 'update_peer_settings')
    def struct_0x6a7e7366(self):
        return (
            'peer' / self.peer_structures('peer'),
            'settings' / self.peer_settings_structures('settings'))

    @constructor(0x05492a13, 'update_user_phone')
    def struct_0x05492a13(self):
        return (
            'user_id' / Int64ul,
            'phone' / TString)

    @constructor(0x4e90bfd6, 'update_message_id')
    def struct_0x4e90bfd6(self):
        return (
            'id' / Int32ul,
            'random_id' / Int64ul)

    @constructor(0xb75f99a9, 'update_read_channel_outbox')
    def struct_0xb75f99a9(self):
        return (
            'channel_id' / Int64ul,
            'max_id' / Int32ul)

    @constructor(0x8c88c923, 'update_channel_user_typing')
    def struct_0x8c88c923(self):
        return Struct(
            'sname' / Computed('update_channel_user_typing'),
            'signature' / Hex(Const(0x8c88c923, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'channel_id' / Int64ul,
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'from_id' / self.peer_structures('from_id'),
            'action' / self.send_message_action_structures('action'))

    @constructor(0x1bf335b9, 'update_story_id')
    def struct_0x1bf335b9(self):
        return (
            'id' / Int32ul,
            'random_id' / Int64ul)

    @constructor(0x31c24808, 'update_sticker_sets')
    def struct_0x31c24808(self):
        return Struct(
            'sname' / Computed('update_sticker_sets'),
            'signature' / Hex(Const(0x31c24808, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=2))

    @constructor(0x19360dc0, 'update_folder_peers')
    def struct_0x19360dc0(self):
        return (
            'folder_peers' / self.vector(self.struct_0xe9baa668(), 'folder_peers'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x1f2b0afd, 'update_new_message')
    def struct_0x1f2b0afd(self):
        return (
            'message' / self.message_structures('message'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x39a51dfb, 'update_new_scheduled_message')
    def struct_0x39a51dfb(self):
        return ['message' / self.message_structures('message')]

    @constructor(0x12bcbd9a, 'update_new_encrypted_message')
    def struct_0x12bcbd9a(self):
        return (
            'message' / self.encrypted_message_structures('message'),
            'qts' / Int32ul)

    @constructor(0x86fccf85, 'update_move_sticker_set_to_top')
    def struct_0x86fccf85(self):
        return Struct(
            'sname' / Computed('update_move_sticker_set_to_top'),
            'signature' / Hex(Const(0x86fccf85, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=2),
            'stickerset' / Int64ul)

    @constructor(0xe5bdf8de, 'update_user_status')
    def struct_0xe5bdf8de(self):
        return (
            'user_id' / Int64ul,
            'status' / self.user_status_structures('status'))

    @constructor(0x28373599, 'update_user_emoji_status')
    def struct_0x28373599(self):
        return (
            'user_id' / Int64ul,
            'emoji_status' / self.emoji_status_structures('emoji_status'))

    @constructor(0xf226ac08, 'update_channel_message_views')
    def struct_0xf226ac08(self):
        return (
            'channel_id' / Int64ul,
            'id' / Int32ul,
            'views' / Int32ul)

    @constructor(0x0b783982, 'update_group_call_connection')
    def struct_0x0b783982(self):
        return Struct(
            'sname' / Computed('update_group_call_connection'),
            'signature' / Hex(Const(0x0b783982, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_presentation=1),
            'params' / self.struct_0x7d748d04())

    @constructor(0x4d712f2e, 'update_bot_commands')
    def struct_0x4d712f2e(self):
        return (
            'peer' / self.peer_structures('peer'),
            'bot_id' / Int64ul,
            'commands' / self.vector(self.struct_0xc27ac8c7(), 'commands'))

    @constructor(0x871fb939, 'update_geo_live_viewed')
    def struct_0x871fb939(self):
        return (
            'peer' / self.peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0xbec268ef, 'update_notify_settings')
    def struct_0xbec268ef(self):
        return (
            'peer' / self.notify_peer_structures('peer'),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'))

    @constructor(0x985d3abb, 'update_channel_participant')
    def struct_0x985d3abb(self):
        return Struct(
            'sname' / Computed('update_channel_participant'),
            'signature' / Hex(Const(0x985d3abb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_chatlist=8,
                                has_prev_participant=1,
                                has_new_participant=2,
                                has_invite=4),
            'channel_id' / Int64ul,
            'date' / TTimestamp,
            'actor_id' / Int64ul,
            'user_id' / Int64ul,
            'prev_participant' / If(this.flags.has_prev_participant, self.channel_participant_structures('prev_participant')),
            'new_participant' / If(this.flags.has_new_participant, self.channel_participant_structures('new_participant')),
            'invite' / If(this.flags.has_invite, self.exported_chat_invite_structures('invite')),
            'qts' / Int32ul)

    @constructor(0x695c9e7c, 'update_read_channel_discussion_outbox')
    def struct_0x695c9e7c(self):
        return (
            'channel_id' / Int64ul,
            'top_msg_id' / Int32ul,
            'read_max_id' / Int32ul)

    @constructor(0xe32f3d77, 'update_chat_participant_delete')
    def struct_0xe32f3d77(self):
        return (
            'chat_id' / Int64ul,
            'user_id' / Int64ul,
            'version' / Int32ul)

    @constructor(0xfb4c496c, 'update_read_featured_emoji_stickers')
    def struct_0xfb4c496c(self):
        return []

    @constructor(0xe40370a3, 'update_edit_message')
    def struct_0xe40370a3(self):
        return (
            'message' / self.message_structures('message'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x6f7863f4, 'update_recent_reactions')
    def struct_0x6f7863f4(self):
        return []

    @constructor(0x39c67432, 'update_saved_reaction_tags')
    def struct_0x39c67432(self):
        return []

    @constructor(0x7f891213, 'update_web_page')
    def struct_0x7f891213(self):
        return (
            'webpage' / self.web_page_structures('webpage'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0xe511996d, 'update_faved_stickers')
    def struct_0xe511996d(self):
        return []

    @constructor(0x3dda5451, 'update_chat_participant_add')
    def struct_0x3dda5451(self):
        return (
            'chat_id' / Int64ul,
            'user_id' / Int64ul,
            'inviter_id' / Int64ul,
            'date' / TTimestamp,
            'version' / Int32ul)

    @constructor(0x83487af0, 'update_chat_user_typing')
    def struct_0x83487af0(self):
        return (
            'chat_id' / Int64ul,
            'from_id' / self.peer_structures('from_id'),
            'action' / self.send_message_action_structures('action'))

    @constructor(0x564fe691, 'update_login_token')
    def struct_0x564fe691(self):
        return []

    @constructor(0xb4a2e88d, 'update_encryption')
    def struct_0xb4a2e88d(self):
        return (
            'chat' / self.encrypted_chat_structures('chat'),
            'date' / TTimestamp)

    @constructor(0x97d64341, 'update_group_call')
    def struct_0x97d64341(self):
        return Struct(
            'sname' / Computed('update_group_call'),
            'signature' / Hex(Const(0x97d64341, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_chat_id=1),
            'chat_id' / If(this.flags.has_chat_id, Int64ul),
            'call' / self.group_call_structures('call'))

    @constructor(0x108d941f, 'update_channel_too_long')
    def struct_0x108d941f(self):
        return Struct(
            'sname' / Computed('update_channel_too_long'),
            'signature' / Hex(Const(0x108d941f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_pts=1),
            'channel_id' / Int64ul,
            'pts' / If(this.flags.has_pts, Int32ul))

    @constructor(0xc01e857f, 'update_user_typing')
    def struct_0xc01e857f(self):
        return (
            'user_id' / Int64ul,
            'action' / self.send_message_action_structures('action'))

    @constructor(0xf74e932b, 'stories_update_read_stories')
    def struct_0xf74e932b(self):
        return (
            'peer' / self.peer_structures('peer'),
            'max_id' / Int32ul)

    @constructor(0xebe46819, 'update_service_notification')
    def struct_0xebe46819(self):
        return Struct(
            'sname' / Computed('update_service_notification'),
            'signature' / Hex(Const(0xebe46819, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_popup=1,
                                is_invert_media=4,
                                has_inbox_date=2),
            'inbox_date' / If(this.flags.has_inbox_date, TTimestamp),
            'type' / TString,
            'message' / TString,
            'media' / self.message_media_structures('media'),
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'))

    @constructor(0x56022f4d, 'update_lang_pack')
    def struct_0x56022f4d(self):
        return ['difference' / self.struct_0xf385c1f6()]

    @constructor(0xb23fc698, 'update_channel_available_messages')
    def struct_0xb23fc698(self):
        return (
            'channel_id' / Int64ul,
            'available_min_id' / Int32ul)

    @constructor(0xd7ca61a2, 'update_chat_participant_admin')
    def struct_0xd7ca61a2(self):
        return (
            'chat_id' / Int64ul,
            'user_id' / Int64ul,
            'is_admin' / TBool,
            'version' / Int32ul)

    @constructor(0xea29055d, 'update_channel_read_messages_contents')
    def struct_0xea29055d(self):
        return Struct(
            'sname' / Computed('update_channel_read_messages_contents'),
            'signature' / Hex(Const(0xea29055d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'channel_id' / Int64ul,
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'messages' / self.vector(Int32ul, 'messages'))

    @constructor(0xee3b272a, 'update_privacy')
    def struct_0xee3b272a(self):
        return (
            'key' / self.privacy_key_structures('key'),
            'rules' / self.vector(self.privacy_rule_structures('rules'), 'rules'))

    @constructor(0xa229dd06, 'update_config')
    def struct_0xa229dd06(self):
        return []

    @constructor(0xe16459c3, 'update_dialog_unread_mark')
    def struct_0xe16459c3(self):
        return Struct(
            'sname' / Computed('update_dialog_unread_mark'),
            'signature' / Hex(Const(0xe16459c3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1),
            'peer' / self.dialog_peer_structures('peer'))

    @constructor(0x1b49ec6d, 'update_draft_message')
    def struct_0x1b49ec6d(self):
        return Struct(
            'sname' / Computed('update_draft_message'),
            'signature' / Hex(Const(0x1b49ec6d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'draft' / self.draft_message_structures('draft'))

    @constructor(0x8951abef, 'update_new_authorization')
    def struct_0x8951abef(self):
        return Struct(
            'sname' / Computed('update_new_authorization'),
            'signature' / Hex(Const(0x8951abef, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unconfirmed=1),
            'hash' / Int64ul,
            'date' / If(this.flags.is_unconfirmed, TTimestamp),
            'device' / If(this.flags.is_unconfirmed, TString),
            'location' / If(this.flags.is_unconfirmed, TString))

    @constructor(0xa7848924, 'update_user_name')
    def struct_0xa7848924(self):
        return (
            'user_id' / Int64ul,
            'first_name' / TString,
            'last_name' / TString,
            'usernames' / self.vector(self.struct_0xb4073647(), 'usernames'))

    @constructor(0x5e1b3cb8, 'update_message_reactions')
    def struct_0x5e1b3cb8(self):
        return Struct(
            'sname' / Computed('update_message_reactions'),
            'signature' / Hex(Const(0x5e1b3cb8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.peer_structures('peer'),
            'msg_id' / Int32ul,
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'reactions' / self.message_reactions_structures('reactions'))

    @constructor(0xab0f6b1e, 'update_phone_call')
    def struct_0xab0f6b1e(self):
        return ['phone_call' / self.phone_call_structures('phone_call')]

    @constructor(0x26ffde7d, 'update_dialog_filter')
    def struct_0x26ffde7d(self):
        return Struct(
            'sname' / Computed('update_dialog_filter'),
            'signature' / Hex(Const(0x26ffde7d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_filter=1),
            'id' / Int32ul,
            'filter' / If(this.flags.has_filter, self.dialog_filter_structures('filter')))

    @constructor(0xebe07752, 'update_peer_blocked')
    def struct_0xebe07752(self):
        return Struct(
            'sname' / Computed('update_peer_blocked'),
            'signature' / Hex(Const(0xebe07752, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_blocked_my_stories_from=2),
            'peer_id' / self.peer_structures('peer_id'))

    @constructor(0xed85eab5, 'update_pinned_messages')
    def struct_0xed85eab5(self):
        return Struct(
            'sname' / Computed('update_pinned_messages'),
            'signature' / Hex(Const(0xed85eab5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'peer' / self.peer_structures('peer'),
            'messages' / self.vector(Int32ul, 'messages'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x2661bf09, 'update_phone_call_signaling_data')
    def struct_0x2661bf09(self):
        return (
            'phone_call_id' / Int64ul,
            'data' / TBytes)

    @constructor(0x88617090, 'update_transcribe_audio')
    def struct_0x88617090(self):
        return Struct(
            'sname' / Computed('update_transcribe_audio'),
            'signature' / Hex(Const(0x88617090, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_final=1),
            'transcription_id' / Int64ul,
            'text' / TString)

    @constructor(0xfa0f3ca2, 'update_pinned_dialogs')
    def struct_0xfa0f3ca2(self):
        return Struct(
            'sname' / Computed('update_pinned_dialogs'),
            'signature' / Hex(Const(0xfa0f3ca2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_folder_id=2,
                                has_order=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'order' / If(this.flags.has_order, self.vector(self.dialog_peer_structures('order'), 'order')))

    @constructor(0x74d8be99, 'update_saved_ringtones')
    def struct_0x74d8be99(self):
        return []

    @constructor(0x2c084dc1, 'stories_update_stories_stealth_mode')
    def struct_0x2c084dc1(self):
        return ['stealth_mode' / self.struct_0x712e27fd()]

    @constructor(0x0084cd5a, 'update_transcribed_audio')
    def struct_0x0084cd5a(self):
        return Struct(
            'sname' / Computed('update_transcribed_audio'),
            'signature' / Hex(Const(0x0084cd5a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pending=1),
            'peer' / self.peer_structures('peer'),
            'msg_id' / Int32ul,
            'transcription_id' / Int64ul,
            'text' / TString)

    @constructor(0xb4afcfb0, 'update_peer_located')
    def struct_0xb4afcfb0(self):
        return ['peers' / self.vector(self.peer_located_structures('peers'), 'peers')]

    @constructor(0x9a422c20, 'update_recent_stickers')
    def struct_0x9a422c20(self):
        return []

    @constructor(0x9c974fdf, 'update_read_history_inbox')
    def struct_0x9c974fdf(self):
        return Struct(
            'sname' / Computed('update_read_history_inbox'),
            'signature' / Hex(Const(0x9c974fdf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_folder_id=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'peer' / self.peer_structures('peer'),
            'max_id' / Int32ul,
            'still_unread_count' / Int32ul,
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0xa5d72105, 'update_dialog_filter_order')
    def struct_0xa5d72105(self):
        return ['order' / self.vector(Int32ul, 'order')]

    @constructor(0x9375341e, 'update_saved_gifs')
    def struct_0x9375341e(self):
        return []

    @constructor(0x7084a7be, 'update_contacts_reset')
    def struct_0x7084a7be(self):
        return []

    @constructor(0x635b4c09, 'update_channel')
    def struct_0x635b4c09(self):
        return ['channel_id' / Int64ul]

    @constructor(0x2f2ba99f, 'update_channel_web_page')
    def struct_0x2f2ba99f(self):
        return (
            'channel_id' / Int64ul,
            'webpage' / self.web_page_structures('webpage'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0xf2a71983, 'update_delete_scheduled_messages')
    def struct_0xf2a71983(self):
        return Struct(
            'sname' / Computed('update_delete_scheduled_messages'),
            'signature' / Hex(Const(0xf2a71983, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_sent_messages=1),
            'peer' / self.peer_structures('peer'),
            'messages' / self.vector(Int32ul, 'messages'),
            'sent_messages' / If(this.flags.has_sent_messages, self.vector(Int32ul, 'sent_messages')))

    @constructor(0xd29a27f4, 'update_channel_message_forwards')
    def struct_0xd29a27f4(self):
        return (
            'channel_id' / Int64ul,
            'id' / Int32ul,
            'forwards' / Int32ul)

    @constructor(0xc32d5b12, 'update_delete_channel_messages')
    def struct_0xc32d5b12(self):
        return (
            'channel_id' / Int64ul,
            'messages' / self.vector(Int32ul, 'messages'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x7d627683, 'update_sent_story_reaction')
    def struct_0x7d627683(self):
        return (
            'peer' / self.peer_structures('peer'),
            'story_id' / Int32ul,
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0xf227868c, 'update_user_photo')
    def struct_0xf227868c(self):
        return (
            'user_id' / Int64ul,
            'date' / TTimestamp,
            'photo' / self.user_profile_photo_structures('photo'),
            'previous' / TBool)

    @constructor(0x20529438, 'update_user')
    def struct_0x20529438(self):
        return ['user_id' / Int64ul]

    @constructor(0x17b7a20b, 'update_attach_menu_bots')
    def struct_0x17b7a20b(self):
        return []

    @constructor(0x3504914f, 'update_dialog_filters')
    def struct_0x3504914f(self):
        return []

    @constructor(0x30f443db, 'update_recent_emoji_statuses')
    def struct_0x30f443db(self):
        return []

    @constructor(0x75b3b798, 'stories_update_story')
    def struct_0x75b3b798(self):
        return (
            'peer' / self.peer_structures('peer'),
            'story' / self.story_item_structures('story'))

    @constructor(0x7063c3db, 'update_pending_join_requests')
    def struct_0x7063c3db(self):
        return (
            'peer' / self.peer_structures('peer'),
            'requests_pending' / Int32ul,
            'recent_requesters' / self.vector(Int64ul, 'recent_requesters'))

    @constructor(0x8e5e9873, 'update_dc_options')
    def struct_0x8e5e9873(self):
        return ['dc_options' / self.vector(self.struct_0x18b7a10d(), 'dc_options')]

    @constructor(0x1b3f4df7, 'update_edit_channel_message')
    def struct_0x1b3f4df7(self):
        return (
            'message' / self.message_structures('message'),
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x688a30aa, 'update_new_sticker_set')
    def struct_0x688a30aa(self):
        return ['stickerset' / self.messages_sticker_set_structures('stickerset')]

    @constructor(0x8216fba3, 'update_theme')
    def struct_0x8216fba3(self):
        return ['theme' / self.theme_structures('theme')]

    @constructor(0x46560264, 'update_lang_pack_too_long')
    def struct_0x46560264(self):
        return ['lang_code' / TString]

    @constructor(0x38fe25b7, 'update_encrypted_messages_read')
    def struct_0x38fe25b7(self):
        return (
            'chat_id' / Int32ul,
            'max_date' / TTimestamp,
            'date' / TTimestamp)

    @constructor(0x0bb2d201, 'update_sticker_sets_order')
    def struct_0x0bb2d201(self):
        return Struct(
            'sname' / Computed('update_sticker_sets_order'),
            'signature' / Hex(Const(0x0bb2d201, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=2),
            'order' / self.vector(Int64ul, 'order'))

    @constructor(0x922e6e10, 'update_read_channel_inbox')
    def struct_0x922e6e10(self):
        return Struct(
            'sname' / Computed('update_read_channel_inbox'),
            'signature' / Hex(Const(0x922e6e10, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_folder_id=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'channel_id' / Int64ul,
            'max_id' / Int32ul,
            'still_unread_count' / Int32ul,
            'pts' / Int32ul)

    @constructor(0xf8227181, 'update_read_messages_contents')
    def struct_0xf8227181(self):
        return Struct(
            'sname' / Computed('update_read_messages_contents'),
            'signature' / Hex(Const(0xf8227181, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_date=1),
            'messages' / self.vector(Int32ul, 'messages'),
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'date' / If(this.flags.has_date, TTimestamp))

    @constructor(0x07761198, 'update_chat_participants')
    def struct_0x07761198(self):
        return ['participants' / self.chat_participants_structures('participants')]

    @constructor(0x54c01850, 'update_chat_default_banned_rights')
    def struct_0x54c01850(self):
        return (
            'peer' / self.peer_structures('peer'),
            'default_banned_rights' / self.struct_0x9f120418(),
            'version' / Int32ul)

    @constructor(0x14b85813, 'bots_update_bot_menu_button')
    def struct_0x14b85813(self):
        return (
            'bot_id' / Int64ul,
            'button' / self.bot_menu_button_structures('button'))

    @constructor(0xfe198602, 'update_channel_pinned_topics')
    def struct_0xfe198602(self):
        return Struct(
            'sname' / Computed('update_channel_pinned_topics'),
            'signature' / Hex(Const(0xfe198602, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_order=1),
            'channel_id' / Int64ul,
            'order' / If(this.flags.has_order, self.vector(Int32ul, 'order')))

    @constructor(0x192efbe3, 'update_channel_pinned_topic')
    def struct_0x192efbe3(self):
        return Struct(
            'sname' / Computed('update_channel_pinned_topic'),
            'signature' / Hex(Const(0x192efbe3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'channel_id' / Int64ul,
            'topic_id' / Int32ul)

    @constructor(0x07b68920, 'update_channel_view_forum_as_messages')
    def struct_0x07b68920(self):
        return (
            'channel_id' / Int64ul,
            'enabled' / TBool)

    @constructor(0xae3f101d, 'update_peer_wallpaper')
    def struct_0xae3f101d(self):
        return Struct(
            'sname' / Computed('update_peer_wallpaper'),
            'signature' / Hex(Const(0xae3f101d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_wallpaper_overridden=2,
                                has_wallpaper=1),
            'peer' / self.peer_structures('peer'),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @constructor(0xaeaf9e74, 'update_saved_dialog_pinned')
    def struct_0xaeaf9e74(self):
        return Struct(
            'sname' / Computed('update_saved_dialog_pinned'),
            'signature' / Hex(Const(0xaeaf9e74, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'peer' / self.dialog_peer_structures('peer'))

    @constructor(0x686c85a6, 'update_pinned_saved_dialogs')
    def struct_0x686c85a6(self):
        return Struct(
            'sname' / Computed('update_pinned_saved_dialogs'),
            'signature' / Hex(Const(0x686c85a6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_order=1),
            'order' / If(this.flags.has_order, self.vector(self.dialog_peer_structures('order'), 'order')))

    @constructor(0xf9470ab2, 'update_quick_replies')
    def struct_0xf9470ab2(self):
        return ['quick_replies' / self.vector(self.struct_0x0697102b(), 'quick_replies')]

    @constructor(0xf53da717, 'update_new_quick_reply')
    def struct_0xf53da717(self):
        return ['quick_reply' / self.struct_0x0697102b()]

    @constructor(0x53e6f1ec, 'update_delete_quick_reply')
    def struct_0x53e6f1ec(self):
        return ['shortcut_id' / Int32ul]

    @constructor(0x3e050d0f, 'update_quick_reply_message')
    def struct_0x3e050d0f(self):
        return ['message' / self.message_structures('message')]

    @constructor(0x566fe7cd, 'update_delete_quick_reply_messages')
    def struct_0x566fe7cd(self):
        return (
            'shortcut_id' / Int32ul,
            'messages' / self.vector(Int32ul, 'messages'))

    @constructor(0x1824e40b, 'update_new_story_reaction')
    def struct_0x1824e40b(self):
        return (
            'story_id' / Int32ul,
            'peer' / self.peer_structures('peer'),
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0xdfd961f5, 'update_broadcast_revenue_transactions')
    def struct_0xdfd961f5(self):
        return (
            'peer' / self.peer_structures('peer'),
            'balances' / self.broadcast_revenue_balances_structures('balances'))

    @constructor(0x4e80a379, 'update_stars_balance')
    def struct_0x4e80a379(self):
        return ['balance' / self.struct_0xbbb6b4a3()]

    @constructor(0xa584b019, 'update_stars_revenue_status')
    def struct_0xa584b019(self):
        return (
            'peer' / self.peer_structures('peer'),
            'status' / self.struct_0xfebe5491())

    @constructor(0x283bd312, 'update_bot_purchased_paid_media')
    def struct_0x283bd312(self):
        return (
            'user_id' / Int64ul,
            'payload' / TString,
            'qts' / Int32ul)

    @constructor(0x51ca7aec, 'update_paid_reaction_privacy')
    def struct_0x51ca7aec(self):
        return ['is_private' / TBool]

    @constructor(0xa8ae3eb1, 'update_bot_subscription_expire')
    def struct_0xa8ae3eb1(self):
        return (
            'user_id' / Int64ul,
            'payload' / TString,
            'until_date' / TTimestamp,
            'qts' / Int32ul)

    @structures
    def update_structures(self, name):
        tag_map = {
            0x24f40e77: LazyBound(self.struct_0x24f40e77),
            0xd5a41724: LazyBound(self.struct_0xd5a41724),
            0xaca1657b: LazyBound(self.struct_0xaca1657b),
            0xbb9bb9a5: LazyBound(self.struct_0xbb9bb9a5),
            0xf89a6a4e: LazyBound(self.struct_0xf89a6a4e),
            0xa20db0e5: LazyBound(self.struct_0xa20db0e5),
            0x5bb98608: LazyBound(self.struct_0x5bb98608),
            0xf2ebdb4e: LazyBound(self.struct_0xf2ebdb4e),
            0x571d2742: LazyBound(self.struct_0x571d2742),
            0x1710f156: LazyBound(self.struct_0x1710f156),
            0xd6b19546: LazyBound(self.struct_0xd6b19546),
            0x2f2f21bf: LazyBound(self.struct_0x2f2f21bf),
            0x62ba04d9: LazyBound(self.struct_0x62ba04d9),
            0x1592b79d: LazyBound(self.struct_0x1592b79d),
            0x6e6fe51c: LazyBound(self.struct_0x6e6fe51c),
            0x6a7e7366: LazyBound(self.struct_0x6a7e7366),
            0x05492a13: LazyBound(self.struct_0x05492a13),
            0x4e90bfd6: LazyBound(self.struct_0x4e90bfd6),
            0xb75f99a9: LazyBound(self.struct_0xb75f99a9),
            0x8c88c923: LazyBound(self.struct_0x8c88c923),
            0x1bf335b9: LazyBound(self.struct_0x1bf335b9),
            0x31c24808: LazyBound(self.struct_0x31c24808),
            0x19360dc0: LazyBound(self.struct_0x19360dc0),
            0x1f2b0afd: LazyBound(self.struct_0x1f2b0afd),
            0x39a51dfb: LazyBound(self.struct_0x39a51dfb),
            0x12bcbd9a: LazyBound(self.struct_0x12bcbd9a),
            0x86fccf85: LazyBound(self.struct_0x86fccf85),
            0xe5bdf8de: LazyBound(self.struct_0xe5bdf8de),
            0x28373599: LazyBound(self.struct_0x28373599),
            0xf226ac08: LazyBound(self.struct_0xf226ac08),
            0x0b783982: LazyBound(self.struct_0x0b783982),
            0x4d712f2e: LazyBound(self.struct_0x4d712f2e),
            0x871fb939: LazyBound(self.struct_0x871fb939),
            0xbec268ef: LazyBound(self.struct_0xbec268ef),
            0x985d3abb: LazyBound(self.struct_0x985d3abb),
            0x695c9e7c: LazyBound(self.struct_0x695c9e7c),
            0xe32f3d77: LazyBound(self.struct_0xe32f3d77),
            0xfb4c496c: LazyBound(self.struct_0xfb4c496c),
            0xe40370a3: LazyBound(self.struct_0xe40370a3),
            0x6f7863f4: LazyBound(self.struct_0x6f7863f4),
            0x39c67432: LazyBound(self.struct_0x39c67432),
            0x7f891213: LazyBound(self.struct_0x7f891213),
            0xe511996d: LazyBound(self.struct_0xe511996d),
            0x3dda5451: LazyBound(self.struct_0x3dda5451),
            0x83487af0: LazyBound(self.struct_0x83487af0),
            0x564fe691: LazyBound(self.struct_0x564fe691),
            0xb4a2e88d: LazyBound(self.struct_0xb4a2e88d),
            0x97d64341: LazyBound(self.struct_0x97d64341),
            0x108d941f: LazyBound(self.struct_0x108d941f),
            0xc01e857f: LazyBound(self.struct_0xc01e857f),
            0xf74e932b: LazyBound(self.struct_0xf74e932b),
            0xebe46819: LazyBound(self.struct_0xebe46819),
            0x56022f4d: LazyBound(self.struct_0x56022f4d),
            0xb23fc698: LazyBound(self.struct_0xb23fc698),
            0xd7ca61a2: LazyBound(self.struct_0xd7ca61a2),
            0xea29055d: LazyBound(self.struct_0xea29055d),
            0xee3b272a: LazyBound(self.struct_0xee3b272a),
            0xa229dd06: LazyBound(self.struct_0xa229dd06),
            0xe16459c3: LazyBound(self.struct_0xe16459c3),
            0x1b49ec6d: LazyBound(self.struct_0x1b49ec6d),
            0x8951abef: LazyBound(self.struct_0x8951abef),
            0xa7848924: LazyBound(self.struct_0xa7848924),
            0x5e1b3cb8: LazyBound(self.struct_0x5e1b3cb8),
            0xab0f6b1e: LazyBound(self.struct_0xab0f6b1e),
            0x26ffde7d: LazyBound(self.struct_0x26ffde7d),
            0xebe07752: LazyBound(self.struct_0xebe07752),
            0xed85eab5: LazyBound(self.struct_0xed85eab5),
            0x2661bf09: LazyBound(self.struct_0x2661bf09),
            0x88617090: LazyBound(self.struct_0x88617090),
            0xfa0f3ca2: LazyBound(self.struct_0xfa0f3ca2),
            0x74d8be99: LazyBound(self.struct_0x74d8be99),
            0x2c084dc1: LazyBound(self.struct_0x2c084dc1),
            0x0084cd5a: LazyBound(self.struct_0x0084cd5a),
            0xb4afcfb0: LazyBound(self.struct_0xb4afcfb0),
            0x9a422c20: LazyBound(self.struct_0x9a422c20),
            0x9c974fdf: LazyBound(self.struct_0x9c974fdf),
            0xa5d72105: LazyBound(self.struct_0xa5d72105),
            0x9375341e: LazyBound(self.struct_0x9375341e),
            0x7084a7be: LazyBound(self.struct_0x7084a7be),
            0x635b4c09: LazyBound(self.struct_0x635b4c09),
            0x2f2ba99f: LazyBound(self.struct_0x2f2ba99f),
            0xf2a71983: LazyBound(self.struct_0xf2a71983),
            0xd29a27f4: LazyBound(self.struct_0xd29a27f4),
            0xc32d5b12: LazyBound(self.struct_0xc32d5b12),
            0x7d627683: LazyBound(self.struct_0x7d627683),
            0xf227868c: LazyBound(self.struct_0xf227868c),
            0x20529438: LazyBound(self.struct_0x20529438),
            0x17b7a20b: LazyBound(self.struct_0x17b7a20b),
            0x3504914f: LazyBound(self.struct_0x3504914f),
            0x30f443db: LazyBound(self.struct_0x30f443db),
            0x75b3b798: LazyBound(self.struct_0x75b3b798),
            0x7063c3db: LazyBound(self.struct_0x7063c3db),
            0x8e5e9873: LazyBound(self.struct_0x8e5e9873),
            0x1b3f4df7: LazyBound(self.struct_0x1b3f4df7),
            0x688a30aa: LazyBound(self.struct_0x688a30aa),
            0x8216fba3: LazyBound(self.struct_0x8216fba3),
            0x46560264: LazyBound(self.struct_0x46560264),
            0x38fe25b7: LazyBound(self.struct_0x38fe25b7),
            0x0bb2d201: LazyBound(self.struct_0x0bb2d201),
            0x922e6e10: LazyBound(self.struct_0x922e6e10),
            0xf8227181: LazyBound(self.struct_0xf8227181),
            0x07761198: LazyBound(self.struct_0x07761198),
            0x54c01850: LazyBound(self.struct_0x54c01850),
            0x14b85813: LazyBound(self.struct_0x14b85813),
            0xfe198602: LazyBound(self.struct_0xfe198602),
            0x192efbe3: LazyBound(self.struct_0x192efbe3),
            0x07b68920: LazyBound(self.struct_0x07b68920),
            0xae3f101d: LazyBound(self.struct_0xae3f101d),
            0xaeaf9e74: LazyBound(self.struct_0xaeaf9e74),
            0x686c85a6: LazyBound(self.struct_0x686c85a6),
            0xf9470ab2: LazyBound(self.struct_0xf9470ab2),
            0xf53da717: LazyBound(self.struct_0xf53da717),
            0x53e6f1ec: LazyBound(self.struct_0x53e6f1ec),
            0x3e050d0f: LazyBound(self.struct_0x3e050d0f),
            0x566fe7cd: LazyBound(self.struct_0x566fe7cd),
            0x1824e40b: LazyBound(self.struct_0x1824e40b),
            0xdfd961f5: LazyBound(self.struct_0xdfd961f5),
            0x4e80a379: LazyBound(self.struct_0x4e80a379),
            0xa584b019: LazyBound(self.struct_0xa584b019),
            0x283bd312: LazyBound(self.struct_0x283bd312),
            0x51ca7aec: LazyBound(self.struct_0x51ca7aec),
            0xa8ae3eb1: LazyBound(self.struct_0xa8ae3eb1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x3e11affb, 'updates_channel_difference_empty')
    def struct_0x3e11affb(self):
        return Struct(
            'sname' / Computed('updates_channel_difference_empty'),
            'signature' / Hex(Const(0x3e11affb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_final=1,
                                has_timeout=2),
            'pts' / Int32ul,
            'timeout' / If(this.flags.has_timeout, Int32ul))

    @constructor(0x2064674e, 'updates_channel_difference')
    def struct_0x2064674e(self):
        return Struct(
            'sname' / Computed('updates_channel_difference'),
            'signature' / Hex(Const(0x2064674e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_final=1,
                                has_timeout=2),
            'pts' / Int32ul,
            'timeout' / If(this.flags.has_timeout, Int32ul),
            'new_messages' / self.vector(self.message_structures('new_messages'), 'new_messages'),
            'other_updates' / self.vector(self.update_structures('other_updates'), 'other_updates'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xa4bcc6fe, 'updates_channel_difference_too_long')
    def struct_0xa4bcc6fe(self):
        return Struct(
            'sname' / Computed('updates_channel_difference_too_long'),
            'signature' / Hex(Const(0xa4bcc6fe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_final=1,
                                has_timeout=2),
            'timeout' / If(this.flags.has_timeout, Int32ul),
            'dialog' / self.dialog_structures('dialog'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def updates_channel_difference_structures(self, name):
        tag_map = {
            0x3e11affb: LazyBound(self.struct_0x3e11affb),
            0x2064674e: LazyBound(self.struct_0x2064674e),
            0xa4bcc6fe: LazyBound(self.struct_0xa4bcc6fe)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x00f49ca0, 'updates_difference')
    def struct_0x00f49ca0(self):
        return (
            'new_messages' / self.vector(self.message_structures('new_messages'), 'new_messages'),
            'new_encrypted_messages' / self.vector(self.encrypted_message_structures('new_encrypted_messages'), 'new_encrypted_messages'),
            'other_updates' / self.vector(self.update_structures('other_updates'), 'other_updates'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'state' / self.struct_0xa56c2a3e())

    @constructor(0xa8fb1981, 'updates_difference_slice')
    def struct_0xa8fb1981(self):
        return (
            'new_messages' / self.vector(self.message_structures('new_messages'), 'new_messages'),
            'new_encrypted_messages' / self.vector(self.encrypted_message_structures('new_encrypted_messages'), 'new_encrypted_messages'),
            'other_updates' / self.vector(self.update_structures('other_updates'), 'other_updates'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'intermediate_state' / self.struct_0xa56c2a3e())

    @constructor(0x4afe8f6d, 'updates_difference_too_long')
    def struct_0x4afe8f6d(self):
        return ['pts' / Int32ul]

    @constructor(0x5d75a138, 'updates_difference_empty')
    def struct_0x5d75a138(self):
        return (
            'date' / TTimestamp,
            'seq' / Int32ul)

    @structures
    def updates_difference_structures(self, name):
        tag_map = {
            0x00f49ca0: LazyBound(self.struct_0x00f49ca0),
            0xa8fb1981: LazyBound(self.struct_0xa8fb1981),
            0x4afe8f6d: LazyBound(self.struct_0x4afe8f6d),
            0x5d75a138: LazyBound(self.struct_0x5d75a138)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x74ae4240, 'updates')
    def struct_0x74ae4240(self):
        return (
            'updates' / self.vector(self.update_structures('updates'), 'updates'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'date' / TTimestamp,
            'seq' / Int32ul)

    @constructor(0x313bc7f8, 'update_short_message')
    def struct_0x313bc7f8(self):
        return Struct(
            'sname' / Computed('update_short_message'),
            'signature' / Hex(Const(0x313bc7f8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_entities=128,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'user_id' / Int64ul,
            'message' / TString,
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'date' / TTimestamp,
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x9015e101, 'update_short_sent_message')
    def struct_0x9015e101(self):
        return Struct(
            'sname' / Computed('update_short_sent_message'),
            'signature' / Hex(Const(0x9015e101, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                has_media=512,
                                has_entities=128,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'date' / TTimestamp,
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x78d4dec1, 'update_short')
    def struct_0x78d4dec1(self):
        return (
            'update' / self.update_structures('update'),
            'date' / TTimestamp)

    @constructor(0x4d6deea5, 'update_short_chat_message')
    def struct_0x4d6deea5(self):
        return Struct(
            'sname' / Computed('update_short_chat_message'),
            'signature' / Hex(Const(0x4d6deea5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_out=2,
                                is_mentioned=16,
                                is_media_unread=32,
                                is_silent=8192,
                                has_fwd_from=4,
                                has_via_bot_id=2048,
                                has_reply_to=8,
                                has_entities=128,
                                has_ttl_period=33554432),
            'id' / Int32ul,
            'from_id' / Int64ul,
            'chat_id' / Int64ul,
            'message' / TString,
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'date' / TTimestamp,
            'fwd_from' / If(this.flags.has_fwd_from, self.message_fwd_header_structures('fwd_from')),
            'via_bot_id' / If(this.flags.has_via_bot_id, Int64ul),
            'reply_to' / If(this.flags.has_reply_to, self.message_reply_header_structures('reply_to')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x725b04c3, 'updates_combined')
    def struct_0x725b04c3(self):
        return (
            'updates' / self.vector(self.update_structures('updates'), 'updates'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'date' / TTimestamp,
            'seq_start' / Int32ul,
            'seq' / Int32ul)

    @constructor(0xe317af7e, 'updates_too_long')
    def struct_0xe317af7e(self):
        return []

    @structures
    def updates_structures(self, name):
        tag_map = {
            0x74ae4240: LazyBound(self.struct_0x74ae4240),
            0x313bc7f8: LazyBound(self.struct_0x313bc7f8),
            0x9015e101: LazyBound(self.struct_0x9015e101),
            0x78d4dec1: LazyBound(self.struct_0x78d4dec1),
            0x4d6deea5: LazyBound(self.struct_0x4d6deea5),
            0x725b04c3: LazyBound(self.struct_0x725b04c3),
            0xe317af7e: LazyBound(self.struct_0xe317af7e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa99fca4f, 'upload_cdn_file')
    def struct_0xa99fca4f(self):
        return ['bytes' / TBytes]

    @constructor(0xeea8e46e, 'upload_cdn_file_reupload_needed')
    def struct_0xeea8e46e(self):
        return ['request_token' / TBytes]

    @structures
    def upload_cdn_file_structures(self, name):
        tag_map = {
            0xa99fca4f: LazyBound(self.struct_0xa99fca4f),
            0xeea8e46e: LazyBound(self.struct_0xeea8e46e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x096a18d5, 'upload_file')
    def struct_0x096a18d5(self):
        return (
            'type' / self.storage_file_type_structures('type'),
            'mtime' / Int32ul,
            'bytes' / TBytes)

    @constructor(0xf18cda44, 'upload_file_cdn_redirect')
    def struct_0xf18cda44(self):
        return (
            'dc_id' / Int32ul,
            'file_token' / TBytes,
            'encryption_key' / TBytes,
            'encryption_iv' / TBytes,
            'file_hashes' / self.vector(self.struct_0xf39b035c(), 'file_hashes'))

    @structures
    def upload_file_structures(self, name):
        tag_map = {
            0x096a18d5: LazyBound(self.struct_0x096a18d5),
            0xf18cda44: LazyBound(self.struct_0xf18cda44)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa9d6db1f, 'url_auth_result_default')
    def struct_0xa9d6db1f(self):
        return []

    @constructor(0x92d33a0e, 'url_auth_result_request')
    def struct_0x92d33a0e(self):
        return Struct(
            'sname' / Computed('url_auth_result_request'),
            'signature' / Hex(Const(0x92d33a0e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_request_write_access=1),
            'bot' / self.user_structures('bot'),
            'domain' / TString)

    @constructor(0x8f8c0e4e, 'url_auth_result_accepted')
    def struct_0x8f8c0e4e(self):
        return ['url' / TString]

    @structures
    def url_auth_result_structures(self, name):
        tag_map = {
            0xa9d6db1f: LazyBound(self.struct_0xa9d6db1f),
            0x92d33a0e: LazyBound(self.struct_0x92d33a0e),
            0x8f8c0e4e: LazyBound(self.struct_0x8f8c0e4e)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4d975bbc, 'user_full')
    def struct_0x4d975bbc(self):
        return Struct(
            'sname' / Computed('user_full'),
            'signature' / Hex(Const(0x4d975bbc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 is_sponsored_enabled=128,
                                 is_can_view_revenue=512,
                                 is_bot_can_manage_emoji_status=1024,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16,
                                 has_birthday=32,
                                 has_personal_channel_id=64,
                                 has_stargifts_count=256,
                                 has_starref_program=2048,
                                 has_bot_verification=4096),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()),
            'birthday' / If(this.flags2.has_birthday, self.struct_0x6c8e1e06()),
            'personal_channel_id' / If(this.flags2.has_personal_channel_id, Int64ul),
            'personal_channel_message' / If(this.flags2.has_personal_channel_id, Int32ul),
            'stargifts_count' / If(this.flags2.has_stargifts_count, Int32ul),
            'starref_program' / If(this.flags2.has_starref_program, self.struct_0xdd0c66f2()),
            'bot_verification' / If(this.flags2.has_bot_verification, self.struct_0xf93cd45c()))

    @constructor(0x979d2376, 'user_full_layer195')
    def struct_0x979d2376(self):
        return Struct(
            'sname' / Computed('user_full_layer195'),
            'signature' / Hex(Const(0x979d2376, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 is_sponsored_enabled=128,
                                 is_can_view_revenue=512,
                                 is_bot_can_manage_emoji_status=1024,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16,
                                 has_birthday=32,
                                 has_personal_channel_id=64,
                                 has_stargifts_count=256,
                                 has_starref_program=2048),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()),
            'birthday' / If(this.flags2.has_birthday, self.struct_0x6c8e1e06()),
            'personal_channel_id' / If(this.flags2.has_personal_channel_id, Int64ul),
            'personal_channel_message' / If(this.flags2.has_personal_channel_id, Int32ul),
            'stargifts_count' / If(this.flags2.has_stargifts_count, Int32ul),
            'starref_program' / If(this.flags2.has_starref_program, self.struct_0xdd0c66f2()))

    @constructor(0x1f58e369, 'user_full_layer194')
    def struct_0x1f58e369(self):
        return Struct(
            'sname' / Computed('user_full_layer194'),
            'signature' / Hex(Const(0x1f58e369, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 is_sponsored_enabled=128,
                                 is_can_view_revenue=512,
                                 is_bot_can_manage_emoji_status=1024,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16,
                                 has_birthday=32,
                                 has_personal_channel_id=64,
                                 has_stargifts_count=256),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()),
            'birthday' / If(this.flags2.has_birthday, self.struct_0x6c8e1e06()),
            'personal_channel_id' / If(this.flags2.has_personal_channel_id, Int64ul),
            'personal_channel_message' / If(this.flags2.has_personal_channel_id, Int32ul),
            'stargifts_count' / If(this.flags2.has_stargifts_count, Int32ul))

    @constructor(0xcc997720, 'user_full_layer188')
    def struct_0xcc997720(self):
        return Struct(
            'sname' / Computed('user_full_layer188'),
            'signature' / Hex(Const(0xcc997720, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 is_sponsored_enabled=128,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16,
                                 has_birthday=32,
                                 has_personal_channel_id=64),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()),
            'birthday' / If(this.flags2.has_birthday, self.struct_0x6c8e1e06()),
            'personal_channel_id' / If(this.flags2.has_personal_channel_id, Int64ul),
            'personal_channel_message' / If(this.flags2.has_personal_channel_id, Int32ul))

    @constructor(0xecdadceb, 'user_full_layer176_3')
    def struct_0xecdadceb(self):
        return Struct(
            'sname' / Computed('user_full_layer176_3'),
            'signature' / Hex(Const(0xecdadceb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16,
                                 has_birthday=32),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()),
            'birthday' / If(this.flags2.has_birthday, self.struct_0x6c8e1e06()))

    @constructor(0x670bbc9c, 'user_full_layer176_2')
    def struct_0x670bbc9c(self):
        return Struct(
            'sname' / Computed('user_full_layer176_2'),
            'signature' / Hex(Const(0x670bbc9c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8,
                                 has_business_intro=16),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()),
            'business_intro' / If(this.flags2.has_business_intro, self.struct_0x5a0a066d()))

    @constructor(0x22ff3e85, 'user_full_layer176')
    def struct_0x22ff3e85(self):
        return Struct(
            'sname' / Computed('user_full_layer176'),
            'signature' / Hex(Const(0x22ff3e85, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'flags2' / FlagsEnum(Int32ul,
                                 has_business_work_hours=1,
                                 has_business_location=2,
                                 has_business_greeting_message=4,
                                 has_business_away_message=8),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')),
            'business_work_hours' / If(this.flags2.has_business_work_hours, self.struct_0x8c92b098()),
            'business_location' / If(this.flags2.has_business_location, self.struct_0xac5c1af7()),
            'business_greeting_message' / If(this.flags2.has_business_greeting_message, self.struct_0xe519abab()),
            'business_away_message' / If(this.flags2.has_business_away_message, self.struct_0xef156a5c()))

    @constructor(0xb9b12c6c, 'user_full_layer175')
    def struct_0xb9b12c6c(self):
        return Struct(
            'sname' / Computed('user_full_layer175'),
            'signature' / Hex(Const(0xb9b12c6c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                is_wallpaper_overridden=268435456,
                                is_contact_require_premium=536870912,
                                is_read_dates_private=1073741824,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')))

    @constructor(0x4fe1cc86, 'user_full_layer162')
    def struct_0x4fe1cc86(self):
        return Struct(
            'sname' / Computed('user_full_layer162'),
            'signature' / Hex(Const(0x4fe1cc86, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                is_stories_pinned_available=67108864,
                                is_blocked_my_stories_from=134217728,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216,
                                has_stories=33554432),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')),
            'stories' / If(this.flags.has_stories, self.stories_peer_stories_structures('stories')))

    @constructor(0x93eadb53, 'user_full_layer159')
    def struct_0x93eadb53(self):
        return Struct(
            'sname' / Computed('user_full_layer159'),
            'signature' / Hex(Const(0x93eadb53, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288,
                                has_wallpaper=16777216),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')),
            'wallpaper' / If(this.flags.has_wallpaper, self.wall_paper_structures('wallpaper')))

    @constructor(0xf8d32aed, 'user_full_layer156')
    def struct_0xf8d32aed(self):
        return Struct(
            'sname' / Computed('user_full_layer156'),
            'signature' / Hex(Const(0xf8d32aed, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                is_translations_disabled=8388608,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_fallback_photo=4194304,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'fallback_photo' / If(this.flags.has_fallback_photo, self.photo_structures('fallback_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')))

    @constructor(0xec6d41e3, 'user_full_layer150_rev2')
    def struct_0xec6d41e3(self):
        return Struct(
            'sname' / Computed('user_full_layer150_rev2'),
            'signature' / Hex(Const(0xec6d41e3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                has_about=2,
                                has_personal_photo=2097152,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'personal_photo' / If(this.flags.has_personal_photo, self.photo_structures('personal_photo')),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')))

    @constructor(0xc4b1fc3f, 'user_full_layer150')
    def struct_0xc4b1fc3f(self):
        return Struct(
            'sname' / Computed('user_full_layer150'),
            'signature' / Hex(Const(0xc4b1fc3f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                is_voice_messages_forbidden=1048576,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144,
                                has_premium_gifts=524288),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()),
            'premium_gifts' / If(this.flags.has_premium_gifts, self.vector(self.struct_0x74c34319(), 'premium_gifts')))

    @constructor(0x8c72ea81, 'user_full_layer143')
    def struct_0x8c72ea81(self):
        return Struct(
            'sname' / Computed('user_full_layer143'),
            'signature' / Hex(Const(0x8c72ea81, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536,
                                has_bot_group_admin_rights=131072,
                                has_bot_broadcast_admin_rights=262144),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString),
            'bot_group_admin_rights' / If(this.flags.has_bot_group_admin_rights, self.struct_0x5fb224d5()),
            'bot_broadcast_admin_rights' / If(this.flags.has_bot_broadcast_admin_rights, self.struct_0x5fb224d5()))

    @constructor(0xcf366521, 'user_full_layer139')
    def struct_0xcf366521(self):
        return Struct(
            'sname' / Computed('user_full_layer139'),
            'signature' / Hex(Const(0xcf366521, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768,
                                has_private_forward_name=65536),
            'id' / Int64ul,
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString),
            'private_forward_name' / If(this.flags.has_private_forward_name, TString))

    @constructor(0xd697ff05, 'user_full_layer134')
    def struct_0xd697ff05(self):
        return Struct(
            'sname' / Computed('user_full_layer134'),
            'signature' / Hex(Const(0xd697ff05, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384,
                                has_theme_emoticon=32768),
            'user' / self.user_structures('user'),
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul),
            'theme_emoticon' / If(this.flags.has_theme_emoticon, TString))

    @constructor(0x139a9a77, 'user_full_layer131')
    def struct_0x139a9a77(self):
        return Struct(
            'sname' / Computed('user_full_layer131'),
            'signature' / Hex(Const(0x139a9a77, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                is_video_calls_available=8192,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048,
                                has_ttl_period=16384),
            'user' / self.user_structures('user'),
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x745559cc, 'user_full_layer101')
    def struct_0x745559cc(self):
        return Struct(
            'sname' / Computed('user_full_layer101'),
            'signature' / Hex(Const(0x745559cc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048),
            'user' / self.user_structures('user'),
            'about' / If(this.flags.has_about, TString),
            'link' / self.struct_0x3ace484c(),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul))

    @constructor(0x8ea4a881, 'user_full_layer98')
    def struct_0x8ea4a881(self):
        return Struct(
            'sname' / Computed('user_full_layer98'),
            'signature' / Hex(Const(0x8ea4a881, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64),
            'user' / self.user_structures('user'),
            'about' / If(this.flags.has_about, TString),
            'link' / self.struct_0x3ace484c(),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul)

    @constructor(0xedf17c12, 'user_full_layer123')
    def struct_0xedf17c12(self):
        return Struct(
            'sname' / Computed('user_full_layer123'),
            'signature' / Hex(Const(0xedf17c12, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blocked=1,
                                is_phone_calls_available=16,
                                is_phone_calls_private=32,
                                is_can_pin_message=128,
                                has_scheduled=4096,
                                has_about=2,
                                has_profile_photo=4,
                                has_bot_info=8,
                                has_pinned_msg_id=64,
                                has_folder_id=2048),
            'user' / self.user_structures('user'),
            'about' / If(this.flags.has_about, TString),
            'settings' / self.peer_settings_structures('settings'),
            'profile_photo' / If(this.flags.has_profile_photo, self.photo_structures('profile_photo')),
            'notify_settings' / self.peer_notify_settings_structures('notify_settings'),
            'bot_info' / If(this.flags.has_bot_info, self.bot_info_structures('bot_info')),
            'pinned_msg_id' / If(this.flags.has_pinned_msg_id, Int32ul),
            'common_chats_count' / Int32ul,
            'folder_id' / If(this.flags.has_folder_id, Int32ul))

    @structures
    def user_full_structures(self, name):
        tag_map = {
            0x4d975bbc: LazyBound(self.struct_0x4d975bbc),
            0x979d2376: LazyBound(self.struct_0x979d2376),
            0x1f58e369: LazyBound(self.struct_0x1f58e369),
            0xcc997720: LazyBound(self.struct_0xcc997720),
            0xecdadceb: LazyBound(self.struct_0xecdadceb),
            0x670bbc9c: LazyBound(self.struct_0x670bbc9c),
            0x22ff3e85: LazyBound(self.struct_0x22ff3e85),
            0xb9b12c6c: LazyBound(self.struct_0xb9b12c6c),
            0x4fe1cc86: LazyBound(self.struct_0x4fe1cc86),
            0x93eadb53: LazyBound(self.struct_0x93eadb53),
            0xf8d32aed: LazyBound(self.struct_0xf8d32aed),
            0xec6d41e3: LazyBound(self.struct_0xec6d41e3),
            0xc4b1fc3f: LazyBound(self.struct_0xc4b1fc3f),
            0x8c72ea81: LazyBound(self.struct_0x8c72ea81),
            0xcf366521: LazyBound(self.struct_0xcf366521),
            0xd697ff05: LazyBound(self.struct_0xd697ff05),
            0x139a9a77: LazyBound(self.struct_0x139a9a77),
            0x745559cc: LazyBound(self.struct_0x745559cc),
            0x8ea4a881: LazyBound(self.struct_0x8ea4a881),
            0xedf17c12: LazyBound(self.struct_0xedf17c12)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x69d3ab26, 'user_profile_photo_layer126')
    def struct_0x69d3ab26(self):
        return Struct(
            'sname' / Computed('user_profile_photo_layer126'),
            'signature' / Hex(Const(0x69d3ab26, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1),
            'photo_id' / Int64ul,
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'dc_id' / Int32ul)

    @constructor(0xecd75d8c, 'user_profile_photo_layer115')
    def struct_0xecd75d8c(self):
        return (
            'photo_id' / Int64ul,
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'dc_id' / Int32ul)

    @constructor(0x4f11bae1, 'user_profile_photo_empty')
    def struct_0x4f11bae1(self):
        return []

    @constructor(0xd559d8c8, 'user_profile_photo_layer97')
    def struct_0xd559d8c8(self):
        return (
            'photo_id' / Int64ul,
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'))

    @constructor(0x990d1493, 'user_profile_photo_old')
    def struct_0x990d1493(self):
        return (
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'))

    @constructor(0xcc656077, 'user_profile_photo_layer127')
    def struct_0xcc656077(self):
        return Struct(
            'sname' / Computed('user_profile_photo_layer127'),
            'signature' / Hex(Const(0xcc656077, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1,
                                has_stripped_thumb=2),
            'photo_id' / Int64ul,
            'photo_small' / self.file_location_structures('photo_small'),
            'photo_big' / self.file_location_structures('photo_big'),
            'stripped_thumb' / If(this.flags.has_stripped_thumb, TBytes),
            'dc_id' / Int32ul)

    @constructor(0x82d1f706, 'user_profile_photo')
    def struct_0x82d1f706(self):
        return Struct(
            'sname' / Computed('user_profile_photo'),
            'signature' / Hex(Const(0x82d1f706, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video=1,
                                is_personal=4,
                                has_stripped_thumb=2),
            'photo_id' / Int64ul,
            'stripped_thumb' / If(this.flags.has_stripped_thumb, TBytes),
            'dc_id' / Int32ul)

    @structures
    def user_profile_photo_structures(self, name):
        tag_map = {
            0x69d3ab26: LazyBound(self.struct_0x69d3ab26),
            0xecd75d8c: LazyBound(self.struct_0xecd75d8c),
            0x4f11bae1: LazyBound(self.struct_0x4f11bae1),
            0xd559d8c8: LazyBound(self.struct_0xd559d8c8),
            0x990d1493: LazyBound(self.struct_0x990d1493),
            0xcc656077: LazyBound(self.struct_0xcc656077),
            0x82d1f706: LazyBound(self.struct_0x82d1f706)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x008c703f, 'user_status_offline')
    def struct_0x008c703f(self):
        return ['expires' / Int32ul]

    @constructor(0x541a1d1a, 'user_status_last_week')
    def struct_0x541a1d1a(self):
        return Struct(
            'sname' / Computed('user_status_last_week'),
            'signature' / Hex(Const(0x541a1d1a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_by_me=1))

    @constructor(0x07bf09fc, 'user_status_last_week_layer171')
    def struct_0x07bf09fc(self):
        return []

    @constructor(0x09d05049, 'user_status_empty')
    def struct_0x09d05049(self):
        return []

    @constructor(0x65899777, 'user_status_last_month')
    def struct_0x65899777(self):
        return Struct(
            'sname' / Computed('user_status_last_month'),
            'signature' / Hex(Const(0x65899777, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_by_me=1))

    @constructor(0x77ebc742, 'user_status_last_month_layer171')
    def struct_0x77ebc742(self):
        return []

    @constructor(0xedb93949, 'user_status_online')
    def struct_0xedb93949(self):
        return ['expires' / Int32ul]

    @constructor(0x7b197dc8, 'user_status_recently')
    def struct_0x7b197dc8(self):
        return Struct(
            'sname' / Computed('user_status_recently'),
            'signature' / Hex(Const(0x7b197dc8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_by_me=1))

    @constructor(0xe26f42f1, 'user_status_recently_layer171')
    def struct_0xe26f42f1(self):
        return []

    @constructor(0xcf7d64b1, 'user_status_hidden')
    def struct_0xcf7d64b1(self):
        return []

    @structures
    def user_status_structures(self, name):
        tag_map = {
            0x008c703f: LazyBound(self.struct_0x008c703f),
            0x541a1d1a: LazyBound(self.struct_0x541a1d1a),
            0x07bf09fc: LazyBound(self.struct_0x07bf09fc),
            0x09d05049: LazyBound(self.struct_0x09d05049),
            0x65899777: LazyBound(self.struct_0x65899777),
            0x77ebc742: LazyBound(self.struct_0x77ebc742),
            0xedb93949: LazyBound(self.struct_0xedb93949),
            0x7b197dc8: LazyBound(self.struct_0x7b197dc8),
            0xe26f42f1: LazyBound(self.struct_0xe26f42f1),
            0xcf7d64b1: LazyBound(self.struct_0xcf7d64b1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x4b46c37e, 'user')
    def struct_0x4b46c37e(self):
        return Struct(
            'sname' / Computed('user'),
            'signature' / Hex(Const(0x4b46c37e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 is_bot_has_main_app=8192,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512,
                                 has_bot_active_users=4096,
                                 has_bot_verification_icon=16384),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'bot_active_users' / If(this.flags2.has_bot_active_users, Int32ul),
            'bot_verification_icon' / If(this.flags2.has_bot_verification_icon, Int64ul))

    @constructor(0x59476956, 'user_layer196_2')
    def struct_0x59476956(self):
        return Struct(
            'sname' / Computed('user_layer196_2'),
            'signature' / Hex(Const(0x59476956, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 is_bot_has_main_app=8192,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512,
                                 has_bot_active_users=4096,
                                 has_bot_verification_icon=16384),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'bot_active_users' / If(this.flags2.has_bot_active_users, Int32ul),
            'bot_verification_icon' / If(this.flags2.has_bot_verification_icon, Int64ul))

    @constructor(0x685f5e21, 'user_layer196_1')
    def struct_0x685f5e21(self):
        return Struct(
            'sname' / Computed('user_layer196_1'),
            'signature' / Hex(Const(0x685f5e21, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 is_bot_has_main_app=8192,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512,
                                 has_bot_active_users=4096,
                                 has_bot_verification_icon=16384),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'bot_active_users' / If(this.flags2.has_bot_active_users, Int32ul),
            'bot_verification_icon' / If(this.flags2.has_bot_verification_icon, Int64ul))

    @constructor(0x83314fca, 'user_layer195')
    def struct_0x83314fca(self):
        return Struct(
            'sname' / Computed('user_layer195'),
            'signature' / Hex(Const(0x83314fca, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 is_bot_has_main_app=8192,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512,
                                 has_bot_active_users=4096),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'bot_active_users' / If(this.flags2.has_bot_active_users, Int32ul))

    @constructor(0x4fe9cce0, 'user_layer185')
    def struct_0x4fe9cce0(self):
        return Struct(
            'sname' / Computed('user_layer185'),
            'signature' / Hex(Const(0x4fe9cce0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512,
                                 has_bot_active_users=4096),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()),
            'bot_active_users' / If(this.flags2.has_bot_active_users, Int32ul))

    @constructor(0x215c4438, 'user_layer184')
    def struct_0x215c4438(self):
        return Struct(
            'sname' / Computed('user_layer184'),
            'signature' / Hex(Const(0x215c4438, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 is_contact_require_premium=1024,
                                 is_bot_business=2048,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=256,
                                 has_profile_color=512),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, self.struct_0xb54b5acf()),
            'profile_color' / If(this.flags2.has_profile_color, self.struct_0xb54b5acf()))

    @constructor(0xeb602f25, 'user_layer166')
    def struct_0xeb602f25(self):
        return Struct(
            'sname' / Computed('user_layer166'),
            'signature' / Hex(Const(0xeb602f25, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 has_usernames=1,
                                 has_stories_max_id=32,
                                 has_color=128,
                                 has_background_emoji_id=64),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul),
            'color' / If(this.flags2.has_color, Int32ul),
            'background_emoji_id' / If(this.flags2.has_background_emoji_id, Int64ul))

    @constructor(0xcab35e18, 'user_contact_old2')
    def struct_0xcab35e18(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString,
            'access_hash' / Int64ul,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0xf2fb8319, 'user_contact_old')
    def struct_0xf2fb8319(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'access_hash' / Int64ul,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0xd3bc4b7a, 'user_empty')
    def struct_0xd3bc4b7a(self):
        return ['id' / Int64ul]

    @constructor(0xabb5f120, 'user_layer165')
    def struct_0xabb5f120(self):
        return Struct(
            'sname' / Computed('user_layer165'),
            'signature' / Hex(Const(0xabb5f120, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=8,
                                 is_stories_unavailable=16,
                                 has_usernames=1,
                                 has_stories_max_id=32),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')),
            'stories_max_id' / If(this.flags2.has_stories_max_id, Int32ul))

    @constructor(0x8f97c628, 'user_layer159')
    def struct_0x8f97c628(self):
        return Struct(
            'sname' / Computed('user_layer159'),
            'signature' / Hex(Const(0x8f97c628, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_username=8,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'flags2' / FlagsEnum(Int32ul,
                                 is_bot_can_edit=2,
                                 is_close_friend=4,
                                 is_stories_hidden=32,
                                 has_usernames=1),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')),
            'usernames' / If(this.flags2.has_usernames, self.vector(self.struct_0xb4073647(), 'usernames')))

    @constructor(0x5d99adee, 'user_layer147')
    def struct_0x5d99adee(self):
        return Struct(
            'sname' / Computed('user_layer147'),
            'signature' / Hex(Const(0x5d99adee, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                is_attach_menu_enabled=536870912,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304,
                                has_emoji_status=1073741824),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString),
            'emoji_status' / If(this.flags.has_emoji_status, self.emoji_status_structures('emoji_status')))

    @constructor(0x3ff6ecb0, 'user_layer144')
    def struct_0x3ff6ecb0(self):
        return Struct(
            'sname' / Computed('user_layer144'),
            'signature' / Hex(Const(0x3ff6ecb0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                is_bot_attach_menu=134217728,
                                is_premium=268435456,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304),
            'id' / Int64ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString))

    @constructor(0x938458c1, 'user_layer131')
    def struct_0x938458c1(self):
        return Struct(
            'sname' / Computed('user_layer131'),
            'signature' / Hex(Const(0x938458c1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                is_apply_min_photo=33554432,
                                is_fake=67108864,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, self.vector(self.restriction_reason_structures('restriction_reason'), 'restriction_reason')),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString))

    @constructor(0x2e13f4c3, 'user_layer104')
    def struct_0x2e13f4c3(self):
        return Struct(
            'sname' / Computed('user_layer104'),
            'signature' / Hex(Const(0x2e13f4c3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                is_support=8388608,
                                is_scam=16777216,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288,
                                has_lang_code=4194304),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString),
            'lang_code' / If(this.flags.has_lang_code, TString))

    @constructor(0x720535ec, 'user_self_old')
    def struct_0x720535ec(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'),
            'inactive' / TBool)

    @constructor(0x1c60e608, 'user_self_old3')
    def struct_0x1c60e608(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0xd6016d7a, 'user_deleted_old2')
    def struct_0xd6016d7a(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString)

    @constructor(0x200250ba, 'user_empty_layer131')
    def struct_0x200250ba(self):
        return ['id' / Int32ul]

    @constructor(0x22e8ceb0, 'user_request_old')
    def struct_0x22e8ceb0(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'access_hash' / Int64ul,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0x5214c89d, 'user_foreign_old')
    def struct_0x5214c89d(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'access_hash' / Int64ul,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0x075cf7a8, 'user_foreign_old2')
    def struct_0x075cf7a8(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString,
            'access_hash' / Int64ul,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0xd9ccc4ef, 'user_request_old2')
    def struct_0xd9ccc4ef(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString,
            'access_hash' / Int64ul,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'))

    @constructor(0xb29ad7cc, 'user_deleted_old')
    def struct_0xb29ad7cc(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString)

    @constructor(0xd10d979a, 'user_layer65')
    def struct_0xd10d979a(self):
        return Struct(
            'sname' / Computed('user_layer65'),
            'signature' / Hex(Const(0xd10d979a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_restricted=262144,
                                is_min=1048576,
                                is_bot_inline_geo=2097152,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64,
                                has_bot_inline_placeholder=524288),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul),
            'restriction_reason' / If(this.flags.is_restricted, TString),
            'bot_inline_placeholder' / If(this.flags.has_bot_inline_placeholder, TString))

    @constructor(0x22e49072, 'user_old')
    def struct_0x22e49072(self):
        return Struct(
            'sname' / Computed('user_old'),
            'signature' / Hex(Const(0x22e49072, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_self=1024,
                                is_contact=2048,
                                is_mutual_contact=4096,
                                is_deleted=8192,
                                is_bot=16384,
                                is_bot_chat_history=32768,
                                is_bot_nochats=65536,
                                is_verified=131072,
                                is_explicit_content=262144,
                                has_access_hash=1,
                                has_first_name=2,
                                has_last_name=4,
                                has_username=8,
                                has_phone=16,
                                has_photo=32,
                                has_status=64),
            'id' / Int32ul,
            'access_hash' / If(this.flags.has_access_hash, Int64ul),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'username' / If(this.flags.has_username, TString),
            'phone' / If(this.flags.has_phone, TString),
            'photo' / If(this.flags.has_photo, self.user_profile_photo_structures('photo')),
            'status' / If(this.flags.has_status, self.user_status_structures('status')),
            'bot_info_version' / If(this.flags.is_bot, Int32ul))

    @constructor(0x7007b451, 'user_self_old2')
    def struct_0x7007b451(self):
        return (
            'id' / Int32ul,
            'first_name' / TString,
            'last_name' / TString,
            'username' / TString,
            'phone' / TString,
            'photo' / self.user_profile_photo_structures('photo'),
            'status' / self.user_status_structures('status'),
            'inactive' / TBool)

    @structures
    def user_structures(self, name):
        tag_map = {
            0x4b46c37e: LazyBound(self.struct_0x4b46c37e),
            0x59476956: LazyBound(self.struct_0x59476956),
            0x685f5e21: LazyBound(self.struct_0x685f5e21),
            0x83314fca: LazyBound(self.struct_0x83314fca),
            0x4fe9cce0: LazyBound(self.struct_0x4fe9cce0),
            0x215c4438: LazyBound(self.struct_0x215c4438),
            0xeb602f25: LazyBound(self.struct_0xeb602f25),
            0xcab35e18: LazyBound(self.struct_0xcab35e18),
            0xf2fb8319: LazyBound(self.struct_0xf2fb8319),
            0xd3bc4b7a: LazyBound(self.struct_0xd3bc4b7a),
            0xabb5f120: LazyBound(self.struct_0xabb5f120),
            0x8f97c628: LazyBound(self.struct_0x8f97c628),
            0x5d99adee: LazyBound(self.struct_0x5d99adee),
            0x3ff6ecb0: LazyBound(self.struct_0x3ff6ecb0),
            0x938458c1: LazyBound(self.struct_0x938458c1),
            0x2e13f4c3: LazyBound(self.struct_0x2e13f4c3),
            0x720535ec: LazyBound(self.struct_0x720535ec),
            0x1c60e608: LazyBound(self.struct_0x1c60e608),
            0xd6016d7a: LazyBound(self.struct_0xd6016d7a),
            0x200250ba: LazyBound(self.struct_0x200250ba),
            0x22e8ceb0: LazyBound(self.struct_0x22e8ceb0),
            0x5214c89d: LazyBound(self.struct_0x5214c89d),
            0x075cf7a8: LazyBound(self.struct_0x075cf7a8),
            0xd9ccc4ef: LazyBound(self.struct_0xd9ccc4ef),
            0xb29ad7cc: LazyBound(self.struct_0xb29ad7cc),
            0xd10d979a: LazyBound(self.struct_0xd10d979a),
            0x22e49072: LazyBound(self.struct_0x22e49072),
            0x7007b451: LazyBound(self.struct_0x7007b451)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x62d706b8, 'users')
    def struct_0x62d706b8(self):
        return ['users' / self.vector(self.user_structures('users'), 'users')]

    @constructor(0x315a4974, 'users_slice')
    def struct_0x315a4974(self):
        return (
            'count' / Int32ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @structures
    def users_structures(self, name):
        tag_map = {
            0x62d706b8: LazyBound(self.struct_0x62d706b8),
            0x315a4974: LazyBound(self.struct_0x315a4974)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x435bb987, 'video_size_layer115')
    def struct_0x435bb987(self):
        return (
            'type' / TString,
            'location' / self.file_location_structures('location'),
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul)

    @constructor(0xe831c556, 'video_size_layer127')
    def struct_0xe831c556(self):
        return Struct(
            'sname' / Computed('video_size_layer127'),
            'signature' / Hex(Const(0xe831c556, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video_start_ts=1),
            'type' / TString,
            'location' / self.file_location_structures('location'),
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'video_start_ts' / If(this.flags.has_video_start_ts, Double))

    @constructor(0xde33b094, 'video_size')
    def struct_0xde33b094(self):
        return Struct(
            'sname' / Computed('video_size'),
            'signature' / Hex(Const(0xde33b094, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_video_start_ts=1),
            'type' / TString,
            'w' / Int32ul,
            'h' / Int32ul,
            'size' / Int32ul,
            'video_start_ts' / If(this.flags.has_video_start_ts, Double))

    @constructor(0x0da082fe, 'video_size_sticker_markup')
    def struct_0x0da082fe(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'sticker_id' / Int64ul,
            'background_colors' / self.vector(Int32ul, 'background_colors'))

    @constructor(0xf85c413c, 'video_size_emoji_markup')
    def struct_0xf85c413c(self):
        return (
            'emoji_id' / Int64ul,
            'background_colors' / self.vector(Int32ul, 'background_colors'))

    @structures
    def video_size_structures(self, name):
        tag_map = {
            0x435bb987: LazyBound(self.struct_0x435bb987),
            0xe831c556: LazyBound(self.struct_0xe831c556),
            0xde33b094: LazyBound(self.struct_0xde33b094),
            0x0da082fe: LazyBound(self.struct_0x0da082fe),
            0xf85c413c: LazyBound(self.struct_0xf85c413c)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xee9f4a4d, 'video_old3')
    def struct_0xee9f4a4d(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0xf72887d3, 'video_layer45')
    def struct_0xf72887d3(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'duration' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0x55555553, 'video_encrypted')
    def struct_0x55555553(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'caption' / TString,
            'duration' / Int32ul,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul,
            'key' / TBytes,
            'iv' / TBytes)

    @constructor(0x5a04a49f, 'video_old')
    def struct_0x5a04a49f(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'caption' / TString,
            'duration' / Int32ul,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0x388fa391, 'video_old2')
    def struct_0x388fa391(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'user_id' / Int32ul,
            'date' / TTimestamp,
            'caption' / TString,
            'duration' / Int32ul,
            'mime_type' / TString,
            'size' / Int32ul,
            'thumb' / self.photo_size_structures('thumb'),
            'dc_id' / Int32ul,
            'w' / Int32ul,
            'h' / Int32ul)

    @constructor(0xc10658a8, 'video_empty_layer45')
    def struct_0xc10658a8(self):
        return ['id' / Int64ul]

    @structures
    def video_structures(self, name):
        tag_map = {
            0xee9f4a4d: LazyBound(self.struct_0xee9f4a4d),
            0xf72887d3: LazyBound(self.struct_0xf72887d3),
            0x55555553: LazyBound(self.struct_0x55555553),
            0x5a04a49f: LazyBound(self.struct_0x5a04a49f),
            0x388fa391: LazyBound(self.struct_0x388fa391),
            0xc10658a8: LazyBound(self.struct_0xc10658a8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa12f40b8, 'wall_paper_settings_layer106')
    def struct_0xa12f40b8(self):
        return Struct(
            'sname' / Computed('wall_paper_settings_layer106'),
            'signature' / Hex(Const(0xa12f40b8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blur=2,
                                is_motion=4,
                                has_background_color=1,
                                has_intensity=8),
            'background_color' / If(this.flags.has_background_color, Int32ul),
            'intensity' / If(this.flags.has_intensity, Int32ul))

    @constructor(0x05086cf8, 'wall_paper_settings_layer128')
    def struct_0x05086cf8(self):
        return Struct(
            'sname' / Computed('wall_paper_settings_layer128'),
            'signature' / Hex(Const(0x05086cf8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blur=2,
                                is_motion=4,
                                has_background_color=1,
                                has_second_background_color=16,
                                has_intensity=8),
            'background_color' / If(this.flags.has_background_color, Int32ul),
            'second_background_color' / If(this.flags.has_second_background_color, Int32ul),
            'intensity' / If(this.flags.has_intensity, Int32ul),
            'rotation' / If(this.flags.has_second_background_color, Int32ul))

    @constructor(0x1dc1bca4, 'wall_paper_settings_layer167')
    def struct_0x1dc1bca4(self):
        return Struct(
            'sname' / Computed('wall_paper_settings_layer167'),
            'signature' / Hex(Const(0x1dc1bca4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blur=2,
                                is_motion=4,
                                has_background_color=1,
                                has_second_background_color=16,
                                has_third_background_color=32,
                                has_fourth_background_color=64,
                                has_intensity=8),
            'background_color' / If(this.flags.has_background_color, Int32ul),
            'second_background_color' / If(this.flags.has_second_background_color, Int32ul),
            'third_background_color' / If(this.flags.has_third_background_color, Int32ul),
            'fourth_background_color' / If(this.flags.has_fourth_background_color, Int32ul),
            'intensity' / If(this.flags.has_intensity, Int32ul),
            'rotation' / If(this.flags.has_second_background_color, Int32ul))

    @constructor(0x372efcd0, 'wall_paper_settings')
    def struct_0x372efcd0(self):
        return Struct(
            'sname' / Computed('wall_paper_settings'),
            'signature' / Hex(Const(0x372efcd0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_blur=2,
                                is_motion=4,
                                has_background_color=1,
                                has_second_background_color=16,
                                has_third_background_color=32,
                                has_fourth_background_color=64,
                                has_intensity=8,
                                has_emoticon=128),
            'background_color' / If(this.flags.has_background_color, Int32ul),
            'second_background_color' / If(this.flags.has_second_background_color, Int32ul),
            'third_background_color' / If(this.flags.has_third_background_color, Int32ul),
            'fourth_background_color' / If(this.flags.has_fourth_background_color, Int32ul),
            'intensity' / If(this.flags.has_intensity, Int32ul),
            'rotation' / If(this.flags.has_second_background_color, Int32ul),
            'emoticon' / If(this.flags.has_emoticon, TString))

    @structures
    def wall_paper_settings_structures(self, name):
        tag_map = {
            0xa12f40b8: LazyBound(self.struct_0xa12f40b8),
            0x05086cf8: LazyBound(self.struct_0x05086cf8),
            0x1dc1bca4: LazyBound(self.struct_0x1dc1bca4),
            0x372efcd0: LazyBound(self.struct_0x372efcd0)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xa437c3ed, 'wall_paper')
    def struct_0xa437c3ed(self):
        return Struct(
            'sname' / Computed('wall_paper'),
            'signature' / Hex(Const(0xa437c3ed, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2,
                                is_pattern=8,
                                is_dark=16,
                                has_settings=4),
            'access_hash' / Int64ul,
            'slug' / TString,
            'document' / self.document_structures('document'),
            'settings' / If(this.flags.has_settings, self.wall_paper_settings_structures('settings')))

    @constructor(0xf04f91ec, 'wall_paper_layer94')
    def struct_0xf04f91ec(self):
        return Struct(
            'sname' / Computed('wall_paper_layer94'),
            'signature' / Hex(Const(0xf04f91ec, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_creator=1,
                                is_default=2),
            'access_hash' / Int64ul,
            'slug' / TString,
            'document' / self.document_structures('document'))

    @constructor(0x8af40b25, 'wall_paper_no_file_layer128')
    def struct_0x8af40b25(self):
        return Struct(
            'sname' / Computed('wall_paper_no_file_layer128'),
            'signature' / Hex(Const(0x8af40b25, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_default=2,
                                is_dark=16,
                                has_settings=4),
            'settings' / If(this.flags.has_settings, self.wall_paper_settings_structures('settings')))

    @constructor(0xe0804116, 'wall_paper_no_file')
    def struct_0xe0804116(self):
        return Struct(
            'sname' / Computed('wall_paper_no_file'),
            'signature' / Hex(Const(0xe0804116, Int32ul)),
            'id' / Int64ul,
            'flags' / FlagsEnum(Int32ul,
                                is_default=2,
                                is_dark=16,
                                has_settings=4),
            'settings' / If(this.flags.has_settings, self.wall_paper_settings_structures('settings')))

    @structures
    def wall_paper_structures(self, name):
        tag_map = {
            0xa437c3ed: LazyBound(self.struct_0xa437c3ed),
            0xf04f91ec: LazyBound(self.struct_0xf04f91ec),
            0x8af40b25: LazyBound(self.struct_0x8af40b25),
            0xe0804116: LazyBound(self.struct_0xe0804116)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xf9c8bcc6, 'web_document_no_proxy')
    def struct_0xf9c8bcc6(self):
        return (
            'url' / TString,
            'size' / Int32ul,
            'mime_type' / TString,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0xc61acbd8, 'web_document_layer81')
    def struct_0xc61acbd8(self):
        return (
            'url' / TString,
            'access_hash' / Int64ul,
            'size' / Int32ul,
            'mime_type' / TString,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'),
            '_reserve' / Int32ul)

    @constructor(0x1c570ed1, 'web_document')
    def struct_0x1c570ed1(self):
        return (
            'url' / TString,
            'access_hash' / Int64ul,
            'size' / Int32ul,
            'mime_type' / TString,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @structures
    def web_document_structures(self, name):
        tag_map = {
            0xf9c8bcc6: LazyBound(self.struct_0xf9c8bcc6),
            0xc61acbd8: LazyBound(self.struct_0xc61acbd8),
            0x1c570ed1: LazyBound(self.struct_0x1c570ed1)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x54b56617, 'web_page_attribute_theme')
    def struct_0x54b56617(self):
        return Struct(
            'sname' / Computed('web_page_attribute_theme'),
            'signature' / Hex(Const(0x54b56617, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_documents=1,
                                has_settings=2),
            'documents' / If(this.flags.has_documents, self.vector(self.document_structures('documents'), 'documents')),
            'settings' / If(this.flags.has_settings, self.theme_settings_structures('settings')))

    @constructor(0x939a4671, 'web_page_attribute_story_layer162')
    def struct_0x939a4671(self):
        return Struct(
            'sname' / Computed('web_page_attribute_story_layer162'),
            'signature' / Hex(Const(0x939a4671, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_story_item=1),
            'peer_user_id' / Int64ul,
            'id' / Int32ul,
            'story_item' / If(this.flags.has_story_item, self.story_item_structures('story_item')))

    @constructor(0x2e94c3e7, 'web_page_attribute_story')
    def struct_0x2e94c3e7(self):
        return Struct(
            'sname' / Computed('web_page_attribute_story'),
            'signature' / Hex(Const(0x2e94c3e7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_story_item=1),
            'peer' / self.peer_structures('peer'),
            'id' / Int32ul,
            'story_item' / If(this.flags.has_story_item, self.story_item_structures('story_item')))

    @constructor(0x50cc03d3, 'web_page_attribute_sticker_set')
    def struct_0x50cc03d3(self):
        return Struct(
            'sname' / Computed('web_page_attribute_sticker_set'),
            'signature' / Hex(Const(0x50cc03d3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_emojis=1,
                                is_text_color=2),
            'stickers' / self.vector(self.document_structures('stickers'), 'stickers'))

    @constructor(0xcf6f6db8, 'web_page_attribute_unique_star_gift')
    def struct_0xcf6f6db8(self):
        return ['gift' / self.star_gift_structures('gift')]

    @structures
    def web_page_attribute_structures(self, name):
        tag_map = {
            0x54b56617: LazyBound(self.struct_0x54b56617),
            0x939a4671: LazyBound(self.struct_0x939a4671),
            0x2e94c3e7: LazyBound(self.struct_0x2e94c3e7),
            0x50cc03d3: LazyBound(self.struct_0x50cc03d3),
            0xcf6f6db8: LazyBound(self.struct_0xcf6f6db8)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0xe89c45b2, 'web_page')
    def struct_0xe89c45b2(self):
        return Struct(
            'sname' / Computed('web_page'),
            'signature' / Hex(Const(0xe89c45b2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_type=1,
                                has_site_name=2,
                                has_title=4,
                                has_description=8,
                                has_photo=16,
                                has_embed_url=32,
                                has_embed_width=64,
                                has_duration=128,
                                has_author=256,
                                has_document=512,
                                has_cached_page=1024,
                                has_attributes=4096),
            'id' / Int64ul,
            'url' / TString,
            'display_url' / TString,
            'hash' / Int32ul,
            'type' / If(this.flags.has_type, TString),
            'site_name' / If(this.flags.has_site_name, TString),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'embed_url' / If(this.flags.has_embed_url, TString),
            'embed_type' / If(this.flags.has_embed_url, TString),
            'embed_width' / If(this.flags.has_embed_width, Int32ul),
            'embed_height' / If(this.flags.has_embed_width, Int32ul),
            'duration' / If(this.flags.has_duration, Int32ul),
            'author' / If(this.flags.has_author, TString),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'cached_page' / If(this.flags.has_cached_page, self.page_structures('cached_page')),
            'attributes' / If(this.flags.has_attributes, self.vector(self.web_page_attribute_structures('attributes'), 'attributes')))

    @constructor(0xfa64e172, 'web_page_layer107')
    def struct_0xfa64e172(self):
        return Struct(
            'sname' / Computed('web_page_layer107'),
            'signature' / Hex(Const(0xfa64e172, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_type=1,
                                has_site_name=2,
                                has_title=4,
                                has_description=8,
                                has_photo=16,
                                has_embed_url=32,
                                has_embed_width=64,
                                has_duration=128,
                                has_author=256,
                                has_document=512,
                                has_cached_page=1024,
                                has_attributes=2048),
            'id' / Int64ul,
            'url' / TString,
            'display_url' / TString,
            'hash' / Int32ul,
            'type' / If(this.flags.has_type, TString),
            'site_name' / If(this.flags.has_site_name, TString),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'embed_url' / If(this.flags.has_embed_url, TString),
            'embed_type' / If(this.flags.has_embed_url, TString),
            'embed_width' / If(this.flags.has_embed_width, Int32ul),
            'embed_height' / If(this.flags.has_embed_width, Int32ul),
            'duration' / If(this.flags.has_duration, Int32ul),
            'author' / If(this.flags.has_author, TString),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'attributes' / If(this.flags.has_attributes, self.vector(self.document_structures('attributes'), 'attributes')),
            'cached_page' / If(this.flags.has_cached_page, self.page_structures('cached_page')))

    @constructor(0x5f07b4bc, 'web_page_layer104')
    def struct_0x5f07b4bc(self):
        return Struct(
            'sname' / Computed('web_page_layer104'),
            'signature' / Hex(Const(0x5f07b4bc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_type=1,
                                has_site_name=2,
                                has_title=4,
                                has_description=8,
                                has_photo=16,
                                has_embed_url=32,
                                has_embed_width=64,
                                has_duration=128,
                                has_author=256,
                                has_document=512,
                                has_cached_page=1024),
            'id' / Int64ul,
            'url' / TString,
            'display_url' / TString,
            'hash' / Int32ul,
            'type' / If(this.flags.has_type, TString),
            'site_name' / If(this.flags.has_site_name, TString),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'embed_url' / If(this.flags.has_embed_url, TString),
            'embed_type' / If(this.flags.has_embed_url, TString),
            'embed_width' / If(this.flags.has_embed_width, Int32ul),
            'embed_height' / If(this.flags.has_embed_width, Int32ul),
            'duration' / If(this.flags.has_duration, Int32ul),
            'author' / If(this.flags.has_author, TString),
            'document' / If(this.flags.has_document, self.document_structures('document')),
            'cached_page' / If(this.flags.has_cached_page, self.page_structures('cached_page')))

    @constructor(0xa31ea0b5, 'web_page_old')
    def struct_0xa31ea0b5(self):
        return Struct(
            'sname' / Computed('web_page_old'),
            'signature' / Hex(Const(0xa31ea0b5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_type=1,
                                has_site_name=2,
                                has_title=4,
                                has_description=8,
                                has_photo=16,
                                has_embed_url=32,
                                has_embed_width=64,
                                has_duration=128,
                                has_author=256),
            'id' / Int64ul,
            'url' / TString,
            'display_url' / TString,
            'type' / If(this.flags.has_type, TString),
            'site_name' / If(this.flags.has_site_name, TString),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'embed_url' / If(this.flags.has_embed_url, TString),
            'embed_type' / If(this.flags.has_embed_url, TString),
            'embed_width' / If(this.flags.has_embed_width, Int32ul),
            'embed_height' / If(this.flags.has_embed_width, Int32ul),
            'duration' / If(this.flags.has_duration, Int32ul),
            'author' / If(this.flags.has_author, TString))

    @constructor(0x211a1788, 'web_page_empty')
    def struct_0x211a1788(self):
        return Struct(
            'sname' / Computed('web_page_empty'),
            'signature' / Hex(Const(0x211a1788, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_url=1),
            'id' / Int64ul,
            'url' / If(this.flags.has_url, TString))

    @constructor(0xeb1477e8, 'web_page_empty_layer165')
    def struct_0xeb1477e8(self):
        return ['id' / Int64ul]

    @constructor(0xd41a5167, 'web_page_url_pending')
    def struct_0xd41a5167(self):
        return ['url' / TString]

    @constructor(0x7311ca11, 'web_page_not_modified')
    def struct_0x7311ca11(self):
        return Struct(
            'sname' / Computed('web_page_not_modified'),
            'signature' / Hex(Const(0x7311ca11, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_cached_page_views=1),
            'cached_page_views' / If(this.flags.has_cached_page_views, Int32ul))

    @constructor(0xb0d13e47, 'web_page_pending')
    def struct_0xb0d13e47(self):
        return Struct(
            'sname' / Computed('web_page_pending'),
            'signature' / Hex(Const(0xb0d13e47, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_url=1),
            'id' / Int64ul,
            'url' / If(this.flags.has_url, TString),
            'date' / TTimestamp)

    @constructor(0xc586da1c, 'web_page_pending_layer165')
    def struct_0xc586da1c(self):
        return (
            'id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0x85849473, 'web_page_not_modified_layer110')
    def struct_0x85849473(self):
        return []

    @constructor(0xca820ed7, 'web_page_layer58')
    def struct_0xca820ed7(self):
        return Struct(
            'sname' / Computed('web_page_layer58'),
            'signature' / Hex(Const(0xca820ed7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_type=1,
                                has_site_name=2,
                                has_title=4,
                                has_description=8,
                                has_photo=16,
                                has_embed_url=32,
                                has_embed_width=64,
                                has_duration=128,
                                has_author=256,
                                has_document=512),
            'id' / Int64ul,
            'url' / TString,
            'display_url' / TString,
            'type' / If(this.flags.has_type, TString),
            'site_name' / If(this.flags.has_site_name, TString),
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'embed_url' / If(this.flags.has_embed_url, TString),
            'embed_type' / If(this.flags.has_embed_url, TString),
            'embed_width' / If(this.flags.has_embed_width, Int32ul),
            'embed_height' / If(this.flags.has_embed_width, Int32ul),
            'duration' / If(this.flags.has_duration, Int32ul),
            'author' / If(this.flags.has_author, TString),
            'document' / If(this.flags.has_document, self.document_structures('document')))

    @structures
    def web_page_structures(self, name):
        tag_map = {
            0xe89c45b2: LazyBound(self.struct_0xe89c45b2),
            0xfa64e172: LazyBound(self.struct_0xfa64e172),
            0x5f07b4bc: LazyBound(self.struct_0x5f07b4bc),
            0xa31ea0b5: LazyBound(self.struct_0xa31ea0b5),
            0x211a1788: LazyBound(self.struct_0x211a1788),
            0xeb1477e8: LazyBound(self.struct_0xeb1477e8),
            0xd41a5167: LazyBound(self.struct_0xd41a5167),
            0x7311ca11: LazyBound(self.struct_0x7311ca11),
            0xb0d13e47: LazyBound(self.struct_0xb0d13e47),
            0xc586da1c: LazyBound(self.struct_0xc586da1c),
            0x85849473: LazyBound(self.struct_0x85849473),
            0xca820ed7: LazyBound(self.struct_0xca820ed7)
        }
        return Struct(
            '_signature' / Peek(Int32ul),
            name / Switch(this._signature, tag_map))

    # -------------------------------------------------------------------------

    @constructor(0x65a4c7d5, 'messages_sponsored_messages_layer147')
    def struct_0x65a4c7d5(self):
        return (
            'messages' / self.vector(self.struct_0xed5383f7(), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xde9eed1d, 'stories_story_views')
    def struct_0xde9eed1d(self):
        return (
            'views' / self.vector(self.story_views_structures('views'), 'views'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x5a73a98c, 'update_message_extended_media')
    def struct_0x5a73a98c(self):
        return (
            'peer' / self.peer_structures('peer'),
            'msg_id' / Int32ul,
            'extended_media' / self.message_extended_media_structures('extended_media'))

    @constructor(0x14b24500, 'update_group_call')
    def struct_0x14b24500(self):
        return (
            'chat_id' / Int64ul,
            'call' / self.group_call_structures('call'))

    @constructor(0x90866cee, 'update_delete_scheduled_messages')
    def struct_0x90866cee(self):
        return (
            'peer' / self.peer_structures('peer'),
            'messages' / self.vector(Int32ul, 'messages'))

    @constructor(0xccf08ad6, 'update_group_invite_privacy_forbidden')
    def struct_0xccf08ad6(self):
        return ['user_id' / Int64ul]

    @constructor(0xef7ff916, 'stats_megagroup_stats')
    def struct_0xef7ff916(self):
        return (
            'period' / self.struct_0xb637edaf(),
            'members' / self.struct_0xcb43acde(),
            'messages' / self.struct_0xcb43acde(),
            'viewers' / self.struct_0xcb43acde(),
            'posters' / self.struct_0xcb43acde(),
            'growth_graph' / self.stats_graph_structures('growth_graph'),
            'members_graph' / self.stats_graph_structures('members_graph'),
            'new_members_by_source_graph' / self.stats_graph_structures('new_members_by_source_graph'),
            'languages_graph' / self.stats_graph_structures('languages_graph'),
            'messages_graph' / self.stats_graph_structures('messages_graph'),
            'actions_graph' / self.stats_graph_structures('actions_graph'),
            'top_hours_graph' / self.stats_graph_structures('top_hours_graph'),
            'weekdays_graph' / self.stats_graph_structures('weekdays_graph'),
            'top_posters' / self.vector(self.struct_0x9d04af9b(), 'top_posters'),
            'top_admins' / self.vector(self.struct_0xd7584c87(), 'top_admins'),
            'top_inviters' / self.vector(self.struct_0x535f779d(), 'top_inviters'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x9f120418, 'chat_banned_rights')
    def struct_0x9f120418(self):
        return Struct(
            'sname' / Computed('chat_banned_rights'),
            'signature' / Hex(Const(0x9f120418, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_view_messages=1,
                                is_send_messages=2,
                                is_send_media=4,
                                is_send_stickers=8,
                                is_send_gifs=16,
                                is_send_games=32,
                                is_send_inline=64,
                                is_embed_links=128,
                                is_send_polls=256,
                                is_change_info=1024,
                                is_invite_users=32768,
                                is_pin_messages=131072,
                                is_manage_topics=262144,
                                is_send_photos=524288,
                                is_send_videos=1048576,
                                is_send_roundvideos=2097152,
                                is_send_audios=4194304,
                                is_send_voices=8388608,
                                is_send_docs=16777216,
                                is_send_plain=33554432),
            'until_date' / TTimestamp)

    @constructor(0x85fea03f, 'stickers_suggested_short_name')
    def struct_0x85fea03f(self):
        return ['short_name' / TString]

    @constructor(0x780a0310, 'help_terms_of_service')
    def struct_0x780a0310(self):
        return Struct(
            'sname' / Computed('help_terms_of_service'),
            'signature' / Hex(Const(0x780a0310, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_popup=1,
                                has_min_age_confirm=2),
            'id' / self.struct_0x7d748d04(),
            'text' / TString,
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'),
            'min_age_confirm' / If(this.flags.has_min_age_confirm, Int32ul))

    @constructor(0xafe5623f, 'phone_join_as_peers')
    def struct_0xafe5623f(self):
        return (
            'peers' / self.vector(self.peer_structures('peers'), 'peers'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x5cc761bd, 'emoji_keywords_difference')
    def struct_0x5cc761bd(self):
        return (
            'lang_code' / TString,
            'from_version' / Int32ul,
            'version' / Int32ul,
            'keywords' / self.vector(self.emoji_keyword_structures('keywords'), 'keywords'))

    @constructor(0x74c34319, 'premium_gift_option')
    def struct_0x74c34319(self):
        return Struct(
            'sname' / Computed('premium_gift_option'),
            'signature' / Hex(Const(0x74c34319, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_store_product=1),
            'months' / Int32ul,
            'currency' / TString,
            'amount' / Int64ul,
            'bot_url' / TString,
            'store_product' / If(this.flags.has_store_product, TString))

    @constructor(0xc4b9f9bb, 'error')
    def struct_0xc4b9f9bb(self):
        return (
            'code' / Int32ul,
            'text' / TString)

    @constructor(0xe5d7d19c, 'messages_chat_full')
    def struct_0xe5d7d19c(self):
        return (
            'full_chat' / self.chat_full_structures('full_chat'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x9a5c33e5, 'account_password_settings')
    def struct_0x9a5c33e5(self):
        return Struct(
            'sname' / Computed('account_password_settings'),
            'signature' / Hex(Const(0x9a5c33e5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_email=1,
                                has_secure_settings=2),
            'email' / If(this.flags.has_email, TString),
            'secure_settings' / If(this.flags.has_secure_settings, self.struct_0x1527bcac()))

    @constructor(0x47a971e0, 'stats_url')
    def struct_0x47a971e0(self):
        return ['url' / TString]

    @constructor(0x5ce14175, 'popular_contact')
    def struct_0x5ce14175(self):
        return (
            'client_id' / Int64ul,
            'importers' / Int32ul)

    @constructor(0x36585ea4, 'messages_bot_callback_answer')
    def struct_0x36585ea4(self):
        return Struct(
            'sname' / Computed('messages_bot_callback_answer'),
            'signature' / Hex(Const(0x36585ea4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_alert=2,
                                has_url=8,
                                is_native_ui=16,
                                has_message=1,
                                is_url=4),
            'message' / If(this.flags.has_message, TString),
            'url' / If(this.flags.is_url, TString),
            'cache_time' / Int32ul)

    @constructor(0x7d748d04, 'data_json')
    def struct_0x7d748d04(self):
        return ['data' / TString]

    @constructor(0x16d9703b, 'contact_status')
    def struct_0x16d9703b(self):
        return (
            'user_id' / Int64ul,
            'status' / self.user_status_structures('status'))

    @constructor(0x58cf4249, 'channel_banned_rights_layer92')
    def struct_0x58cf4249(self):
        return Struct(
            'sname' / Computed('channel_banned_rights_layer92'),
            'signature' / Hex(Const(0x58cf4249, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_view_messages=1,
                                is_send_messages=2,
                                is_send_media=4,
                                is_send_stickers=8,
                                is_send_gifs=16,
                                is_send_games=32,
                                is_send_inline=64,
                                is_embed_links=128),
            'until_date' / TTimestamp)

    @constructor(0x5e0fb7b9, 'messages_history_import_parsed')
    def struct_0x5e0fb7b9(self):
        return Struct(
            'sname' / Computed('messages_history_import_parsed'),
            'signature' / Hex(Const(0x5e0fb7b9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pm=1,
                                is_group=2,
                                has_title=4),
            'title' / If(this.flags.has_title, TString))

    @constructor(0xff544e65, 'folder')
    def struct_0xff544e65(self):
        return Struct(
            'sname' / Computed('folder'),
            'signature' / Hex(Const(0xff544e65, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_autofill_new_broadcasts=1,
                                is_autofill_public_groups=2,
                                is_autofill_new_correspondents=4,
                                has_photo=8),
            'id' / Int32ul,
            'title' / TString,
            'photo' / If(this.flags.has_photo, self.chat_photo_structures('photo')))

    @constructor(0xd7584c87, 'stats_group_top_admin')
    def struct_0xd7584c87(self):
        return (
            'user_id' / Int64ul,
            'deleted' / Int32ul,
            'kicked' / Int32ul,
            'banned' / Int32ul)

    @constructor(0x88f8f21b, 'payment_form_method')
    def struct_0x88f8f21b(self):
        return (
            'url' / TString,
            'title' / TString)

    @constructor(0x3ace484c, 'contacts_link_layer101')
    def struct_0x3ace484c(self):
        return (
            'my_link' / self.contact_link_layer101_structures('my_link'),
            'foreign_link' / self.contact_link_layer101_structures('foreign_link'),
            'user' / self.user_structures('user'))

    @constructor(0xcb296bf8, 'labeled_price')
    def struct_0xcb296bf8(self):
        return (
            'label' / TString,
            'amount' / Int64ul)

    @constructor(0xbdc62dcc, 'messages_exported_chat_invites')
    def struct_0xbdc62dcc(self):
        return (
            'count' / Int32ul,
            'invites' / self.vector(self.exported_chat_invite_structures('invites'), 'invites'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xffa0a496, 'input_sticker_set_item')
    def struct_0xffa0a496(self):
        return Struct(
            'sname' / Computed('input_sticker_set_item'),
            'signature' / Hex(Const(0xffa0a496, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_mask_coords=1),
            'document' / self.input_document_structures('document'),
            'emoji' / TString,
            'mask_coords' / If(this.flags.has_mask_coords, self.struct_0xaed6dbb2()))

    @constructor(0xf385c1f6, 'lang_pack_difference')
    def struct_0xf385c1f6(self):
        return (
            'lang_code' / TString,
            'from_version' / Int32ul,
            'version' / Int32ul,
            'strings' / self.vector(self.lang_pack_string_structures('strings'), 'strings'))

    @constructor(0x5fb224d5, 'chat_admin_rights')
    def struct_0x5fb224d5(self):
        return Struct(
            'sname' / Computed('chat_admin_rights'),
            'signature' / Hex(Const(0x5fb224d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_change_info=1,
                                is_post_messages=2,
                                is_edit_messages=4,
                                is_delete_messages=8,
                                is_ban_users=16,
                                is_invite_users=32,
                                is_pin_messages=128,
                                is_add_admins=512,
                                is_anonymous=1024,
                                is_manage_call=2048,
                                is_other=4096,
                                is_manage_topics=8192,
                                is_post_stories=16384,
                                is_edit_stories=32768,
                                is_delete_stories=65536))

    @constructor(0xcb43acde, 'stats_abs_value_and_prev')
    def struct_0xcb43acde(self):
        return (
            'current' / Double,
            'previous' / Double)

    @constructor(0xe0277a62, 'secure_file_layer142')
    def struct_0xe0277a62(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'size' / Int32ul,
            'dc_id' / Int32ul,
            'date' / TTimestamp,
            'file_hash' / TBytes,
            'secret' / TBytes)

    @constructor(0x84d19185, 'messages_affected_messages')
    def struct_0x84d19185(self):
        return (
            'pts' / Int32ul,
            'pts_count' / Int32ul)

    @constructor(0x81b6b00a, 'messages_chat_invite_importers')
    def struct_0x81b6b00a(self):
        return (
            'count' / Int32ul,
            'importers' / self.vector(self.struct_0x8c5adfd9(), 'importers'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x3b6ddad2, 'poll_answer_voters')
    def struct_0x3b6ddad2(self):
        return Struct(
            'sname' / Computed('poll_answer_voters'),
            'signature' / Hex(Const(0x3b6ddad2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_chosen=1,
                                is_correct=2),
            'option' / TBytes,
            'voters' / Int32ul)

    @constructor(0xdfb80317, 'channels_channel_participant')
    def struct_0xdfb80317(self):
        return (
            'participant' / self.channel_participant_structures('participant'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xad01d61d, 'authorization')
    def struct_0xad01d61d(self):
        return Struct(
            'sname' / Computed('authorization'),
            'signature' / Hex(Const(0xad01d61d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_current=1,
                                is_official_app=2,
                                is_password_pending=4,
                                is_encrypted_requests_disabled=8,
                                is_call_requests_disabled=16,
                                is_unconfirmed=32),
            'hash' / Int64ul,
            'device_model' / TString,
            'platform' / TString,
            'system_version' / TString,
            'api_id' / Int32ul,
            'app_name' / TString,
            'app_version' / TString,
            'date_created' / Int32ul,
            'date_active' / Int32ul,
            'ip' / TString,
            'country' / TString,
            'region' / TString)

    @constructor(0x50a04e45, 'account_privacy_rules')
    def struct_0x50a04e45(self):
        return (
            'rules' / self.vector(self.privacy_rule_structures('rules'), 'rules'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xd8aa840f, 'input_group_call')
    def struct_0xd8aa840f(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0xef8d3e6c, 'messages_affected_found_messages')
    def struct_0xef8d3e6c(self):
        return (
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'offset' / Int32ul,
            'messages' / self.vector(Int32ul, 'messages'))

    @constructor(0x1fad68cd, 'channel_admin_log_event')
    def struct_0x1fad68cd(self):
        return (
            'id' / Int64ul,
            'date' / TTimestamp,
            'user_id' / Int64ul,
            'action' / self.channel_admin_log_event_action_structures('action'))

    @constructor(0xeeca5ce3, 'lang_pack_language')
    def struct_0xeeca5ce3(self):
        return Struct(
            'sname' / Computed('lang_pack_language'),
            'signature' / Hex(Const(0xeeca5ce3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_official=1,
                                is_rtl=4,
                                has_base_lang_code=2),
            'name' / TString,
            'native_name' / TString,
            'lang_code' / TString,
            'base_lang_code' / If(this.flags.has_base_lang_code, TString),
            'plural_code' / TString,
            'strings_count' / Int32ul,
            'translated_count' / Int32ul,
            'translations_url' / TString)

    @constructor(0x8c5adfd9, 'chat_invite_importer')
    def struct_0x8c5adfd9(self):
        return Struct(
            'sname' / Computed('chat_invite_importer'),
            'signature' / Hex(Const(0x8c5adfd9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_requested=1,
                                is_via_chatlist=8,
                                has_about=4,
                                has_approved_by=2),
            'user_id' / Int64ul,
            'date' / TTimestamp,
            'about' / If(this.flags.has_about, TString),
            'approved_by' / If(this.flags.has_approved_by, Int64ul))

    @constructor(0x4a4ff172, 'read_participant_date')
    def struct_0x4a4ff172(self):
        return (
            'user_id' / Int64ul,
            'date' / TTimestamp)

    @constructor(0x535f779d, 'stats_group_top_inviter')
    def struct_0x535f779d(self):
        return (
            'user_id' / Int64ul,
            'invitations' / Int32ul)

    @constructor(0xed8af74d, 'channels_admin_log_results')
    def struct_0xed8af74d(self):
        return (
            'events' / self.vector(self.struct_0x1fad68cd(), 'events'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf392b7f4, 'input_phone_contact')
    def struct_0xf392b7f4(self):
        return (
            'client_id' / Int64ul,
            'phone' / TString,
            'first_name' / TString,
            'last_name' / TString)

    @constructor(0x6f747657, 'page_caption')
    def struct_0x6f747657(self):
        return (
            'text' / self.rich_text_structures('text'),
            'credit' / self.rich_text_structures('credit'))

    @constructor(0x34566b6a, 'page_table_cell')
    def struct_0x34566b6a(self):
        return Struct(
            'sname' / Computed('page_table_cell'),
            'signature' / Hex(Const(0x34566b6a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_header=1,
                                is_align_center=8,
                                is_align_right=16,
                                is_valign_middle=32,
                                is_valign_bottom=64,
                                has_text=128,
                                has_colspan=2,
                                has_rowspan=4),
            'text' / If(this.flags.has_text, self.rich_text_structures('text')),
            'colspan' / If(this.flags.has_colspan, Int32ul),
            'rowspan' / If(this.flags.has_rowspan, Int32ul))

    @constructor(0x1f9338fe, 'input_media_invoice')
    def struct_0x1f9338fe(self):
        return Struct(
            'sname' / Computed('input_media_invoice'),
            'signature' / Hex(Const(0x1f9338fe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=1,
                                has_start_param=2,
                                has_extend_media=4),
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.struct_0x9bed434d()),
            'invoice' / self.struct_0x5db95a15(),
            'payload' / TBytes,
            'provider' / TString,
            'provider_data' / self.struct_0x7d748d04(),
            'start_param' / If(this.flags.has_start_param, TString),
            'extend_media' / If(this.flags.has_extend_media, self.input_media_structures('extend_media')))

    @constructor(0xdb21d0a7, 'input_secure_value')
    def struct_0xdb21d0a7(self):
        return Struct(
            'sname' / Computed('input_secure_value'),
            'signature' / Hex(Const(0xdb21d0a7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_data=1,
                                has_front_side=2,
                                has_reverse_side=4,
                                has_selfie=8,
                                has_translation=64,
                                has_files=16,
                                has_plain_data=32),
            'type' / self.secure_value_type_structures('type'),
            'data' / If(this.flags.has_data, self.struct_0x8aeabec3()),
            'front_side' / If(this.flags.has_front_side, self.input_secure_file_structures('front_side')),
            'reverse_side' / If(this.flags.has_reverse_side, self.input_secure_file_structures('reverse_side')),
            'selfie' / If(this.flags.has_selfie, self.input_secure_file_structures('selfie')),
            'translation' / If(this.flags.has_translation, self.vector(self.input_secure_file_structures('translation'), 'translation')),
            'files' / If(this.flags.has_files, self.vector(self.input_secure_file_structures('files'), 'files')),
            'plain_data' / If(this.flags.has_plain_data, self.secure_plain_data_structures('plain_data')))

    @constructor(0x734c4ccb, 'global_privacy_settings')
    def struct_0x734c4ccb(self):
        return Struct(
            'sname' / Computed('global_privacy_settings'),
            'signature' / Hex(Const(0x734c4ccb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_archive_and_mute_new_noncontact_peers=1,
                                is_keep_archived_unmuted=2,
                                is_keep_archived_folders=4,
                                is_hide_read_marks=8,
                                is_new_noncontact_peers_require_premium=16))

    @constructor(0xed1ecdb0, 'secure_value_hash')
    def struct_0xed1ecdb0(self):
        return (
            'type' / self.secure_value_type_structures('type'),
            'hash' / TBytes)

    @constructor(0x18cb9f78, 'help_invite_text')
    def struct_0x18cb9f78(self):
        return ['message' / TString]

    @constructor(0xc3878e23, 'help_country')
    def struct_0xc3878e23(self):
        return Struct(
            'sname' / Computed('help_country'),
            'signature' / Hex(Const(0xc3878e23, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_hidden=1,
                                has_name=2),
            'iso2' / TString,
            'default_name' / TString,
            'name' / If(this.flags.has_name, TString),
            'country_codes' / self.vector(self.struct_0x4203c5ef(), 'country_codes'))

    @constructor(0x1662af0b, 'messages_history_import')
    def struct_0x1662af0b(self):
        return ['id' / Int64ul]

    @constructor(0x10cf3123, 'bots_set_bot_info')
    def struct_0x10cf3123(self):
        return Struct(
            'sname' / Computed('bots_set_bot_info'),
            'signature' / Hex(Const(0x10cf3123, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_bot=4,
                                has_name=8,
                                has_about=1,
                                has_description=2),
            'bot' / If(this.flags.has_bot, self.input_user_structures('bot')),
            'lang_code' / TString,
            'name' / If(this.flags.has_name, TString),
            'about' / If(this.flags.has_about, TString),
            'description' / If(this.flags.has_description, TString))

    @constructor(0xdcd914fd, 'bots_get_bot_info')
    def struct_0xdcd914fd(self):
        return Struct(
            'sname' / Computed('bots_get_bot_info'),
            'signature' / Hex(Const(0xdcd914fd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_bot=1),
            'bot' / If(this.flags.has_bot, self.input_user_structures('bot')),
            'lang_code' / TString)

    @constructor(0x9709b1c2, 'bots_reorder_usernames')
    def struct_0x9709b1c2(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'order' / self.vector(TString, 'order'))

    @constructor(0x053ca973, 'bots_toggle_username')
    def struct_0x053ca973(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'username' / TString,
            'active' / TBool)

    @constructor(0x455b853d, 'message_views')
    def struct_0x455b853d(self):
        return Struct(
            'sname' / Computed('message_views'),
            'signature' / Hex(Const(0x455b853d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_views=1,
                                has_forwards=2,
                                has_replies=4),
            'views' / If(this.flags.has_views, Int32ul),
            'forwards' / If(this.flags.has_forwards, Int32ul),
            'replies' / If(this.flags.has_replies, self.message_replies_structures('replies')))

    @constructor(0xcacb6ae2, 'input_peer_notify_settings')
    def struct_0xcacb6ae2(self):
        return Struct(
            'sname' / Computed('input_peer_notify_settings'),
            'signature' / Hex(Const(0xcacb6ae2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_show_previews=1,
                                has_silent=2,
                                has_mute_until=4,
                                has_sound=8,
                                has_stories_muted=64,
                                has_stories_hide_sender=128,
                                has_stories_sound=256),
            'show_previews' / If(this.flags.has_show_previews, TBool),
            'silent' / If(this.flags.has_silent, TBool),
            'mute_until' / If(this.flags.has_mute_until, Int32ul),
            'sound' / If(this.flags.has_sound, self.notification_sound_structures('sound')),
            'stories_muted' / If(this.flags.has_stories_muted, TBool),
            'stories_hide_sender' / If(this.flags.has_stories_hide_sender, TBool),
            'stories_sound' / If(this.flags.has_stories_sound, self.notification_sound_structures('stories_sound')))

    @constructor(0xad253d78, 'code_settings')
    def struct_0xad253d78(self):
        return Struct(
            'sname' / Computed('code_settings'),
            'signature' / Hex(Const(0xad253d78, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_allow_flashcall=1,
                                is_current_number=2,
                                is_allow_app_hash=16,
                                is_allow_missed_call=32,
                                is_allow_firebase=128,
                                is_app_sandbox=256,
                                is_unknown_number=512,
                                has_logout_tokens=64),
            'logout_tokens' / If(this.flags.has_logout_tokens, self.vector(TBytes, 'logout_tokens')),
            'token' / If(this.flags.is_app_sandbox, TString))

    @constructor(0x7fe91c14, 'stats_message_stats')
    def struct_0x7fe91c14(self):
        return (
            'views_graph' / self.stats_graph_structures('views_graph'),
            'reactions_by_emotion_graph' / self.stats_graph_structures('reactions_by_emotion_graph'))

    @constructor(0x56730bcc, 'null')
    def struct_0x56730bcc(self):
        return []

    @constructor(0xfb834291, 'top_peer_category_peers')
    def struct_0xfb834291(self):
        return (
            'category' / self.top_peer_category_structures('category'),
            'count' / Int32ul,
            'peers' / self.vector(self.struct_0xedcdc05b(), 'peers'))

    @constructor(0x77608b83, 'keyboard_button_row')
    def struct_0x77608b83(self):
        return ['buttons' / self.vector(self.keyboard_button_structures('buttons'), 'buttons')]

    @constructor(0xa6341782, 'messages_discussion_message')
    def struct_0xa6341782(self):
        return Struct(
            'sname' / Computed('messages_discussion_message'),
            'signature' / Hex(Const(0xa6341782, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_max_id=1,
                                has_read_inbox_max_id=2,
                                has_read_outbox_max_id=4),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'max_id' / If(this.flags.has_max_id, Int32ul),
            'read_inbox_max_id' / If(this.flags.has_read_inbox_max_id, Int32ul),
            'read_outbox_max_id' / If(this.flags.has_read_outbox_max_id, Int32ul),
            'unread_count' / Int32ul,
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xe844ebff, 'messages_search_counter')
    def struct_0xe844ebff(self):
        return Struct(
            'sname' / Computed('messages_search_counter'),
            'signature' / Hex(Const(0xe844ebff, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inexact=2),
            'filter' / self.messages_filter_structures('filter'),
            'count' / Int32ul)

    @constructor(0x1d1b1245, 'input_app_event')
    def struct_0x1d1b1245(self):
        return (
            'time' / Double,
            'type' / TString,
            'peer' / Int64ul,
            'data' / self.json_value_structures('data'))

    @constructor(0xb434e2b8, 'auth_exported_authorization')
    def struct_0xb434e2b8(self):
        return (
            'id' / Int64ul,
            'bytes' / TBytes)

    @constructor(0x187fa0ca, 'secure_value')
    def struct_0x187fa0ca(self):
        return Struct(
            'sname' / Computed('secure_value'),
            'signature' / Hex(Const(0x187fa0ca, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_data=1,
                                has_front_side=2,
                                has_reverse_side=4,
                                has_selfie=8,
                                has_translation=64,
                                has_files=16,
                                has_plain_data=32),
            'type' / self.secure_value_type_structures('type'),
            'data' / If(this.flags.has_data, self.struct_0x8aeabec3()),
            'front_side' / If(this.flags.has_front_side, self.secure_file_structures('front_side')),
            'reverse_side' / If(this.flags.has_reverse_side, self.secure_file_structures('reverse_side')),
            'selfie' / If(this.flags.has_selfie, self.secure_file_structures('selfie')),
            'translation' / If(this.flags.has_translation, self.vector(self.secure_file_structures('translation'), 'translation')),
            'files' / If(this.flags.has_files, self.vector(self.secure_file_structures('files'), 'files')),
            'plain_data' / If(this.flags.has_plain_data, self.secure_plain_data_structures('plain_data')),
            'hash' / TBytes)

    @constructor(0x137948a5, 'auth_password_recovery')
    def struct_0x137948a5(self):
        return ['email_pattern' / TString]

    @constructor(0x41bf109b, 'exported_contact_token')
    def struct_0x41bf109b(self):
        return (
            'url' / TString,
            'expires' / Int32ul)

    @constructor(0xc27ac8c7, 'bot_command')
    def struct_0xc27ac8c7(self):
        return (
            'command' / TString,
            'description' / TString)

    @constructor(0x20212ca8, 'photos_photo')
    def struct_0x20212ca8(self):
        return (
            'photo' / self.photo_structures('photo'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb69b72d7, 'messages_chat_admins_with_invites')
    def struct_0xb69b72d7(self):
        return (
            'admins' / self.vector(self.struct_0xf2ecef23(), 'admins'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x9e727aad, 'phone_group_call')
    def struct_0x9e727aad(self):
        return (
            'call' / self.group_call_structures('call'),
            'participants' / self.vector(self.struct_0xeba636fe(), 'participants'),
            'participants_next_offset' / TString,
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x2dbf3432, 'phone_group_call_stream_rtmp_url')
    def struct_0x2dbf3432(self):
        return (
            'url' / TString,
            'key' / TString)

    @constructor(0x9d04af9b, 'stats_group_top_poster')
    def struct_0x9d04af9b(self):
        return (
            'user_id' / Int64ul,
            'messages' / Int32ul,
            'avg_chars' / Int32ul)

    @constructor(0xb637edaf, 'stats_date_range_days')
    def struct_0xb637edaf(self):
        return (
            'min_date' / TTimestamp,
            'max_date' / TTimestamp)

    @constructor(0x3e24e573, 'payments_bank_card_data')
    def struct_0x3e24e573(self):
        return (
            'title' / TString,
            'open_urls' / self.vector(self.struct_0xf568028a(), 'open_urls'))

    @constructor(0x9a3bfd99, 'messages_high_scores')
    def struct_0x9a3bfd99(self):
        return (
            'scores' / self.vector(self.struct_0x73a379eb(), 'scores'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xec82e140, 'phone_phone_call')
    def struct_0xec82e140(self):
        return (
            'phone_call' / self.phone_call_structures('phone_call'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x84f80814, 'messages_get_extended_media')
    def struct_0x84f80814(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x31c1c44f, 'messages_get_message_read_participants')
    def struct_0x31c1c44f(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0x0a8eb2be, 'input_report_reason_illegal_drugs')
    def struct_0x0a8eb2be(self):
        return []

    @constructor(0x9ec7863d, 'input_report_reason_personal_details')
    def struct_0x9ec7863d(self):
        return []

    @constructor(0x4fcba9c8, 'messages_archived_stickers')
    def struct_0x4fcba9c8(self):
        return (
            'count' / Int32ul,
            'sets' / self.vector(self.sticker_set_covered_structures('sets'), 'sets'))

    @constructor(0x9bed434d, 'input_web_document')
    def struct_0x9bed434d(self):
        return (
            'url' / TString,
            'size' / Int32ul,
            'mime_type' / TString,
            'attributes' / self.vector(self.document_attribute_structures('attributes'), 'attributes'))

    @constructor(0xcb6ff828, 'saved_reaction_tag')
    def struct_0xcb6ff828(self):
        return Struct(
            'sname' / Computed('saved_reaction_tag'),
            'signature' / Hex(Const(0xcb6ff828, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1),
            'reaction' / self.reaction_structures('reaction'),
            'title' / If(this.flags.has_title, TString),
            'count' / Int32ul)

    @constructor(0x3bb842ac, 'outbox_read_date')
    def struct_0x3bb842ac(self):
        return []

    @constructor(0x5dab1af4, 'exported_message_link')
    def struct_0x5dab1af4(self):
        return (
            'link' / TString,
            'html' / TString)

    @constructor(0x67753ac8, 'group_call_participant_video')
    def struct_0x67753ac8(self):
        return Struct(
            'sname' / Computed('group_call_participant_video'),
            'signature' / Hex(Const(0x67753ac8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_paused=1,
                                has_audio_source=2),
            'endpoint' / TString,
            'source_groups' / self.vector(self.struct_0xdcb118b7(), 'source_groups'),
            'audio_source' / If(this.flags.has_audio_source, Int32ul))

    @constructor(0xd1451883, 'payments_validated_requested_info')
    def struct_0xd1451883(self):
        return Struct(
            'sname' / Computed('payments_validated_requested_info'),
            'signature' / Hex(Const(0xd1451883, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_id=1,
                                has_shipping_options=2),
            'id' / If(this.flags.has_id, TString),
            'shipping_options' / If(this.flags.has_shipping_options, self.vector(self.struct_0xb6213cdf(), 'shipping_options')))

    @constructor(0xc0de1bd9, 'json_object_value')
    def struct_0xc0de1bd9(self):
        return (
            'key' / TString,
            'value' / self.json_value_structures('value'))

    @constructor(0x3b6d152e, 'users_user_full')
    def struct_0x3b6d152e(self):
        return (
            'full_user' / self.user_full_structures('full_user'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb6213cdf, 'shipping_option')
    def struct_0xb6213cdf(self):
        return (
            'id' / TString,
            'title' / TString,
            'prices' / self.vector(self.struct_0xcb296bf8(), 'prices'))

    @constructor(0xe9baa668, 'folder_peer')
    def struct_0xe9baa668(self):
        return (
            'peer' / self.peer_structures('peer'),
            'folder_id' / Int32ul)

    @constructor(0x396ca5fc, 'stats_broadcast_stats')
    def struct_0x396ca5fc(self):
        return (
            'period' / self.struct_0xb637edaf(),
            'followers' / self.struct_0xcb43acde(),
            'views_per_post' / self.struct_0xcb43acde(),
            'shares_per_post' / self.struct_0xcb43acde(),
            'reactions_per_post' / self.struct_0xcb43acde(),
            'views_per_story' / self.struct_0xcb43acde(),
            'shares_per_story' / self.struct_0xcb43acde(),
            'reactions_per_story' / self.struct_0xcb43acde(),
            'enabled_notifications' / self.struct_0xcbce2fe0(),
            'growth_graph' / self.stats_graph_structures('growth_graph'),
            'followers_graph' / self.stats_graph_structures('followers_graph'),
            'mute_graph' / self.stats_graph_structures('mute_graph'),
            'top_hours_graph' / self.stats_graph_structures('top_hours_graph'),
            'interactions_graph' / self.stats_graph_structures('interactions_graph'),
            'iv_interactions_graph' / self.stats_graph_structures('iv_interactions_graph'),
            'views_by_source_graph' / self.stats_graph_structures('views_by_source_graph'),
            'new_followers_by_source_graph' / self.stats_graph_structures('new_followers_by_source_graph'),
            'languages_graph' / self.stats_graph_structures('languages_graph'),
            'reactions_by_emotion_graph' / self.stats_graph_structures('reactions_by_emotion_graph'),
            'story_interactions_graph' / self.stats_graph_structures('story_interactions_graph'),
            'story_reactions_by_emotion_graph' / self.stats_graph_structures('story_reactions_by_emotion_graph'),
            'recent_posts_interactions' / self.vector(self.stats_post_interaction_counters_structures('recent_posts_interactions'), 'recent_posts_interactions'))

    @constructor(0xe8fd8014, 'peer_blocked')
    def struct_0xe8fd8014(self):
        return (
            'peer_id' / self.peer_structures('peer_id'),
            'date' / TTimestamp)

    @constructor(0xb45c69d1, 'messages_affected_history')
    def struct_0xb45c69d1(self):
        return (
            'pts' / Int32ul,
            'pts_count' / Int32ul,
            'offset' / Int32ul)

    @constructor(0xaed6dbb2, 'mask_coords')
    def struct_0xaed6dbb2(self):
        return (
            'n' / Int32ul,
            'x' / Double,
            'y' / Double,
            'zoom' / Double)

    @constructor(0x4899484e, 'messages_votes_list')
    def struct_0x4899484e(self):
        return Struct(
            'sname' / Computed('messages_votes_list'),
            'signature' / Hex(Const(0x4899484e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'votes' / self.vector(self.message_peer_vote_structures('votes'), 'votes'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @constructor(0x73a379eb, 'high_score')
    def struct_0x73a379eb(self):
        return (
            'pos' / Int32ul,
            'user_id' / Int64ul,
            'score' / Int32ul)

    @constructor(0xfcfeb29c, 'sticker_keyword')
    def struct_0xfcfeb29c(self):
        return (
            'document_id' / Int64ul,
            'keyword' / self.vector(TString, 'keyword'))

    @constructor(0xea107ae4, 'channel_admin_log_events_filter')
    def struct_0xea107ae4(self):
        return Struct(
            'sname' / Computed('channel_admin_log_events_filter'),
            'signature' / Hex(Const(0xea107ae4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_join=1,
                                is_leave=2,
                                is_invite=4,
                                is_ban=8,
                                is_unban=16,
                                is_kick=32,
                                is_unkick=64,
                                is_promote=128,
                                is_demote=256,
                                is_info=512,
                                is_settings=1024,
                                is_pinned=2048,
                                is_edit=4096,
                                is_delete=8192,
                                is_group_call=16384,
                                is_invites=32768,
                                is_send=65536,
                                is_forums=131072,
                                is_sub_extend=262144))

    @constructor(0x6880b94d, 'messages_peer_settings')
    def struct_0x6880b94d(self):
        return (
            'settings' / self.peer_settings_structures('settings'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xa24de717, 'messages_checked_history_import_peer')
    def struct_0xa24de717(self):
        return ['confirm_text' / TString]

    @constructor(0x26b5dde6, 'messages_message_edit_data')
    def struct_0x26b5dde6(self):
        return Struct(
            'sname' / Computed('messages_message_edit_data'),
            'signature' / Hex(Const(0x26b5dde6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_caption=1))

    @constructor(0x77d01c3b, 'contacts_imported_contacts')
    def struct_0x77d01c3b(self):
        return (
            'imported' / self.vector(self.struct_0xc13e3c50(), 'imported'),
            'popular_invites' / self.vector(self.struct_0x5ce14175(), 'popular_invites'),
            'retry_contacts' / self.vector(Int64ul, 'retry_contacts'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x77744d4a, 'dialog_filter_suggested')
    def struct_0x77744d4a(self):
        return (
            'filter' / self.dialog_filter_structures('filter'),
            'description' / TString)

    @constructor(0x3c20629f, 'inline_bot_switch_pm')
    def struct_0x3c20629f(self):
        return (
            'text' / TString,
            'start_param' / TString)

    @constructor(0xa384b779, 'received_notify_message')
    def struct_0xa384b779(self):
        return (
            'id' / Int32ul,
            'flags' / Int32ul)

    @constructor(0xb6c4f543, 'messages_message_views')
    def struct_0xb6c4f543(self):
        return (
            'views' / self.vector(self.struct_0x455b853d(), 'views'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf2ecef23, 'chat_admin_with_invites')
    def struct_0xf2ecef23(self):
        return (
            'admin_id' / Int64ul,
            'invites_count' / Int32ul,
            'revoked_invites_count' / Int32ul)

    @constructor(0xc3a2835f, 'auth_logged_out')
    def struct_0xc3a2835f(self):
        return Struct(
            'sname' / Computed('auth_logged_out'),
            'signature' / Hex(Const(0xc3a2835f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_future_auth_token=1),
            'future_auth_token' / If(this.flags.has_future_auth_token, TBytes))

    @constructor(0x145ade0b, 'contact')
    def struct_0x145ade0b(self):
        return (
            'user_id' / Int64ul,
            'mutual' / TBool)

    @constructor(0xdcb118b7, 'group_call_participant_video_source_group')
    def struct_0xdcb118b7(self):
        return (
            'semantics' / TString,
            'sources' / self.vector(Int32ul, 'sources'))

    @constructor(0x4203c5ef, 'help_country_code')
    def struct_0x4203c5ef(self):
        return Struct(
            'sname' / Computed('help_country_code'),
            'signature' / Hex(Const(0x4203c5ef, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_prefixes=1,
                                has_patterns=2),
            'country_code' / TString,
            'prefixes' / If(this.flags.has_prefixes, self.vector(TString, 'prefixes')),
            'patterns' / If(this.flags.has_patterns, self.vector(TString, 'patterns')))

    @constructor(0x8aeabec3, 'secure_data')
    def struct_0x8aeabec3(self):
        return (
            'data' / TBytes,
            'data_hash' / TBytes,
            'secret' / TBytes)

    @constructor(0xcc1a241e, 'config')
    def struct_0xcc1a241e(self):
        return Struct(
            'sname' / Computed('config'),
            'signature' / Hex(Const(0xcc1a241e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_default_p2p_contacts=8,
                                is_preload_featured_stickers=16,
                                is_revoke_pm_inbox=64,
                                is_blocked_mode=256,
                                is_force_try_ipv6=16384,
                                has_tmp_sessions=1,
                                has_autoupdate_url_prefix=128,
                                has_gif_search_username=512,
                                has_venue_search_username=1024,
                                has_img_search_username=2048,
                                has_static_maps_provider=4096,
                                has_suggested_lang_code=4,
                                has_reactions_default=32768,
                                has_autologin_token=65536),
            'date' / TTimestamp,
            'expires' / Int32ul,
            'test_mode' / TBool,
            'this_dc' / Int32ul,
            'dc_options' / self.vector(self.struct_0x18b7a10d(), 'dc_options'),
            'dc_txt_domain_name' / TString,
            'chat_size_max' / Int32ul,
            'megagroup_size_max' / Int32ul,
            'forwarded_count_max' / Int32ul,
            'online_update_period_ms' / Int32ul,
            'offline_blur_timeout_ms' / Int32ul,
            'offline_idle_timeout_ms' / Int32ul,
            'online_cloud_timeout_ms' / Int32ul,
            'notify_cloud_delay_ms' / Int32ul,
            'notify_default_delay_ms' / Int32ul,
            'push_chat_period_ms' / Int32ul,
            'push_chat_limit' / Int32ul,
            'edit_time_limit' / Int32ul,
            'revoke_time_limit' / Int32ul,
            'revoke_pm_time_limit' / Int32ul,
            'rating_e_decay' / Int32ul,
            'stickers_recent_limit' / Int32ul,
            'channels_read_media_period' / Int32ul,
            'tmp_sessions' / If(this.flags.has_tmp_sessions, Int32ul),
            'call_receive_timeout_ms' / Int32ul,
            'call_ring_timeout_ms' / Int32ul,
            'call_connect_timeout_ms' / Int32ul,
            'call_packet_timeout_ms' / Int32ul,
            'me_url_prefix' / TString,
            'autoupdate_url_prefix' / If(this.flags.has_autoupdate_url_prefix, TString),
            'gif_search_username' / If(this.flags.has_gif_search_username, TString),
            'venue_search_username' / If(this.flags.has_venue_search_username, TString),
            'img_search_username' / If(this.flags.has_img_search_username, TString),
            'static_maps_provider' / If(this.flags.has_static_maps_provider, TString),
            'caption_length_max' / Int32ul,
            'message_length_max' / Int32ul,
            'webfile_dc_id' / Int32ul,
            'suggested_lang_code' / If(this.flags.has_suggested_lang_code, TString),
            'lang_pack_version' / If(this.flags.has_suggested_lang_code, Int32ul),
            'base_lang_pack_version' / If(this.flags.has_suggested_lang_code, Int32ul),
            'reactions_default' / If(this.flags.has_reactions_default, self.reaction_structures('reactions_default')),
            'autologin_token' / If(this.flags.has_autologin_token, TString))

    @constructor(0x17c6b5f6, 'help_support')
    def struct_0x17c6b5f6(self):
        return (
            'phone_number' / TString,
            'user' / self.user_structures('user'))

    @constructor(0xdb64fd34, 'account_tmp_password')
    def struct_0xdb64fd34(self):
        return (
            'tmp_password' / TBytes,
            'valid_until' / Int32ul)

    @constructor(0x0ae30253, 'message_range')
    def struct_0x0ae30253(self):
        return (
            'min_id' / Int32ul,
            'max_id' / Int32ul)

    @constructor(0xfbd2c296, 'input_folder_peer')
    def struct_0xfbd2c296(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'folder_id' / Int32ul)

    @constructor(0x890c3d89, 'input_bot_inline_message_id')
    def struct_0x890c3d89(self):
        return (
            'dc_id' / Int32ul,
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0x1527bcac, 'secure_secret_settings')
    def struct_0x1527bcac(self):
        return (
            'secure_algo' / self.secure_password_kdf_algo_structures('secure_algo'),
            'secure_secret' / TBytes,
            'secure_secret_id' / Int64ul)

    @constructor(0xb3fb5361, 'emoji_language')
    def struct_0xb3fb5361(self):
        return ['lang_code' / TString]

    @constructor(0x3db8ec63, 'sponsored_web_page')
    def struct_0x3db8ec63(self):
        return Struct(
            'sname' / Computed('sponsored_web_page'),
            'signature' / Hex(Const(0x3db8ec63, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=1),
            'url' / TString,
            'site_name' / TString,
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')))

    @constructor(0xed5383f7, 'sponsored_message')
    def struct_0xed5383f7(self):
        return Struct(
            'sname' / Computed('sponsored_message'),
            'signature' / Hex(Const(0xed5383f7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recommended=32,
                                is_show_peer_photo=64,
                                has_from_id=8,
                                has_chat_invite=16,
                                has_channel_post=4,
                                has_start_param=1,
                                has_webpage=512,
                                has_app=1024,
                                has_entities=2,
                                has_button_text=2048,
                                has_sponsor_info=128,
                                has_additional_info=256),
            'random_id' / TBytes,
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'chat_invite' / If(this.flags.has_chat_invite, self.chat_invite_structures('chat_invite')),
            'chat_invite_hash' / If(this.flags.has_chat_invite, TString),
            'channel_post' / If(this.flags.has_channel_post, Int32ul),
            'start_param' / If(this.flags.has_start_param, TString),
            'webpage' / If(this.flags.has_webpage, self.struct_0x3db8ec63()),
            'app' / If(this.flags.has_app, self.bot_app_structures('app')),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'button_text' / If(this.flags.has_button_text, TString),
            'sponsor_info' / If(this.flags.has_sponsor_info, TString),
            'additional_info' / If(this.flags.has_additional_info, TString))

    @constructor(0xad2e1cd8, 'account_authorization_form')
    def struct_0xad2e1cd8(self):
        return Struct(
            'sname' / Computed('account_authorization_form'),
            'signature' / Hex(Const(0xad2e1cd8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_privacy_policy_url=1),
            'required_types' / self.vector(self.secure_required_type_structures('required_types'), 'required_types'),
            'values' / self.vector(self.struct_0x187fa0ca(), 'values'),
            'errors' / self.vector(self.secure_value_error_structures('errors'), 'errors'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'privacy_policy_url' / If(this.flags.has_privacy_policy_url, TString))

    @constructor(0x0e0310d7, 'help_recent_me_urls')
    def struct_0x0e0310d7(self):
        return (
            'urls' / self.vector(self.recent_me_url_structures('urls'), 'urls'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf568028a, 'bank_card_open_url')
    def struct_0xf568028a(self):
        return (
            'url' / TString,
            'name' / TString)

    @constructor(0x7f077ad9, 'contacts_resolved_peer')
    def struct_0x7f077ad9(self):
        return (
            'peer' / self.peer_structures('peer'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x7f648b67, 'search_result_position')
    def struct_0x7f648b67(self):
        return (
            'msg_id' / Int32ul,
            'date' / TTimestamp,
            'offset' / Int32ul)

    @constructor(0x53b22baf, 'messages_search_results_positions')
    def struct_0x53b22baf(self):
        return (
            'count' / Int32ul,
            'positions' / self.vector(self.struct_0x7f648b67(), 'positions'))

    @constructor(0xc9b0539f, 'search_results_calendar_period')
    def struct_0xc9b0539f(self):
        return (
            'date' / TTimestamp,
            'min_msg_id' / Int32ul,
            'max_msg_id' / Int32ul,
            'count' / Int32ul)

    @constructor(0x1cc6e91f, 'input_single_media')
    def struct_0x1cc6e91f(self):
        return Struct(
            'sname' / Computed('input_single_media'),
            'signature' / Hex(Const(0x1cc6e91f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=1),
            'media' / self.input_media_structures('media'),
            'random_id' / Int64ul,
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')))

    @constructor(0x1e36fded, 'input_phone_call')
    def struct_0x1e36fded(self):
        return (
            'id' / Int64ul,
            'access_hash' / Int64ul)

    @constructor(0xb3134d9d, 'contacts_found')
    def struct_0xb3134d9d(self):
        return (
            'my_results' / self.vector(self.peer_structures('my_results'), 'my_results'),
            'results' / self.vector(self.peer_structures('results'), 'results'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xbdf9653b, 'game')
    def struct_0xbdf9653b(self):
        return Struct(
            'sname' / Computed('game'),
            'signature' / Hex(Const(0xbdf9653b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_document=1),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'short_name' / TString,
            'title' / TString,
            'description' / TString,
            'photo' / self.photo_structures('photo'),
            'document' / If(this.flags.has_document, self.document_structures('document')))

    @constructor(0x63cacf26, 'account_auto_download_settings')
    def struct_0x63cacf26(self):
        return (
            'low' / self.struct_0xbaa57628(),
            'medium' / self.struct_0xbaa57628(),
            'high' / self.struct_0xbaa57628())

    @constructor(0xc077ec01, 'available_reaction')
    def struct_0xc077ec01(self):
        return Struct(
            'sname' / Computed('available_reaction'),
            'signature' / Hex(Const(0xc077ec01, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inactive=1,
                                is_premium=4,
                                has_around_animation=2),
            'reaction' / TString,
            'title' / TString,
            'static_icon' / self.document_structures('static_icon'),
            'appear_animation' / self.document_structures('appear_animation'),
            'select_animation' / self.document_structures('select_animation'),
            'activate_animation' / self.document_structures('activate_animation'),
            'effect_animation' / self.document_structures('effect_animation'),
            'around_animation' / If(this.flags.has_around_animation, self.document_structures('around_animation')),
            'center_icon' / If(this.flags.has_around_animation, self.document_structures('center_icon')))

    @constructor(0xa6f8f452, 'web_authorization')
    def struct_0xa6f8f452(self):
        return (
            'hash' / Int64ul,
            'bot_id' / Int64ul,
            'domain' / TString,
            'browser' / TString,
            'platform' / TString,
            'date_created' / Int32ul,
            'date_active' / Int32ul,
            'ip' / TString,
            'region' / TString)

    @constructor(0x1e8caaeb, 'post_address')
    def struct_0x1e8caaeb(self):
        return (
            'street_line1' / TString,
            'street_line2' / TString,
            'city' / TString,
            'state' / TString,
            'country_iso2' / TString,
            'post_code' / TString)

    @constructor(0x278f2868, 'channel_admin_log_event_action_send_message')
    def struct_0x278f2868(self):
        return ['message' / self.message_structures('message')]

    @constructor(0xcbce2fe0, 'stats_percent_value')
    def struct_0xcbce2fe0(self):
        return (
            'part' / Double,
            'total' / Double)

    @constructor(0xbaa57628, 'auto_download_settings')
    def struct_0xbaa57628(self):
        return Struct(
            'sname' / Computed('auto_download_settings'),
            'signature' / Hex(Const(0xbaa57628, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_disabled=1,
                                is_video_preload_large=2,
                                is_audio_preload_next=4,
                                is_phonecalls_less_data=8),
            'photo_size_max' / Int32ul,
            'video_size_max' / Int64ul,
            'file_size_max' / Int64ul,
            'video_upload_maxbitrate' / Int32ul,
            'small_queue_active_operations_max' / Int32ul,
            'large_queue_active_operations_max' / Int32ul)

    @constructor(0x811f854f, 'account_sent_email_code')
    def struct_0x811f854f(self):
        return (
            'email_pattern' / TString,
            'length' / Int32ul)

    @constructor(0xa927fec5, 'messages_inactive_chats')
    def struct_0xa927fec5(self):
        return (
            'dates' / self.vector(Int32ul, 'dates'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x5d7ceba5, 'channel_admin_rights_layer92')
    def struct_0x5d7ceba5(self):
        return Struct(
            'sname' / Computed('channel_admin_rights_layer92'),
            'signature' / Hex(Const(0x5d7ceba5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_change_info=1,
                                is_post_messages=2,
                                is_edit_messages=4,
                                is_delete_messages=8,
                                is_ban_users=16,
                                is_invite_users=32,
                                is_pin_messages=128,
                                is_add_admins=512,
                                is_manage_call=1024))

    @constructor(0x33db32f8, 'messages_translate_result')
    def struct_0x33db32f8(self):
        return ['result' / self.vector(self.struct_0x751f3146(), 'result')]

    @constructor(0xf47751b6, 'phone_group_participants')
    def struct_0xf47751b6(self):
        return (
            'count' / Int32ul,
            'participants' / self.vector(self.struct_0xeba636fe(), 'participants'),
            'next_offset' / TString,
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'version' / Int32ul)

    @constructor(0x3f4e0648, 'messages_message_empty')
    def struct_0x3f4e0648(self):
        return []

    @constructor(0x33f0ea47, 'secure_credentials_encrypted')
    def struct_0x33f0ea47(self):
        return (
            'data' / TBytes,
            'hash' / TBytes,
            'secret' / TBytes)

    @constructor(0x751f3146, 'text_with_entities')
    def struct_0x751f3146(self):
        return (
            'text' / TString,
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'))

    @constructor(0xed56c9fc, 'account_web_authorizations')
    def struct_0xed56c9fc(self):
        return (
            'authorizations' / self.vector(self.struct_0xa6f8f452(), 'authorizations'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xa56c2a3e, 'updates_state')
    def struct_0xa56c2a3e(self):
        return (
            'pts' / Int32ul,
            'qts' / Int32ul,
            'date' / TTimestamp,
            'seq' / Int32ul,
            'unread_count' / Int32ul)

    @constructor(0xcdc27a1f, 'payment_saved_credentials_card')
    def struct_0xcdc27a1f(self):
        return (
            'id' / TString,
            'title' / TString)

    @constructor(0x12b299d4, 'sticker_pack')
    def struct_0x12b299d4(self):
        return (
            'emoticon' / TString,
            'documents' / self.vector(Int64ul, 'documents'))

    @constructor(0xf141b5e1, 'input_encrypted_chat')
    def struct_0xf141b5e1(self):
        return (
            'chat_id' / Int32ul,
            'access_hash' / Int64ul)

    @constructor(0x8e1a1775, 'nearest_dc')
    def struct_0x8e1a1775(self):
        return (
            'country' / TString,
            'this_dc' / Int32ul,
            'nearest_dc' / Int32ul)

    @constructor(0xfb8fe43c, 'payments_saved_info')
    def struct_0xfb8fe43c(self):
        return Struct(
            'sname' / Computed('payments_saved_info'),
            'signature' / Hex(Const(0xfb8fe43c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_saved_credentials=2,
                                has_saved_info=1),
            'saved_info' / If(this.flags.has_saved_info, self.struct_0x909c3f94()))

    @constructor(0x31bd492d, 'messages_message_reactions_list')
    def struct_0x31bd492d(self):
        return Struct(
            'sname' / Computed('messages_message_reactions_list'),
            'signature' / Hex(Const(0x31bd492d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'reactions' / self.vector(self.message_peer_reaction_structures('reactions'), 'reactions'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @constructor(0xc13e3c50, 'imported_contact')
    def struct_0xc13e3c50(self):
        return (
            'user_id' / Int64ul,
            'client_id' / Int64ul)

    @constructor(0xf041e250, 'chat_onlines')
    def struct_0xf041e250(self):
        return ['onlines' / Int32ul]

    @constructor(0xb390dc08, 'page_related_article')
    def struct_0xb390dc08(self):
        return Struct(
            'sname' / Computed('page_related_article'),
            'signature' / Hex(Const(0xb390dc08, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1,
                                has_description=2,
                                has_photo_id=4,
                                has_author=8,
                                has_published_date=16),
            'url' / TString,
            'webpage_id' / Int64ul,
            'title' / If(this.flags.has_title, TString),
            'description' / If(this.flags.has_description, TString),
            'photo_id' / If(this.flags.has_photo_id, Int64ul),
            'author' / If(this.flags.has_author, TString),
            'published_date' / If(this.flags.has_published_date, TTimestamp))

    @constructor(0xb8d0afdf, 'account_days_ttl')
    def struct_0xb8d0afdf(self):
        return ['days' / Int32ul]

    @constructor(0x204bd158, 'phone_exported_group_call_invite')
    def struct_0x204bd158(self):
        return ['link' / TString]

    @constructor(0xc23727c9, 'account_password_input_settings')
    def struct_0xc23727c9(self):
        return Struct(
            'sname' / Computed('account_password_input_settings'),
            'signature' / Hex(Const(0xc23727c9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_new_algo=1,
                                has_email=2,
                                has_new_secure_settings=4),
            'new_algo' / If(this.flags.has_new_algo, self.password_kdf_algo_structures('new_algo')),
            'new_password_hash' / If(this.flags.has_new_algo, TBytes),
            'hint' / If(this.flags.has_new_algo, TString),
            'email' / If(this.flags.has_email, TString),
            'new_secure_settings' / If(this.flags.has_new_secure_settings, self.struct_0x1527bcac()))

    @constructor(0x18b7a10d, 'dc_option')
    def struct_0x18b7a10d(self):
        return Struct(
            'sname' / Computed('dc_option'),
            'signature' / Hex(Const(0x18b7a10d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_ipv6=1,
                                is_media_only=2,
                                is_tcpo_only=4,
                                is_cdn=8,
                                is_static=16,
                                has_secret=1024),
            'id' / Int32ul,
            'ip_address' / TString,
            'port' / Int32ul,
            'secret' / If(this.flags.has_secret, TBytes))

    @constructor(0xe0c0c5e5, 'page_table_row')
    def struct_0xe0c0c5e5(self):
        return ['cells' / self.vector(self.struct_0x34566b6a(), 'cells')]

    @constructor(0xa575739d, 'emoji_url')
    def struct_0xa575739d(self):
        return ['url' / TString]

    @constructor(0x1be31789, 'decrypted_message_layer')
    def struct_0x1be31789(self):
        return (
            'random_bytes' / TBytes,
            'layer' / Int32ul,
            'in_seq_no' / Int32ul,
            'out_seq_no' / Int32ul,
            'message' / self.decrypted_message_structures('message'))

    @constructor(0xeba636fe, 'group_call_participant')
    def struct_0xeba636fe(self):
        return Struct(
            'sname' / Computed('group_call_participant'),
            'signature' / Hex(Const(0xeba636fe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_muted=1,
                                is_left=2,
                                is_can_self_unmute=4,
                                is_just_joined=16,
                                is_versioned=32,
                                is_min=256,
                                is_muted_by_you=512,
                                is_volume_by_admin=1024,
                                is_self=4096,
                                is_video_joined=32768,
                                has_active_date=8,
                                has_volume=128,
                                has_about=2048,
                                has_raise_hand_rating=8192,
                                has_video=64,
                                has_presentation=16384),
            'peer' / self.peer_structures('peer'),
            'date' / TTimestamp,
            'active_date' / If(this.flags.has_active_date, TTimestamp),
            'source' / Int32ul,
            'volume' / If(this.flags.has_volume, Int32ul),
            'about' / If(this.flags.has_about, TString),
            'raise_hand_rating' / If(this.flags.has_raise_hand_rating, Int64ul),
            'video' / If(this.flags.has_video, self.struct_0x67753ac8()),
            'presentation' / If(this.flags.has_presentation, self.struct_0x67753ac8()))

    @constructor(0xf39b035c, 'file_hash')
    def struct_0xf39b035c(self):
        return (
            'offset' / Int64ul,
            'limit' / Int32ul,
            'hash' / TBytes)

    @constructor(0x3371c354, 'messages_peer_dialogs')
    def struct_0x3371c354(self):
        return (
            'dialogs' / self.vector(self.dialog_structures('dialogs'), 'dialogs'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'state' / self.struct_0xa56c2a3e())

    @constructor(0xedcdc05b, 'top_peer')
    def struct_0xedcdc05b(self):
        return (
            'peer' / self.peer_structures('peer'),
            'rating' / Double)

    @constructor(0x4bff8ea0, 'account_authorizations')
    def struct_0x4bff8ea0(self):
        return (
            'authorization_ttl_days' / Int32ul,
            'authorizations' / self.vector(self.struct_0xad01d61d(), 'authorizations'))

    @constructor(0x909c3f94, 'payment_requested_info')
    def struct_0x909c3f94(self):
        return Struct(
            'sname' / Computed('payment_requested_info'),
            'signature' / Hex(Const(0x909c3f94, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_name=1,
                                has_phone=2,
                                has_email=4,
                                has_shipping_address=8),
            'name' / If(this.flags.has_name, TString),
            'phone' / If(this.flags.has_phone, TString),
            'email' / If(this.flags.has_email, TString),
            'shipping_address' / If(this.flags.has_shipping_address, self.struct_0x1e8caaeb()))

    @constructor(0x7488ce5b, 'messages_get_emoji_groups')
    def struct_0x7488ce5b(self):
        return ['hash' / Int32ul]

    @constructor(0x21a548f3, 'messages_get_emoji_profile_photo_groups')
    def struct_0x21a548f3(self):
        return ['hash' / Int32ul]

    @constructor(0x2ecd56cd, 'messages_get_emoji_status_groups')
    def struct_0x2ecd56cd(self):
        return ['hash' / Int32ul]

    @constructor(0x2c11c0d7, 'messages_search_custom_emoji')
    def struct_0x2c11c0d7(self):
        return (
            'emoticon' / TString,
            'hash' / Int64ul)

    @constructor(0xe47cb579, 'messages_toggle_peer_translations')
    def struct_0xe47cb579(self):
        return Struct(
            'sname' / Computed('messages_toggle_peer_translations'),
            'signature' / Hex(Const(0xe47cb579, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_disabled=1),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0xa677244f, 'auth_send_code')
    def struct_0xa677244f(self):
        return (
            'phone_number' / TString,
            'api_id' / Int32ul,
            'api_hash' / TString,
            'settings' / self.struct_0xad253d78())

    @constructor(0x80eee427, 'auth_sign_up')
    def struct_0x80eee427(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'first_name' / TString,
            'last_name' / TString)

    @constructor(0xbcd51581, 'auth_sign_in_old')
    def struct_0xbcd51581(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'phone_code' / TString)

    @constructor(0x8d52a951, 'auth_sign_in')
    def struct_0x8d52a951(self):
        return Struct(
            'sname' / Computed('auth_sign_in'),
            'signature' / Hex(Const(0x8d52a951, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_phone_code=1,
                                has_email_verification=2),
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'phone_code' / If(this.flags.has_phone_code, TString),
            'email_verification' / If(this.flags.has_email_verification, self.email_verification_structures('email_verification')))

    @constructor(0x3e72ba19, 'auth_log_out')
    def struct_0x3e72ba19(self):
        return []

    @constructor(0x7e960193, 'auth_reset_login_email')
    def struct_0x7e960193(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString)

    @constructor(0x9fab0d1a, 'auth_reset_authorizations')
    def struct_0x9fab0d1a(self):
        return []

    @constructor(0xe5bfffcd, 'auth_export_authorization')
    def struct_0xe5bfffcd(self):
        return ['dc_id' / Int32ul]

    @constructor(0xa57a7dad, 'auth_import_authorization')
    def struct_0xa57a7dad(self):
        return (
            'id' / Int64ul,
            'bytes' / TBytes)

    @constructor(0xb7e085fe, 'auth_export_login_token')
    def struct_0xb7e085fe(self):
        return (
            'api_id' / Int32ul,
            'api_hash' / TString,
            'except_ids' / self.vector(Int64ul, 'except_ids'))

    @constructor(0x95ac5ce4, 'auth_import_login_token')
    def struct_0x95ac5ce4(self):
        return ['token' / TBytes]

    @constructor(0xe894ad4d, 'auth_accept_login_token')
    def struct_0xe894ad4d(self):
        return ['token' / TBytes]

    @constructor(0x0d36bf79, 'auth_check_recovery_password')
    def struct_0x0d36bf79(self):
        return ['code' / TString]

    @constructor(0x89464b50, 'auth_request_firebase_sms')
    def struct_0x89464b50(self):
        return Struct(
            'sname' / Computed('auth_request_firebase_sms'),
            'signature' / Hex(Const(0x89464b50, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_safety_net_token=1,
                                has_ios_push_secret=2),
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'safety_net_token' / If(this.flags.has_safety_net_token, TString),
            'ios_push_secret' / If(this.flags.has_ios_push_secret, TString))

    @constructor(0xec86017a, 'account_register_device')
    def struct_0xec86017a(self):
        return Struct(
            'sname' / Computed('account_register_device'),
            'signature' / Hex(Const(0xec86017a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_muted=1),
            'token_type' / Int32ul,
            'token' / TString,
            'app_sandbox' / TBool,
            'secret' / TBytes,
            'other_uids' / self.vector(Int64ul, 'other_uids'))

    @constructor(0x6a0d3206, 'account_unregister_device')
    def struct_0x6a0d3206(self):
        return (
            'token_type' / Int32ul,
            'token' / TString,
            'other_uids' / self.vector(Int64ul, 'other_uids'))

    @constructor(0x84be5b93, 'account_update_notify_settings')
    def struct_0x84be5b93(self):
        return (
            'peer' / self.input_notify_peer_structures('peer'),
            'settings' / self.struct_0xcacb6ae2())

    @constructor(0x12b3ad31, 'account_get_notify_settings')
    def struct_0x12b3ad31(self):
        return ['peer' / self.input_notify_peer_structures('peer')]

    @constructor(0xdb7e1747, 'account_reset_notify_settings')
    def struct_0xdb7e1747(self):
        return []

    @constructor(0x78515775, 'account_update_profile')
    def struct_0x78515775(self):
        return Struct(
            'sname' / Computed('account_update_profile'),
            'signature' / Hex(Const(0x78515775, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_first_name=1,
                                has_last_name=2,
                                has_about=4),
            'first_name' / If(this.flags.has_first_name, TString),
            'last_name' / If(this.flags.has_last_name, TString),
            'about' / If(this.flags.has_about, TString))

    @constructor(0x6628562c, 'account_update_status')
    def struct_0x6628562c(self):
        return ['offline' / TBool]

    @constructor(0x07967d36, 'account_get_wall_papers')
    def struct_0x07967d36(self):
        return ['hash' / Int64ul]

    @constructor(0x0d91a548, 'users_get_users')
    def struct_0x0d91a548(self):
        return ['id' / self.vector(self.input_user_structures('id'), 'id')]

    @constructor(0xc5ba3d86, 'account_report_peer')
    def struct_0xc5ba3d86(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'reason' / self.report_reason_structures('reason'),
            'message' / TString)

    @constructor(0x9308ce1b, 'account_reset_password')
    def struct_0x9308ce1b(self):
        return []

    @constructor(0x4c9409f6, 'account_decline_password_reset')
    def struct_0x4c9409f6(self):
        return []

    @constructor(0xd638de89, 'account_get_chat_themes')
    def struct_0xd638de89(self):
        return ['hash' / Int64ul]

    @constructor(0xbf899aa0, 'account_set_authorization_ttl')
    def struct_0xbf899aa0(self):
        return ['authorization_ttl_days' / Int32ul]

    @constructor(0x40f48462, 'account_change_authorization_settings')
    def struct_0x40f48462(self):
        return Struct(
            'sname' / Computed('account_change_authorization_settings'),
            'signature' / Hex(Const(0x40f48462, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_confirmed=8,
                                has_encrypted_requests_disabled=1,
                                has_call_requests_disabled=2),
            'hash' / Int64ul,
            'encrypted_requests_disabled' / If(this.flags.has_encrypted_requests_disabled, TBool),
            'call_requests_disabled' / If(this.flags.has_call_requests_disabled, TBool))

    @constructor(0xb60f5918, 'users_get_full_user')
    def struct_0xb60f5918(self):
        return ['id' / self.input_user_structures('id')]

    @constructor(0xa622aa10, 'users_get_is_premium_required_to_contact')
    def struct_0xa622aa10(self):
        return ['id' / self.vector(self.input_user_structures('id'), 'id')]

    @constructor(0xc4a353ee, 'contacts_get_statuses')
    def struct_0xc4a353ee(self):
        return []

    @constructor(0x5dd69e12, 'contacts_get_contacts')
    def struct_0x5dd69e12(self):
        return ['hash' / Int64ul]

    @constructor(0x2c800be5, 'contacts_import_contacts')
    def struct_0x2c800be5(self):
        return ['contacts' / self.vector(self.struct_0xf392b7f4(), 'contacts')]

    @constructor(0x096a0e00, 'contacts_delete_contacts')
    def struct_0x096a0e00(self):
        return ['id' / self.vector(self.input_user_structures('id'), 'id')]

    @constructor(0x1013fd9e, 'contacts_delete_by_phones')
    def struct_0x1013fd9e(self):
        return ['phones' / self.vector(TString, 'phones')]

    @constructor(0x2e2e8734, 'contacts_block')
    def struct_0x2e2e8734(self):
        return Struct(
            'sname' / Computed('contacts_block'),
            'signature' / Hex(Const(0x2e2e8734, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my_stories_from=1),
            'id' / self.input_peer_structures('id'))

    @constructor(0xb550d328, 'contacts_unblock')
    def struct_0xb550d328(self):
        return Struct(
            'sname' / Computed('contacts_unblock'),
            'signature' / Hex(Const(0xb550d328, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my_stories_from=1),
            'id' / self.input_peer_structures('id'))

    @constructor(0x9a868f80, 'contacts_get_blocked')
    def struct_0x9a868f80(self):
        return Struct(
            'sname' / Computed('contacts_get_blocked'),
            'signature' / Hex(Const(0x9a868f80, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my_stories_from=1),
            'offset' / Int32ul,
            'limit' / Int32ul)

    @constructor(0x84e53737, 'contacts_export_card')
    def struct_0x84e53737(self):
        return []

    @constructor(0x4fe196fe, 'contacts_import_card')
    def struct_0x4fe196fe(self):
        return ['export_card' / self.vector(Int32ul, 'export_card')]

    @constructor(0x879537f1, 'contacts_reset_saved')
    def struct_0x879537f1(self):
        return []

    @constructor(0x8514bdda, 'contacts_toggle_top_peers')
    def struct_0x8514bdda(self):
        return ['enabled' / TBool]

    @constructor(0xe8f463d0, 'contacts_add_contact')
    def struct_0xe8f463d0(self):
        return Struct(
            'sname' / Computed('contacts_add_contact'),
            'signature' / Hex(Const(0xe8f463d0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_add_phone_privacy_exception=1),
            'id' / self.input_user_structures('id'),
            'first_name' / TString,
            'last_name' / TString,
            'phone' / TString)

    @constructor(0xf831a20f, 'contacts_accept_contact')
    def struct_0xf831a20f(self):
        return ['id' / self.input_user_structures('id')]

    @constructor(0xd348bc44, 'contacts_get_located')
    def struct_0xd348bc44(self):
        return Struct(
            'sname' / Computed('contacts_get_located'),
            'signature' / Hex(Const(0xd348bc44, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_background=2,
                                has_self_expires=1),
            'geo_point' / self.input_geo_point_structures('geo_point'),
            'self_expires' / If(this.flags.has_self_expires, Int32ul))

    @constructor(0x29a8962c, 'contacts_block_from_replies')
    def struct_0x29a8962c(self):
        return Struct(
            'sname' / Computed('contacts_block_from_replies'),
            'signature' / Hex(Const(0x29a8962c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_delete_message=1,
                                is_delete_history=2,
                                is_report_spam=4),
            'msg_id' / Int32ul)

    @constructor(0x8af94344, 'contacts_resolve_phone')
    def struct_0x8af94344(self):
        return ['phone' / TString]

    @constructor(0x4222fa74, 'messages_get_messages')
    def struct_0x4222fa74(self):
        return ['id' / self.vector(Int32ul, 'id')]

    @constructor(0xa0f4cb4f, 'messages_get_dialogs')
    def struct_0xa0f4cb4f(self):
        return Struct(
            'sname' / Computed('messages_get_dialogs'),
            'signature' / Hex(Const(0xa0f4cb4f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_pinned=1,
                                has_folder_id=2),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'offset_date' / TTimestamp,
            'offset_id' / Int32ul,
            'offset_peer' / self.input_peer_structures('offset_peer'),
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x4423e6c5, 'messages_get_history')
    def struct_0x4423e6c5(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'offset_id' / Int32ul,
            'offset_date' / TTimestamp,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x29ee847a, 'messages_search')
    def struct_0x29ee847a(self):
        return Struct(
            'sname' / Computed('messages_search'),
            'signature' / Hex(Const(0x29ee847a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_from_id=1,
                                has_saved_peer_id=4,
                                has_saved_reaction=8,
                                has_top_msg_id=2),
            'peer' / self.input_peer_structures('peer'),
            'q' / TString,
            'from_id' / If(this.flags.has_from_id, self.input_peer_structures('from_id')),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.input_peer_structures('saved_peer_id')),
            'saved_reaction' / If(this.flags.has_saved_reaction, self.vector(self.reaction_structures('saved_reaction'), 'saved_reaction')),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'filter' / self.messages_filter_structures('filter'),
            'min_date' / TTimestamp,
            'max_date' / TTimestamp,
            'offset_id' / Int32ul,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x2ca51fd1, 'help_get_terms_of_service_update')
    def struct_0x2ca51fd1(self):
        return []

    @constructor(0xee72f79a, 'help_accept_terms_of_service')
    def struct_0xee72f79a(self):
        return ['id' / self.struct_0x7d748d04()]

    @constructor(0xc661ad08, 'help_get_passport_config')
    def struct_0xc661ad08(self):
        return ['hash' / Int32ul]

    @constructor(0xd360e72c, 'help_get_support_name')
    def struct_0xd360e72c(self):
        return []

    @constructor(0xb81b93d4, 'help_get_premium_promo')
    def struct_0xb81b93d4(self):
        return []

    @constructor(0x038a08d3, 'help_get_user_info')
    def struct_0x038a08d3(self):
        return ['user_id' / self.input_user_structures('user_id')]

    @constructor(0x66b91b70, 'help_edit_user_info')
    def struct_0x66b91b70(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'message' / TString,
            'entities' / self.vector(self.message_entity_structures('entities'), 'entities'))

    @constructor(0xc0977421, 'help_get_promo_data')
    def struct_0xc0977421(self):
        return []

    @constructor(0x1e251c95, 'help_hide_promo_data')
    def struct_0x1e251c95(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xf50dbaa1, 'help_dismiss_suggestion')
    def struct_0xf50dbaa1(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'suggestion' / TString)

    @constructor(0x735787a8, 'help_get_countries_list')
    def struct_0x735787a8(self):
        return (
            'lang_code' / TString,
            'hash' / Int32ul)

    @constructor(0x0e306d3a, 'messages_read_history')
    def struct_0x0e306d3a(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'max_id' / Int32ul)

    @constructor(0xb08f922a, 'messages_delete_history')
    def struct_0xb08f922a(self):
        return Struct(
            'sname' / Computed('messages_delete_history'),
            'signature' / Hex(Const(0xb08f922a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_just_clear=1,
                                is_revoke=2,
                                has_min_date=4,
                                has_max_date=8),
            'peer' / self.input_peer_structures('peer'),
            'max_id' / Int32ul,
            'min_date' / If(this.flags.has_min_date, TTimestamp),
            'max_date' / If(this.flags.has_max_date, TTimestamp))

    @constructor(0x6e98102b, 'messages_delete_saved_history')
    def struct_0x6e98102b(self):
        return Struct(
            'sname' / Computed('messages_delete_saved_history'),
            'signature' / Hex(Const(0x6e98102b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_min_date=4,
                                has_max_date=8),
            'peer' / self.input_peer_structures('peer'),
            'max_id' / Int32ul,
            'min_date' / If(this.flags.has_min_date, TTimestamp),
            'max_date' / If(this.flags.has_max_date, TTimestamp))

    @constructor(0xeabbb94c, 'channels_toggle_pre_history_hidden')
    def struct_0xeabbb94c(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0xf5dad378, 'channels_get_groups_for_discussion')
    def struct_0xf5dad378(self):
        return []

    @constructor(0x40582bb2, 'channels_set_discussion_group')
    def struct_0x40582bb2(self):
        return (
            'broadcast' / self.input_channel_structures('broadcast'),
            'group' / self.input_channel_structures('group'))

    @constructor(0x8f38cd1f, 'channels_edit_creator')
    def struct_0x8f38cd1f(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'user_id' / self.input_user_structures('user_id'),
            'password' / self.input_check_password_srp_structures('password'))

    @constructor(0x58e63f6d, 'channels_edit_location')
    def struct_0x58e63f6d(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'geo_point' / self.input_geo_point_structures('geo_point'),
            'address' / TString)

    @constructor(0xa85bd1c2, 'messages_edit_chat_admin')
    def struct_0xa85bd1c2(self):
        return (
            'chat_id' / Int64ul,
            'user_id' / self.input_user_structures('user_id'),
            'is_admin' / TBool)

    @constructor(0xa2875319, 'messages_migrate_chat')
    def struct_0xa2875319(self):
        return ['chat_id' / Int64ul]

    @constructor(0x4bc6589a, 'messages_search_global')
    def struct_0x4bc6589a(self):
        return Struct(
            'sname' / Computed('messages_search_global'),
            'signature' / Hex(Const(0x4bc6589a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_broadcasts_only=2,
                                is_groups_only=4,
                                is_users_only=8,
                                has_folder_id=1),
            'folder_id' / If(this.flags.has_folder_id, Int32ul),
            'q' / TString,
            'filter' / self.messages_filter_structures('filter'),
            'min_date' / TTimestamp,
            'max_date' / TTimestamp,
            'offset_rate' / Int32ul,
            'offset_peer' / self.input_peer_structures('offset_peer'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xe58e95d2, 'messages_delete_messages')
    def struct_0xe58e95d2(self):
        return Struct(
            'sname' / Computed('messages_delete_messages'),
            'signature' / Hex(Const(0xe58e95d2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoke=1),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x05a954c0, 'messages_received_messages')
    def struct_0x05a954c0(self):
        return ['max_id' / Int32ul]

    @constructor(0x58943ee2, 'messages_set_typing')
    def struct_0x58943ee2(self):
        return Struct(
            'sname' / Computed('messages_set_typing'),
            'signature' / Hex(Const(0x58943ee2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'action' / self.send_message_action_structures('action'))

    @constructor(0xdff8042c, 'messages_send_message')
    def struct_0xdff8042c(self):
        return Struct(
            'sname' / Computed('messages_send_message'),
            'signature' / Hex(Const(0xdff8042c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_reply_markup=4,
                                has_entities=8,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'message' / TString,
            'random_id' / Int64ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')))

    @constructor(0x7bd66041, 'messages_send_media')
    def struct_0x7bd66041(self):
        return Struct(
            'sname' / Computed('messages_send_media'),
            'signature' / Hex(Const(0x7bd66041, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_reply_markup=4,
                                has_entities=8,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'media' / self.input_media_structures('media'),
            'message' / TString,
            'random_id' / Int64ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')))

    @constructor(0xd5039208, 'messages_forward_messages')
    def struct_0xd5039208(self):
        return Struct(
            'sname' / Computed('messages_forward_messages'),
            'signature' / Hex(Const(0xd5039208, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_with_my_score=256,
                                is_drop_author=2048,
                                is_drop_media_captions=4096,
                                is_noforwards=16384,
                                has_top_msg_id=512,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072),
            'from_peer' / self.input_peer_structures('from_peer'),
            'id' / self.vector(Int32ul, 'id'),
            'random_id' / self.vector(Int64ul, 'random_id'),
            'to_peer' / self.input_peer_structures('to_peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')))

    @constructor(0xcf1592db, 'messages_report_spam')
    def struct_0xcf1592db(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xefd9a6a2, 'messages_get_peer_settings')
    def struct_0xefd9a6a2(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x8953ab4e, 'messages_report')
    def struct_0x8953ab4e(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'reason' / self.report_reason_structures('reason'),
            'message' / TString)

    @constructor(0x49e9528f, 'messages_get_chats')
    def struct_0x49e9528f(self):
        return ['id' / self.vector(Int64ul, 'id')]

    @constructor(0xaeb00b34, 'messages_get_full_chat')
    def struct_0xaeb00b34(self):
        return ['chat_id' / Int64ul]

    @constructor(0x73783ffd, 'messages_edit_chat_title')
    def struct_0x73783ffd(self):
        return (
            'chat_id' / Int64ul,
            'title' / TString)

    @constructor(0x35ddd674, 'messages_edit_chat_photo')
    def struct_0x35ddd674(self):
        return (
            'chat_id' / Int64ul,
            'photo' / self.input_chat_photo_structures('photo'))

    @constructor(0xf24753e3, 'messages_add_chat_user')
    def struct_0xf24753e3(self):
        return (
            'chat_id' / Int64ul,
            'user_id' / self.input_user_structures('user_id'),
            'fwd_limit' / Int32ul)

    @constructor(0xa2185cab, 'messages_delete_chat_user')
    def struct_0xa2185cab(self):
        return Struct(
            'sname' / Computed('messages_delete_chat_user'),
            'signature' / Hex(Const(0xa2185cab, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoke_history=1),
            'chat_id' / Int64ul,
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0x0034a818, 'messages_create_chat')
    def struct_0x0034a818(self):
        return Struct(
            'sname' / Computed('messages_create_chat'),
            'signature' / Hex(Const(0x0034a818, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_ttl_period=1),
            'users' / self.vector(self.input_user_structures('users'), 'users'),
            'title' / TString,
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0x6aa3f6bd, 'messages_get_search_results_calendar')
    def struct_0x6aa3f6bd(self):
        return Struct(
            'sname' / Computed('messages_get_search_results_calendar'),
            'signature' / Hex(Const(0x6aa3f6bd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_saved_peer_id=4),
            'peer' / self.input_peer_structures('peer'),
            'filter' / self.messages_filter_structures('filter'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.input_peer_structures('saved_peer_id')),
            'offset_id' / Int32ul,
            'offset_date' / TTimestamp)

    @constructor(0xedd4882a, 'updates_get_state')
    def struct_0xedd4882a(self):
        return []

    @constructor(0x25939651, 'updates_get_difference')
    def struct_0x25939651(self):
        return Struct(
            'sname' / Computed('updates_get_difference'),
            'signature' / Hex(Const(0x25939651, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_pts_total_limit=1),
            'pts' / Int32ul,
            'pts_total_limit' / If(this.flags.has_pts_total_limit, Int32ul),
            'date' / TTimestamp,
            'qts' / Int32ul)

    @constructor(0x03173d78, 'updates_get_channel_difference')
    def struct_0x03173d78(self):
        return Struct(
            'sname' / Computed('updates_get_channel_difference'),
            'signature' / Hex(Const(0x03173d78, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force=1),
            'channel' / self.input_channel_structures('channel'),
            'filter' / self.channel_messages_filter_structures('filter'),
            'pts' / Int32ul,
            'limit' / Int32ul)

    @constructor(0x09e82039, 'photos_update_profile_photo')
    def struct_0x09e82039(self):
        return Struct(
            'sname' / Computed('photos_update_profile_photo'),
            'signature' / Hex(Const(0x09e82039, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_fallback=1,
                                has_bot=2),
            'bot' / If(this.flags.has_bot, self.input_user_structures('bot')),
            'id' / self.input_photo_structures('id'))

    @constructor(0x0388a3b5, 'photos_upload_profile_photo')
    def struct_0x0388a3b5(self):
        return Struct(
            'sname' / Computed('photos_upload_profile_photo'),
            'signature' / Hex(Const(0x0388a3b5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_fallback=8,
                                has_bot=32,
                                has_file=1,
                                has_video=2,
                                has_video_start_ts=4,
                                has_video_emoji_markup=16),
            'bot' / If(this.flags.has_bot, self.input_user_structures('bot')),
            'file' / If(this.flags.has_file, self.input_file_structures('file')),
            'video' / If(this.flags.has_video, self.input_file_structures('video')),
            'video_start_ts' / If(this.flags.has_video_start_ts, Double),
            'video_emoji_markup' / If(this.flags.has_video_emoji_markup, self.video_size_structures('video_emoji_markup')))

    @constructor(0x87cf7f2f, 'photos_delete_photos')
    def struct_0x87cf7f2f(self):
        return ['id' / self.vector(self.input_photo_structures('id'), 'id')]

    @constructor(0xbe5335be, 'upload_get_file')
    def struct_0xbe5335be(self):
        return Struct(
            'sname' / Computed('upload_get_file'),
            'signature' / Hex(Const(0xbe5335be, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_precise=1,
                                is_cdn_supported=2),
            'location' / self.input_file_location_structures('location'),
            'offset' / Int64ul,
            'limit' / Int32ul)

    @constructor(0xc4f9186b, 'help_get_config')
    def struct_0xc4f9186b(self):
        return []

    @constructor(0x1fb33026, 'help_get_nearest_dc')
    def struct_0x1fb33026(self):
        return []

    @constructor(0x522d5a7d, 'help_get_app_update')
    def struct_0x522d5a7d(self):
        return ['source' / TString]

    @constructor(0x61e3f854, 'help_get_app_config')
    def struct_0x61e3f854(self):
        return ['hash' / Int32ul]

    @constructor(0x6f02f748, 'help_save_app_log')
    def struct_0x6f02f748(self):
        return ['events' / self.vector(self.struct_0x1d1b1245(), 'events')]

    @constructor(0x4d392343, 'help_get_invite_text')
    def struct_0x4d392343(self):
        return []

    @constructor(0x91cd32a8, 'photos_get_user_photos')
    def struct_0x91cd32a8(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'offset' / Int32ul,
            'max_id' / Int64ul,
            'limit' / Int32ul)

    @constructor(0x33963bf9, 'messages_forward_message')
    def struct_0x33963bf9(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'random_id' / Int64ul)

    @constructor(0x26cf8950, 'messages_get_dh_config')
    def struct_0x26cf8950(self):
        return (
            'version' / Int32ul,
            'random_length' / Int32ul)

    @constructor(0xf64daf43, 'messages_request_encryption')
    def struct_0xf64daf43(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'random_id' / Int32ul,
            'g_a' / TBytes)

    @constructor(0x3dbc0415, 'messages_accept_encryption')
    def struct_0x3dbc0415(self):
        return (
            'peer' / self.struct_0xf141b5e1(),
            'g_b' / TBytes,
            'key_fingerprint' / Int64ul)

    @constructor(0xf393aea0, 'messages_discard_encryption')
    def struct_0xf393aea0(self):
        return Struct(
            'sname' / Computed('messages_discard_encryption'),
            'signature' / Hex(Const(0xf393aea0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_delete_history=1),
            'chat_id' / Int32ul)

    @constructor(0x791451ed, 'messages_set_encrypted_typing')
    def struct_0x791451ed(self):
        return (
            'peer' / self.struct_0xf141b5e1(),
            'typing' / TBool)

    @constructor(0x7f4b690a, 'messages_read_encrypted_history')
    def struct_0x7f4b690a(self):
        return (
            'peer' / self.struct_0xf141b5e1(),
            'max_date' / TTimestamp)

    @constructor(0x55a5bb66, 'messages_received_queue')
    def struct_0x55a5bb66(self):
        return ['max_qts' / Int32ul]

    @constructor(0x4b0c8c0f, 'messages_report_encrypted_spam')
    def struct_0x4b0c8c0f(self):
        return ['peer' / self.struct_0xf141b5e1()]

    @constructor(0x9cdf08cd, 'help_get_support')
    def struct_0x9cdf08cd(self):
        return []

    @constructor(0x36a73f77, 'messages_read_message_contents')
    def struct_0x36a73f77(self):
        return ['id' / self.vector(Int32ul, 'id')]

    @constructor(0x2714d86c, 'account_check_username')
    def struct_0x2714d86c(self):
        return ['username' / TString]

    @constructor(0x3e0bdd7c, 'account_update_username')
    def struct_0x3e0bdd7c(self):
        return ['username' / TString]

    @constructor(0x11f812d8, 'contacts_search')
    def struct_0x11f812d8(self):
        return (
            'q' / TString,
            'limit' / Int32ul)

    @constructor(0xdadbc950, 'account_get_privacy')
    def struct_0xdadbc950(self):
        return ['key' / self.input_privacy_key_structures('key')]

    @constructor(0xc9f81ce8, 'account_set_privacy')
    def struct_0xc9f81ce8(self):
        return (
            'key' / self.input_privacy_key_structures('key'),
            'rules' / self.vector(self.input_privacy_rule_structures('rules'), 'rules'))

    @constructor(0x418d4e0b, 'account_delete_account')
    def struct_0x418d4e0b(self):
        return ['reason' / TString]

    @constructor(0x08fc711d, 'account_get_account_ttl')
    def struct_0x08fc711d(self):
        return []

    @constructor(0x2442485e, 'account_set_account_ttl')
    def struct_0x2442485e(self):
        return ['ttl' / self.struct_0xb8d0afdf()]

    @constructor(0xf93ccba3, 'contacts_resolve_username')
    def struct_0xf93ccba3(self):
        return ['username' / TString]

    @constructor(0x973478b6, 'contacts_get_top_peers')
    def struct_0x973478b6(self):
        return Struct(
            'sname' / Computed('contacts_get_top_peers'),
            'signature' / Hex(Const(0x973478b6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_correspondents=1,
                                is_bots_pm=2,
                                is_bots_inline=4,
                                is_phone_calls=8,
                                is_forward_users=16,
                                is_forward_chats=32,
                                is_groups=1024,
                                is_channels=32768,
                                is_bots_app=65536),
            'offset' / Int32ul,
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x1ae373ac, 'contacts_reset_top_peer_rating')
    def struct_0x1ae373ac(self):
        return (
            'category' / self.top_peer_category_structures('category'),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0x82574ae5, 'account_send_change_phone_code')
    def struct_0x82574ae5(self):
        return (
            'phone_number' / TString,
            'settings' / self.struct_0xad253d78())

    @constructor(0x70c32edb, 'account_change_phone')
    def struct_0x70c32edb(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'phone_code' / TString)

    @constructor(0x182e6d6f, 'account_get_web_authorizations')
    def struct_0x182e6d6f(self):
        return []

    @constructor(0x2d01b9ef, 'account_reset_web_authorization')
    def struct_0x2d01b9ef(self):
        return ['hash' / Int64ul]

    @constructor(0x682d2594, 'account_reset_web_authorizations')
    def struct_0x682d2594(self):
        return []

    @constructor(0x65ad71dc, 'account_get_multi_wall_papers')
    def struct_0x65ad71dc(self):
        return ['wallpapers' / self.vector(self.input_wall_paper_structures('wallpapers'), 'wallpapers')]

    @constructor(0xeb2b4cf6, 'account_get_global_privacy_settings')
    def struct_0xeb2b4cf6(self):
        return []

    @constructor(0x1edaaac2, 'account_set_global_privacy_settings')
    def struct_0x1edaaac2(self):
        return ['settings' / self.struct_0x734c4ccb()]

    @constructor(0xfa8cc6f5, 'account_report_profile_photo')
    def struct_0xfa8cc6f5(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'photo_id' / self.input_photo_structures('photo_id'),
            'reason' / self.report_reason_structures('reason'),
            'message' / TString)

    @constructor(0xb288bc7d, 'account_get_all_secure_values')
    def struct_0xb288bc7d(self):
        return []

    @constructor(0x73665bc2, 'account_get_secure_value')
    def struct_0x73665bc2(self):
        return ['types' / self.vector(self.secure_value_type_structures('types'), 'types')]

    @constructor(0x899fe31d, 'account_save_secure_value')
    def struct_0x899fe31d(self):
        return (
            'value' / self.struct_0xdb21d0a7(),
            'secure_secret_id' / Int64ul)

    @constructor(0xb880bc4b, 'account_delete_secure_value')
    def struct_0xb880bc4b(self):
        return ['types' / self.vector(self.secure_value_type_structures('types'), 'types')]

    @constructor(0xa929597a, 'account_get_authorization_form')
    def struct_0xa929597a(self):
        return (
            'bot_id' / Int64ul,
            'scope' / TString,
            'public_key' / TString)

    @constructor(0xf3ed4c73, 'account_accept_authorization')
    def struct_0xf3ed4c73(self):
        return (
            'bot_id' / Int64ul,
            'scope' / TString,
            'public_key' / TString,
            'value_hashes' / self.vector(self.struct_0xed1ecdb0(), 'value_hashes'),
            'credentials' / self.struct_0x33f0ea47())

    @constructor(0xa5a356f9, 'account_send_verify_phone_code')
    def struct_0xa5a356f9(self):
        return (
            'phone_number' / TString,
            'settings' / self.struct_0xad253d78())

    @constructor(0x4dd3a7f6, 'account_verify_phone')
    def struct_0x4dd3a7f6(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'phone_code' / TString)

    @constructor(0x98e037bb, 'account_send_verify_email_code')
    def struct_0x98e037bb(self):
        return (
            'purpose' / self.email_verify_purpose_structures('purpose'),
            'email' / TString)

    @constructor(0x032da4cf, 'account_verify_email')
    def struct_0x032da4cf(self):
        return (
            'purpose' / self.email_verify_purpose_structures('purpose'),
            'verification' / self.email_verification_structures('verification'))

    @constructor(0x8fdf1920, 'account_confirm_password_email')
    def struct_0x8fdf1920(self):
        return ['code' / TString]

    @constructor(0x7a7f2a15, 'account_resend_password_email')
    def struct_0x7a7f2a15(self):
        return []

    @constructor(0xc1cbd5b6, 'account_cancel_password_email')
    def struct_0xc1cbd5b6(self):
        return []

    @constructor(0x9f07c728, 'account_get_contact_sign_up_notification')
    def struct_0x9f07c728(self):
        return []

    @constructor(0xcff43f61, 'account_set_contact_sign_up_notification')
    def struct_0xcff43f61(self):
        return ['silent' / TBool]

    @constructor(0x53577479, 'account_get_notify_exceptions')
    def struct_0x53577479(self):
        return Struct(
            'sname' / Computed('account_get_notify_exceptions'),
            'signature' / Hex(Const(0x53577479, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_compare_sound=2,
                                has_peer=1),
            'peer' / If(this.flags.has_peer, self.input_notify_peer_structures('peer')))

    @constructor(0xfc8ddbea, 'account_get_wall_paper')
    def struct_0xfc8ddbea(self):
        return ['wallpaper' / self.input_wall_paper_structures('wallpaper')]

    @constructor(0xdd853661, 'account_upload_wall_paper')
    def struct_0xdd853661(self):
        return (
            'file' / self.input_file_structures('file'),
            'mime_type' / TString,
            'settings' / self.wall_paper_settings_structures('settings'))

    @constructor(0x6c5a5b37, 'account_save_wall_paper')
    def struct_0x6c5a5b37(self):
        return (
            'wallpaper' / self.input_wall_paper_structures('wallpaper'),
            'unsave' / TBool,
            'settings' / self.wall_paper_settings_structures('settings'))

    @constructor(0xfeed5769, 'account_install_wall_paper')
    def struct_0xfeed5769(self):
        return (
            'wallpaper' / self.input_wall_paper_structures('wallpaper'),
            'settings' / self.wall_paper_settings_structures('settings'))

    @constructor(0xbb3b9804, 'account_reset_wall_papers')
    def struct_0xbb3b9804(self):
        return []

    @constructor(0x56da0b3f, 'account_get_auto_download_settings')
    def struct_0x56da0b3f(self):
        return []

    @constructor(0x76f36233, 'account_save_auto_download_settings')
    def struct_0x76f36233(self):
        return Struct(
            'sname' / Computed('account_save_auto_download_settings'),
            'signature' / Hex(Const(0x76f36233, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_low=1,
                                is_high=2),
            'settings' / self.struct_0xbaa57628())

    @constructor(0x1c3db333, 'account_upload_theme')
    def struct_0x1c3db333(self):
        return Struct(
            'sname' / Computed('account_upload_theme'),
            'signature' / Hex(Const(0x1c3db333, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_thumb=1),
            'file' / self.input_file_structures('file'),
            'thumb' / If(this.flags.has_thumb, self.input_file_structures('thumb')),
            'file_name' / TString,
            'mime_type' / TString)

    @constructor(0x8432c21f, 'account_create_theme')
    def struct_0x8432c21f(self):
        return Struct(
            'sname' / Computed('account_create_theme'),
            'signature' / Hex(Const(0x8432c21f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_document=4,
                                has_settings=8),
            'slug' / TString,
            'title' / TString,
            'document' / If(this.flags.has_document, self.input_document_structures('document')),
            'settings' / If(this.flags.has_settings, self.struct_0x8fde504f()))

    @constructor(0x5cb367d5, 'account_update_theme')
    def struct_0x5cb367d5(self):
        return Struct(
            'sname' / Computed('account_update_theme'),
            'signature' / Hex(Const(0x5cb367d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_slug=1,
                                has_title=2,
                                has_document=4,
                                has_settings=8),
            'format' / TString,
            'theme' / self.input_theme_structures('theme'),
            'slug' / If(this.flags.has_slug, TString),
            'title' / If(this.flags.has_title, TString),
            'document' / If(this.flags.has_document, self.input_document_structures('document')),
            'settings' / If(this.flags.has_settings, self.struct_0x8fde504f()))

    @constructor(0xf257106c, 'account_save_theme')
    def struct_0xf257106c(self):
        return (
            'theme' / self.input_theme_structures('theme'),
            'unsave' / TBool)

    @constructor(0x7ae43737, 'account_install_theme')
    def struct_0x7ae43737(self):
        return Struct(
            'sname' / Computed('account_install_theme'),
            'signature' / Hex(Const(0x7ae43737, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1,
                                has_format=2),
            'format' / If(this.flags.has_format, TString),
            'theme' / If(this.flags.has_format, self.input_theme_structures('theme')))

    @constructor(0x8d9d742b, 'account_get_theme')
    def struct_0x8d9d742b(self):
        return (
            'format' / TString,
            'theme' / self.input_theme_structures('theme'),
            'document_id' / Int64ul)

    @constructor(0x7206e458, 'account_get_themes')
    def struct_0x7206e458(self):
        return (
            'format' / TString,
            'hash' / Int64ul)

    @constructor(0xfbd3de6b, 'account_update_emoji_status')
    def struct_0xfbd3de6b(self):
        return ['emoji_status' / self.emoji_status_structures('emoji_status')]

    @constructor(0xa60ab9ce, 'account_get_default_background_emojis')
    def struct_0xa60ab9ce(self):
        return ['hash' / Int64ul]

    @constructor(0x7727a7d5, 'account_get_channel_default_emoji_statuses')
    def struct_0x7727a7d5(self):
        return ['hash' / Int64ul]

    @constructor(0xd6753386, 'account_get_default_emoji_statuses')
    def struct_0xd6753386(self):
        return ['hash' / Int64ul]

    @constructor(0x0f578105, 'account_get_recent_emoji_statuses')
    def struct_0x0f578105(self):
        return ['hash' / Int64ul]

    @constructor(0x18201aae, 'account_clear_recent_emoji_statuses')
    def struct_0x18201aae(self):
        return []

    @constructor(0x38df3532, 'account_update_device_locked')
    def struct_0x38df3532(self):
        return ['period' / Int32ul]

    @constructor(0x8b68b0cc, 'messages_get_web_page_preview')
    def struct_0x8b68b0cc(self):
        return Struct(
            'sname' / Computed('messages_get_web_page_preview'),
            'signature' / Hex(Const(0x8b68b0cc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=8),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')))

    @constructor(0xe320c158, 'account_get_authorizations')
    def struct_0xe320c158(self):
        return []

    @constructor(0xdf77f3bc, 'account_reset_authorization')
    def struct_0xdf77f3bc(self):
        return ['hash' / Int64ul]

    @constructor(0x548a30f5, 'account_get_password')
    def struct_0x548a30f5(self):
        return []

    @constructor(0x9cd4eaf9, 'account_get_password_settings')
    def struct_0x9cd4eaf9(self):
        return ['password' / self.input_check_password_srp_structures('password')]

    @constructor(0xa59b102f, 'account_update_password_settings')
    def struct_0xa59b102f(self):
        return (
            'password' / self.input_check_password_srp_structures('password'),
            'new_settings' / self.struct_0xc23727c9())

    @constructor(0x1b3faa88, 'account_send_confirm_phone_code')
    def struct_0x1b3faa88(self):
        return (
            'hash' / TString,
            'settings' / self.struct_0xad253d78())

    @constructor(0x5f2178c3, 'account_confirm_phone')
    def struct_0x5f2178c3(self):
        return (
            'phone_code_hash' / TString,
            'phone_code' / TString)

    @constructor(0x449e0b51, 'account_get_tmp_password')
    def struct_0x449e0b51(self):
        return (
            'password' / self.input_check_password_srp_structures('password'),
            'period' / Int32ul)

    @constructor(0xd18b4d16, 'auth_check_password')
    def struct_0xd18b4d16(self):
        return ['password' / self.input_check_password_srp_structures('password')]

    @constructor(0xd897bc66, 'auth_request_password_recovery')
    def struct_0xd897bc66(self):
        return []

    @constructor(0x37096c70, 'auth_recover_password')
    def struct_0x37096c70(self):
        return Struct(
            'sname' / Computed('auth_recover_password'),
            'signature' / Hex(Const(0x37096c70, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_new_settings=1),
            'code' / TString,
            'new_settings' / If(this.flags.has_new_settings, self.struct_0xc23727c9()))

    @constructor(0x3ef1a9bf, 'auth_resend_code')
    def struct_0x3ef1a9bf(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString)

    @constructor(0x1f040578, 'auth_cancel_code')
    def struct_0x1f040578(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString)

    @constructor(0xa02ce5d5, 'messages_export_chat_invite')
    def struct_0xa02ce5d5(self):
        return Struct(
            'sname' / Computed('messages_export_chat_invite'),
            'signature' / Hex(Const(0xa02ce5d5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_legacy_revoke_permanent=4,
                                is_request_needed=8,
                                has_expire_date=1,
                                has_usage_limit=2,
                                has_title=16),
            'peer' / self.input_peer_structures('peer'),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'title' / If(this.flags.has_title, TString))

    @constructor(0x3eadb1bb, 'messages_check_chat_invite')
    def struct_0x3eadb1bb(self):
        return ['hash' / TString]

    @constructor(0x6c50051c, 'messages_import_chat_invite')
    def struct_0x6c50051c(self):
        return ['hash' / TString]

    @constructor(0xc8a0ec74, 'messages_get_sticker_set')
    def struct_0xc8a0ec74(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'hash' / Int32ul)

    @constructor(0xc78fe460, 'messages_install_sticker_set')
    def struct_0xc78fe460(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'archived' / TBool)

    @constructor(0xf96e55de, 'messages_uninstall_sticker_set')
    def struct_0xf96e55de(self):
        return ['stickerset' / self.input_sticker_set_structures('stickerset')]

    @constructor(0xe6df7378, 'messages_start_bot')
    def struct_0xe6df7378(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'peer' / self.input_peer_structures('peer'),
            'random_id' / Int64ul,
            'start_param' / TString)

    @constructor(0x5784d3e1, 'messages_get_messages_views')
    def struct_0x5784d3e1(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'increment' / TBool)

    @constructor(0x5cf09635, 'messages_get_saved_gifs')
    def struct_0x5cf09635(self):
        return ['hash' / Int64ul]

    @constructor(0x327a30cb, 'messages_save_gif')
    def struct_0x327a30cb(self):
        return (
            'id' / self.input_document_structures('id'),
            'unsave' / TBool)

    @constructor(0x514e999d, 'messages_get_inline_bot_results')
    def struct_0x514e999d(self):
        return Struct(
            'sname' / Computed('messages_get_inline_bot_results'),
            'signature' / Hex(Const(0x514e999d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_geo_point=1),
            'bot' / self.input_user_structures('bot'),
            'peer' / self.input_peer_structures('peer'),
            'geo_point' / If(this.flags.has_geo_point, self.input_geo_point_structures('geo_point')),
            'query' / TString,
            'offset' / TString)

    @constructor(0x3ebee86a, 'messages_send_inline_bot_result')
    def struct_0x3ebee86a(self):
        return Struct(
            'sname' / Computed('messages_send_inline_bot_result'),
            'signature' / Hex(Const(0x3ebee86a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_hide_via=2048,
                                has_reply_to=1,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'random_id' / Int64ul,
            'query_id' / Int64ul,
            'id' / TString,
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')))

    @constructor(0xfda68d36, 'messages_get_message_edit_data')
    def struct_0xfda68d36(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul)

    @constructor(0xdfd14005, 'messages_edit_message')
    def struct_0xdfd14005(self):
        return Struct(
            'sname' / Computed('messages_edit_message'),
            'signature' / Hex(Const(0xdfd14005, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_invert_media=65536,
                                has_message=2048,
                                has_media=16384,
                                has_reply_markup=4,
                                has_entities=8,
                                has_schedule_date=32768,
                                has_quick_reply_shortcut_id=131072),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'message' / If(this.flags.has_message, TString),
            'media' / If(this.flags.has_media, self.input_media_structures('media')),
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'quick_reply_shortcut_id' / If(this.flags.has_quick_reply_shortcut_id, Int32ul))

    @constructor(0x9342ca07, 'messages_get_bot_callback_answer')
    def struct_0x9342ca07(self):
        return Struct(
            'sname' / Computed('messages_get_bot_callback_answer'),
            'signature' / Hex(Const(0x9342ca07, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_game=2,
                                has_data=1,
                                has_password=4),
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'data' / If(this.flags.has_data, TBytes),
            'password' / If(this.flags.has_password, self.input_check_password_srp_structures('password')))

    @constructor(0xd58f130a, 'messages_set_bot_callback_answer')
    def struct_0xd58f130a(self):
        return Struct(
            'sname' / Computed('messages_set_bot_callback_answer'),
            'signature' / Hex(Const(0xd58f130a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_alert=2,
                                has_message=1,
                                has_url=4),
            'query_id' / Int64ul,
            'message' / If(this.flags.has_message, TString),
            'url' / If(this.flags.has_url, TString),
            'cache_time' / Int32ul)

    @constructor(0xe470bcfd, 'messages_get_peer_dialogs')
    def struct_0xe470bcfd(self):
        return ['peers' / self.vector(self.input_dialog_peer_structures('peers'), 'peers')]

    @constructor(0x7ff3b806, 'messages_save_draft')
    def struct_0x7ff3b806(self):
        return Struct(
            'sname' / Computed('messages_save_draft'),
            'signature' / Hex(Const(0x7ff3b806, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_invert_media=64,
                                has_reply_to=16,
                                has_entities=8,
                                has_media=32),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'peer' / self.input_peer_structures('peer'),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / If(this.flags.has_media, self.input_media_structures('media')))

    @constructor(0x6a3f8d65, 'messages_get_all_drafts')
    def struct_0x6a3f8d65(self):
        return []

    @constructor(0x64780b14, 'messages_get_featured_stickers')
    def struct_0x64780b14(self):
        return ['hash' / Int64ul]

    @constructor(0x5b118126, 'messages_read_featured_stickers')
    def struct_0x5b118126(self):
        return ['id' / self.vector(Int64ul, 'id')]

    @constructor(0x9da9403b, 'messages_get_recent_stickers')
    def struct_0x9da9403b(self):
        return Struct(
            'sname' / Computed('messages_get_recent_stickers'),
            'signature' / Hex(Const(0x9da9403b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_attached=1),
            'hash' / Int64ul)

    @constructor(0x392718f8, 'messages_save_recent_sticker')
    def struct_0x392718f8(self):
        return Struct(
            'sname' / Computed('messages_save_recent_sticker'),
            'signature' / Hex(Const(0x392718f8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_attached=1),
            'id' / self.input_document_structures('id'),
            'unsave' / TBool)

    @constructor(0x8999602d, 'messages_clear_recent_stickers')
    def struct_0x8999602d(self):
        return Struct(
            'sname' / Computed('messages_clear_recent_stickers'),
            'signature' / Hex(Const(0x8999602d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_attached=1))

    @constructor(0x57f17692, 'messages_get_archived_stickers')
    def struct_0x57f17692(self):
        return Struct(
            'sname' / Computed('messages_get_archived_stickers'),
            'signature' / Hex(Const(0x57f17692, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=2),
            'offset_id' / Int64ul,
            'limit' / Int32ul)

    @constructor(0x8ef8ecc0, 'messages_set_game_score')
    def struct_0x8ef8ecc0(self):
        return Struct(
            'sname' / Computed('messages_set_game_score'),
            'signature' / Hex(Const(0x8ef8ecc0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_edit_message=1,
                                is_force=2),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'user_id' / self.input_user_structures('user_id'),
            'score' / Int32ul)

    @constructor(0x15ad9f64, 'messages_set_inline_game_score')
    def struct_0x15ad9f64(self):
        return Struct(
            'sname' / Computed('messages_set_inline_game_score'),
            'signature' / Hex(Const(0x15ad9f64, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_edit_message=1,
                                is_force=2),
            'id' / self.struct_0x890c3d89(),
            'user_id' / self.input_user_structures('user_id'),
            'score' / Int32ul)

    @constructor(0x640f82b8, 'messages_get_mask_stickers')
    def struct_0x640f82b8(self):
        return ['hash' / Int64ul]

    @constructor(0xe822649d, 'messages_get_game_high_scores')
    def struct_0xe822649d(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0x0f635e1b, 'messages_get_inline_game_high_scores')
    def struct_0x0f635e1b(self):
        return (
            'id' / self.struct_0x890c3d89(),
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0xcc5b67cc, 'messages_get_attached_stickers')
    def struct_0xcc5b67cc(self):
        return ['media' / self.input_stickered_media_structures('media')]

    @constructor(0xe40ca104, 'messages_get_common_chats')
    def struct_0xe40ca104(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'max_id' / Int64ul,
            'limit' / Int32ul)

    @constructor(0x875f74be, 'messages_get_all_chats')
    def struct_0x875f74be(self):
        return ['except_ids' / self.vector(Int64ul, 'except_ids')]

    @constructor(0x8d9692a3, 'messages_get_web_page')
    def struct_0x8d9692a3(self):
        return (
            'url' / TString,
            'hash' / Int32ul)

    @constructor(0xa731e257, 'messages_toggle_dialog_pin')
    def struct_0xa731e257(self):
        return Struct(
            'sname' / Computed('messages_toggle_dialog_pin'),
            'signature' / Hex(Const(0xa731e257, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'peer' / self.input_dialog_peer_structures('peer'))

    @constructor(0x3b1adf37, 'messages_reorder_pinned_dialogs')
    def struct_0x3b1adf37(self):
        return Struct(
            'sname' / Computed('messages_reorder_pinned_dialogs'),
            'signature' / Hex(Const(0x3b1adf37, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force=1),
            'folder_id' / Int32ul,
            'order' / self.vector(self.input_dialog_peer_structures('order'), 'order'))

    @constructor(0xd6b94df2, 'messages_get_pinned_dialogs')
    def struct_0xd6b94df2(self):
        return ['folder_id' / Int32ul]

    @constructor(0x519bc2b1, 'messages_upload_media')
    def struct_0x519bc2b1(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'media' / self.input_media_structures('media'))

    @constructor(0xa1405817, 'messages_send_screenshot_notification')
    def struct_0xa1405817(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / self.input_reply_to_structures('reply_to'),
            'random_id' / Int64ul)

    @constructor(0x04f1aaa9, 'messages_get_faved_stickers')
    def struct_0x04f1aaa9(self):
        return ['hash' / Int64ul]

    @constructor(0xb9ffc55b, 'messages_fave_sticker')
    def struct_0xb9ffc55b(self):
        return (
            'id' / self.input_document_structures('id'),
            'unfave' / TBool)

    @constructor(0xf107e790, 'messages_get_unread_mentions')
    def struct_0xf107e790(self):
        return Struct(
            'sname' / Computed('messages_get_unread_mentions'),
            'signature' / Hex(Const(0xf107e790, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'offset_id' / Int32ul,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul)

    @constructor(0x36e5bf4d, 'messages_read_mentions')
    def struct_0x36e5bf4d(self):
        return Struct(
            'sname' / Computed('messages_read_mentions'),
            'signature' / Hex(Const(0x36e5bf4d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul))

    @constructor(0x702a40e0, 'messages_get_recent_locations')
    def struct_0x702a40e0(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x0c964709, 'messages_send_multi_media')
    def struct_0x0c964709(self):
        return Struct(
            'sname' / Computed('messages_send_multi_media'),
            'signature' / Hex(Const(0x0c964709, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'multi_media' / self.vector(self.struct_0x1cc6e91f(), 'multi_media'),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')))

    @constructor(0x7e58ee9c, 'messages_clear_all_drafts')
    def struct_0x7e58ee9c(self):
        return []

    @constructor(0xd2aaf7ec, 'messages_update_pinned_message')
    def struct_0xd2aaf7ec(self):
        return Struct(
            'sname' / Computed('messages_update_pinned_message'),
            'signature' / Hex(Const(0xd2aaf7ec, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=1,
                                is_unpin=2,
                                is_pm_oneside=4),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul)

    @constructor(0x10ea6184, 'messages_send_vote')
    def struct_0x10ea6184(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'options' / self.vector(TBytes, 'options'))

    @constructor(0x73bb643b, 'messages_get_poll_results')
    def struct_0x73bb643b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0x6e2be050, 'messages_get_onlines')
    def struct_0x6e2be050(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x812c2ae6, 'messages_get_stats_url')
    def struct_0x812c2ae6(self):
        return Struct(
            'sname' / Computed('messages_get_stats_url'),
            'signature' / Hex(Const(0x812c2ae6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'peer' / self.input_peer_structures('peer'),
            'params' / TString)

    @constructor(0xdef60797, 'messages_edit_chat_about')
    def struct_0xdef60797(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'about' / TString)

    @constructor(0xa5866b41, 'messages_edit_chat_default_banned_rights')
    def struct_0xa5866b41(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'banned_rights' / self.struct_0x9f120418())

    @constructor(0x35a0e062, 'messages_get_emoji_keywords')
    def struct_0x35a0e062(self):
        return ['lang_code' / TString]

    @constructor(0x1508b6af, 'messages_get_emoji_keywords_difference')
    def struct_0x1508b6af(self):
        return (
            'lang_code' / TString,
            'from_version' / Int32ul)

    @constructor(0x4e9963b2, 'messages_get_emoji_keywords_languages')
    def struct_0x4e9963b2(self):
        return ['lang_codes' / self.vector(TString, 'lang_codes')]

    @constructor(0xd5b10c26, 'messages_get_emoji_url')
    def struct_0xd5b10c26(self):
        return ['lang_code' / TString]

    @constructor(0x1bbcf300, 'messages_get_search_counters')
    def struct_0x1bbcf300(self):
        return Struct(
            'sname' / Computed('messages_get_search_counters'),
            'signature' / Hex(Const(0x1bbcf300, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_saved_peer_id=4,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.input_peer_structures('saved_peer_id')),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'filters' / self.vector(self.messages_filter_structures('filters'), 'filters'))

    @constructor(0x198fb446, 'messages_request_url_auth')
    def struct_0x198fb446(self):
        return Struct(
            'sname' / Computed('messages_request_url_auth'),
            'signature' / Hex(Const(0x198fb446, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_peer=2,
                                has_url=4),
            'peer' / If(this.flags.has_peer, self.input_peer_structures('peer')),
            'msg_id' / If(this.flags.has_peer, Int32ul),
            'button_id' / If(this.flags.has_peer, Int32ul),
            'url' / If(this.flags.has_url, TString))

    @constructor(0xb12c7125, 'messages_accept_url_auth')
    def struct_0xb12c7125(self):
        return Struct(
            'sname' / Computed('messages_accept_url_auth'),
            'signature' / Hex(Const(0xb12c7125, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_write_allowed=1,
                                has_peer=2,
                                has_url=4),
            'peer' / If(this.flags.has_peer, self.input_peer_structures('peer')),
            'msg_id' / If(this.flags.has_peer, Int32ul),
            'button_id' / If(this.flags.has_peer, Int32ul),
            'url' / If(this.flags.has_url, TString))

    @constructor(0x4facb138, 'messages_hide_peer_settings_bar')
    def struct_0x4facb138(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xf516760b, 'messages_get_scheduled_history')
    def struct_0xf516760b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'hash' / Int64ul)

    @constructor(0xbdbb0464, 'messages_get_scheduled_messages')
    def struct_0xbdbb0464(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0xbd38850a, 'messages_send_scheduled_messages')
    def struct_0xbd38850a(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x59ae2b16, 'messages_delete_scheduled_messages')
    def struct_0x59ae2b16(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0xd30d78d4, 'messages_send_reaction')
    def struct_0xd30d78d4(self):
        return Struct(
            'sname' / Computed('messages_send_reaction'),
            'signature' / Hex(Const(0xd30d78d4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_big=2,
                                is_add_to_recent=4,
                                has_reaction=1),
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'reaction' / If(this.flags.has_reaction, self.vector(self.reaction_structures('reaction'), 'reaction')))

    @constructor(0x4f47a016, 'messages_set_default_reaction')
    def struct_0x4f47a016(self):
        return ['reaction' / self.reaction_structures('reaction')]

    @constructor(0x63183030, 'messages_translate_text')
    def struct_0x63183030(self):
        return Struct(
            'sname' / Computed('messages_translate_text'),
            'signature' / Hex(Const(0x63183030, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_peer=1,
                                has_text=2),
            'peer' / If(this.flags.has_peer, self.input_peer_structures('peer')),
            'id' / If(this.flags.has_peer, self.vector(Int32ul, 'id')),
            'text' / If(this.flags.has_text, self.vector(self.struct_0x751f3146(), 'text')),
            'to_lang' / TString)

    @constructor(0x3223495b, 'messages_get_unread_reactions')
    def struct_0x3223495b(self):
        return Struct(
            'sname' / Computed('messages_get_unread_reactions'),
            'signature' / Hex(Const(0x3223495b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'offset_id' / Int32ul,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul)

    @constructor(0x54aa7f8e, 'messages_read_reactions')
    def struct_0x54aa7f8e(self):
        return Struct(
            'sname' / Computed('messages_read_reactions'),
            'signature' / Hex(Const(0x54aa7f8e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_top_msg_id=1),
            'peer' / self.input_peer_structures('peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul))

    @constructor(0xdc0242c8, 'messages_send_web_view_data')
    def struct_0xdc0242c8(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'random_id' / Int64ul,
            'button_text' / TString,
            'data' / TString)

    @constructor(0x8bba90e6, 'messages_get_messages_reactions')
    def struct_0x8bba90e6(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x461b3f48, 'messages_get_message_reactions_list')
    def struct_0x461b3f48(self):
        return Struct(
            'sname' / Computed('messages_get_message_reactions_list'),
            'signature' / Hex(Const(0x461b3f48, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reaction=1,
                                has_offset=2),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'reaction' / If(this.flags.has_reaction, self.reaction_structures('reaction')),
            'offset' / If(this.flags.has_offset, TString),
            'limit' / Int32ul)

    @constructor(0xfeb16771, 'messages_set_chat_available_reactions')
    def struct_0xfeb16771(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'available_reactions' / self.chat_reactions_structures('available_reactions'))

    @constructor(0x18dea0ac, 'messages_get_available_reactions')
    def struct_0x18dea0ac(self):
        return ['hash' / Int32ul]

    @constructor(0x147ee23c, 'messages_search_results_calendar')
    def struct_0x147ee23c(self):
        return Struct(
            'sname' / Computed('messages_search_results_calendar'),
            'signature' / Hex(Const(0x147ee23c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inexact=1,
                                has_offset_id_offset=2),
            'count' / Int32ul,
            'min_date' / TTimestamp,
            'min_msg_id' / Int32ul,
            'offset_id_offset' / If(this.flags.has_offset_id_offset, Int32ul),
            'periods' / self.vector(self.struct_0xc9b0539f(), 'periods'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb86e380e, 'messages_get_poll_votes')
    def struct_0xb86e380e(self):
        return Struct(
            'sname' / Computed('messages_get_poll_votes'),
            'signature' / Hex(Const(0xb86e380e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_option=1,
                                has_offset=2),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'option' / If(this.flags.has_option, TBytes),
            'offset' / If(this.flags.has_offset, TString),
            'limit' / Int32ul)

    @constructor(0x2ad93719, 'messages_dialog_filters')
    def struct_0x2ad93719(self):
        return Struct(
            'sname' / Computed('messages_dialog_filters'),
            'signature' / Hex(Const(0x2ad93719, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_tags_enabled=1),
            'filters' / self.vector(self.dialog_filter_structures('filters'), 'filters'))

    @constructor(0xefd48c89, 'messages_get_dialog_filters')
    def struct_0xefd48c89(self):
        return []

    @constructor(0xa29cd42c, 'messages_get_suggested_dialog_filters')
    def struct_0xa29cd42c(self):
        return []

    @constructor(0x1ad4a04a, 'messages_update_dialog_filter')
    def struct_0x1ad4a04a(self):
        return Struct(
            'sname' / Computed('messages_update_dialog_filter'),
            'signature' / Hex(Const(0x1ad4a04a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_filter=1),
            'id' / Int32ul,
            'filter' / If(this.flags.has_filter, self.dialog_filter_structures('filter')))

    @constructor(0xc563c1e4, 'messages_update_dialog_filters_order')
    def struct_0xc563c1e4(self):
        return ['order' / self.vector(Int32ul, 'order')]

    @constructor(0x7ed094a1, 'messages_get_old_featured_stickers')
    def struct_0x7ed094a1(self):
        return (
            'offset' / Int32ul,
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x22ddd30c, 'messages_get_replies')
    def struct_0x22ddd30c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'offset_id' / Int32ul,
            'offset_date' / TTimestamp,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x446972fd, 'messages_get_discussion_message')
    def struct_0x446972fd(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0xf731a9f4, 'messages_read_discussion')
    def struct_0xf731a9f4(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'read_max_id' / Int32ul)

    @constructor(0xf025bc8b, 'messages_unpin_all_messages')
    def struct_0xf025bc8b(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xa2b5a3f6, 'messages_get_exported_chat_invites')
    def struct_0xa2b5a3f6(self):
        return Struct(
            'sname' / Computed('messages_get_exported_chat_invites'),
            'signature' / Hex(Const(0xa2b5a3f6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=8,
                                has_offset_date=4),
            'peer' / self.input_peer_structures('peer'),
            'admin_id' / self.input_user_structures('admin_id'),
            'offset_date' / If(this.flags.has_offset_date, TTimestamp),
            'offset_link' / If(this.flags.has_offset_date, TString),
            'limit' / Int32ul)

    @constructor(0x73746f5c, 'messages_get_exported_chat_invite')
    def struct_0x73746f5c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'link' / TString)

    @constructor(0xbdca2f75, 'messages_edit_exported_chat_invite')
    def struct_0xbdca2f75(self):
        return Struct(
            'sname' / Computed('messages_edit_exported_chat_invite'),
            'signature' / Hex(Const(0xbdca2f75, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=4,
                                has_expire_date=1,
                                has_usage_limit=2,
                                has_request_needed=8,
                                has_title=16),
            'peer' / self.input_peer_structures('peer'),
            'link' / TString,
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'request_needed' / If(this.flags.has_request_needed, TBool),
            'title' / If(this.flags.has_title, TString))

    @constructor(0x56987bd5, 'messages_delete_revoked_exported_chat_invites')
    def struct_0x56987bd5(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'admin_id' / self.input_user_structures('admin_id'))

    @constructor(0xd464a42b, 'messages_delete_exported_chat_invite')
    def struct_0xd464a42b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'link' / TString)

    @constructor(0x3920e6ef, 'messages_get_admins_with_invites')
    def struct_0x3920e6ef(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xdf04dd4e, 'messages_get_chat_invite_importers')
    def struct_0xdf04dd4e(self):
        return Struct(
            'sname' / Computed('messages_get_chat_invite_importers'),
            'signature' / Hex(Const(0xdf04dd4e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_requested=1,
                                is_subscription_expired=8,
                                has_link=2,
                                has_q=4),
            'peer' / self.input_peer_structures('peer'),
            'link' / If(this.flags.has_link, TString),
            'q' / If(this.flags.has_q, TString),
            'offset_date' / TTimestamp,
            'offset_user' / self.input_user_structures('offset_user'),
            'limit' / Int32ul)

    @constructor(0x7fe7e815, 'messages_hide_chat_join_request')
    def struct_0x7fe7e815(self):
        return Struct(
            'sname' / Computed('messages_hide_chat_join_request'),
            'signature' / Hex(Const(0x7fe7e815, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_approved=1),
            'peer' / self.input_peer_structures('peer'),
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0xe085f4ea, 'messages_hide_all_chat_join_requests')
    def struct_0xe085f4ea(self):
        return Struct(
            'sname' / Computed('messages_hide_all_chat_join_requests'),
            'signature' / Hex(Const(0xe085f4ea, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_approved=1,
                                has_link=2),
            'peer' / self.input_peer_structures('peer'),
            'link' / If(this.flags.has_link, TString))

    @constructor(0xb11eafa2, 'messages_toggle_no_forwards')
    def struct_0xb11eafa2(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'enabled' / TBool)

    @constructor(0xccfddf96, 'messages_save_default_send_as')
    def struct_0xccfddf96(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'send_as' / self.input_peer_structures('send_as'))

    @constructor(0xb80e5fe4, 'messages_set_history_ttl')
    def struct_0xb80e5fe4(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'period' / Int32ul)

    @constructor(0x5bd0ee50, 'messages_delete_chat')
    def struct_0x5bd0ee50(self):
        return ['chat_id' / Int64ul]

    @constructor(0xf9cbe409, 'messages_delete_phone_call_history')
    def struct_0xf9cbe409(self):
        return Struct(
            'sname' / Computed('messages_delete_phone_call_history'),
            'signature' / Hex(Const(0xf9cbe409, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoke=1))

    @constructor(0x43fe19f3, 'messages_check_history_import')
    def struct_0x43fe19f3(self):
        return ['import_head' / TString]

    @constructor(0x34090c3b, 'messages_init_history_import')
    def struct_0x34090c3b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'file' / self.input_file_structures('file'),
            'media_count' / Int32ul)

    @constructor(0x2a862092, 'messages_upload_imported_media')
    def struct_0x2a862092(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'import_id' / Int64ul,
            'file_name' / TString,
            'media' / self.input_media_structures('media'))

    @constructor(0xb43df344, 'messages_start_history_import')
    def struct_0xb43df344(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'import_id' / Int64ul)

    @constructor(0x5dc60f03, 'messages_check_history_import_peer')
    def struct_0x5dc60f03(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xe63be13f, 'messages_set_chat_theme')
    def struct_0xe63be13f(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'emoticon' / TString)

    @constructor(0x9010ef6f, 'help_get_app_changelog')
    def struct_0x9010ef6f(self):
        return ['prev_app_version' / TString]

    @constructor(0xb5052fea, 'messages_toggle_sticker_sets')
    def struct_0xb5052fea(self):
        return Struct(
            'sname' / Computed('messages_toggle_sticker_sets'),
            'signature' / Hex(Const(0xb5052fea, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_uninstall=1,
                                is_archive=2,
                                is_unarchive=4),
            'stickersets' / self.vector(self.input_sticker_set_structures('stickersets'), 'stickersets'))

    @constructor(0x5057c497, 'messages_upload_encrypted_file')
    def struct_0x5057c497(self):
        return (
            'peer' / self.struct_0xf141b5e1(),
            'file' / self.input_encrypted_file_structures('file'))

    @constructor(0x35705b8a, 'messages_search_sticker_sets')
    def struct_0x35705b8a(self):
        return Struct(
            'sname' / Computed('messages_search_sticker_sets'),
            'signature' / Hex(Const(0x35705b8a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_featured=1),
            'q' / TString,
            'hash' / Int64ul)

    @constructor(0x92b4494c, 'messages_search_emoji_sticker_sets')
    def struct_0x92b4494c(self):
        return Struct(
            'sname' / Computed('messages_search_emoji_sticker_sets'),
            'signature' / Hex(Const(0x92b4494c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_featured=1),
            'q' / TString,
            'hash' / Int64ul)

    @constructor(0xc286d98f, 'messages_mark_dialog_unread')
    def struct_0xc286d98f(self):
        return Struct(
            'sname' / Computed('messages_mark_dialog_unread'),
            'signature' / Hex(Const(0xc286d98f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unread=1),
            'peer' / self.input_dialog_peer_structures('peer'))

    @constructor(0x22e24e22, 'messages_get_dialog_unread_marks')
    def struct_0x22e24e22(self):
        return []

    @constructor(0xec22cfcd, 'help_set_bot_updates_status')
    def struct_0xec22cfcd(self):
        return (
            'pending_updates_count' / Int32ul,
            'message' / TString)

    @constructor(0x78337739, 'messages_reorder_sticker_sets')
    def struct_0x78337739(self):
        return Struct(
            'sname' / Computed('messages_reorder_sticker_sets'),
            'signature' / Hex(Const(0x78337739, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=2),
            'order' / self.vector(Int64ul, 'order'))

    @constructor(0xfbfca18f, 'messages_get_emoji_stickers')
    def struct_0xfbfca18f(self):
        return ['hash' / Int64ul]

    @constructor(0x0ecf6736, 'messages_get_featured_emoji_stickers')
    def struct_0x0ecf6736(self):
        return ['hash' / Int64ul]

    @constructor(0x338e2464, 'messages_get_document_by_hash')
    def struct_0x338e2464(self):
        return (
            'sha256' / TBytes,
            'size' / Int32ul,
            'mime_type' / TString)

    @constructor(0x3dc0f114, 'help_get_recent_me_urls')
    def struct_0x3dc0f114(self):
        return ['referer' / TString]

    @constructor(0x3fedc75f, 'help_get_deep_link_info')
    def struct_0x3fedc75f(self):
        return ['path' / TString]

    @constructor(0xcc104937, 'channels_read_history')
    def struct_0xcc104937(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'max_id' / Int32ul)

    @constructor(0x84c1fd4e, 'channels_delete_messages')
    def struct_0x84c1fd4e(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x367544db, 'channels_delete_participant_history')
    def struct_0x367544db(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'participant' / self.input_peer_structures('participant'))

    @constructor(0xf44a8315, 'channels_report_spam')
    def struct_0xf44a8315(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'participant' / self.input_peer_structures('participant'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x93d7b347, 'channels_get_messages')
    def struct_0x93d7b347(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x77ced9d0, 'channels_get_participants')
    def struct_0x77ced9d0(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'filter' / self.channel_participants_filter_structures('filter'),
            'offset' / Int32ul,
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0xa0ab6cc6, 'channels_get_participant')
    def struct_0xa0ab6cc6(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'participant' / self.input_peer_structures('participant'))

    @constructor(0x0a7f6bbb, 'channels_get_channels')
    def struct_0x0a7f6bbb(self):
        return ['id' / self.vector(self.input_channel_structures('id'), 'id')]

    @constructor(0x08736a09, 'channels_get_full_channel')
    def struct_0x08736a09(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x91006707, 'channels_create_channel')
    def struct_0x91006707(self):
        return Struct(
            'sname' / Computed('channels_create_channel'),
            'signature' / Hex(Const(0x91006707, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_broadcast=1,
                                is_megagroup=2,
                                is_for_import=8,
                                is_forum=32,
                                has_geo_point=4,
                                has_ttl_period=16),
            'title' / TString,
            'about' / TString,
            'geo_point' / If(this.flags.has_geo_point, self.input_geo_point_structures('geo_point')),
            'address' / If(this.flags.has_geo_point, TString),
            'ttl_period' / If(this.flags.has_ttl_period, Int32ul))

    @constructor(0xd33c8902, 'channels_edit_admin')
    def struct_0xd33c8902(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'user_id' / self.input_user_structures('user_id'),
            'admin_rights' / self.struct_0x5fb224d5(),
            'rank' / TString)

    @constructor(0x566decd0, 'channels_edit_title')
    def struct_0x566decd0(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'title' / TString)

    @constructor(0xf12e57c9, 'channels_edit_photo')
    def struct_0xf12e57c9(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'photo' / self.input_chat_photo_structures('photo'))

    @constructor(0x10e6bd2c, 'channels_check_username')
    def struct_0x10e6bd2c(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'username' / TString)

    @constructor(0x3514b3de, 'channels_update_username')
    def struct_0x3514b3de(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'username' / TString)

    @constructor(0x24b524c5, 'channels_join_channel')
    def struct_0x24b524c5(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0xf836aa95, 'channels_leave_channel')
    def struct_0xf836aa95(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x199f3a6c, 'channels_invite_to_channel')
    def struct_0x199f3a6c(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'users' / self.vector(self.input_user_structures('users'), 'users'))

    @constructor(0xc0111fe3, 'channels_delete_channel')
    def struct_0xc0111fe3(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0xe63fadeb, 'channels_export_message_link')
    def struct_0xe63fadeb(self):
        return Struct(
            'sname' / Computed('channels_export_message_link'),
            'signature' / Hex(Const(0xe63fadeb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_grouped=1,
                                is_thread=2),
            'channel' / self.input_channel_structures('channel'),
            'id' / Int32ul)

    @constructor(0x1f69b606, 'channels_toggle_signatures')
    def struct_0x1f69b606(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0xf8b036af, 'channels_get_admined_public_channels')
    def struct_0xf8b036af(self):
        return Struct(
            'sname' / Computed('channels_get_admined_public_channels'),
            'signature' / Hex(Const(0xf8b036af, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_by_location=1,
                                is_check_limit=2,
                                is_for_personal=4))

    @constructor(0x96e6cd81, 'channels_edit_banned')
    def struct_0x96e6cd81(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'participant' / self.input_peer_structures('participant'),
            'banned_rights' / self.struct_0x9f120418())

    @constructor(0x33ddf480, 'channels_get_admin_log')
    def struct_0x33ddf480(self):
        return Struct(
            'sname' / Computed('channels_get_admin_log'),
            'signature' / Hex(Const(0x33ddf480, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_events_filter=1,
                                has_admins=2),
            'channel' / self.input_channel_structures('channel'),
            'q' / TString,
            'events_filter' / If(this.flags.has_events_filter, self.struct_0xea107ae4()),
            'admins' / If(this.flags.has_admins, self.vector(self.input_user_structures('admins'), 'admins')),
            'max_id' / Int64ul,
            'min_id' / Int64ul,
            'limit' / Int32ul)

    @constructor(0xea8ca4f9, 'channels_set_stickers')
    def struct_0xea8ca4f9(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'stickerset' / self.input_sticker_set_structures('stickerset'))

    @constructor(0xeab5dc38, 'channels_read_message_contents')
    def struct_0xeab5dc38(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x9baa9647, 'channels_delete_history')
    def struct_0x9baa9647(self):
        return Struct(
            'sname' / Computed('channels_delete_history'),
            'signature' / Hex(Const(0x9baa9647, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_for_everyone=1),
            'channel' / self.input_channel_structures('channel'),
            'max_id' / Int32ul)

    @constructor(0x43a0a7e2, 'channels_search_posts')
    def struct_0x43a0a7e2(self):
        return (
            'q' / TString,
            'offset_rate' / Int32ul,
            'offset_peer' / self.input_peer_structures('offset_peer'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xedd49ef0, 'channels_toggle_slow_mode')
    def struct_0xedd49ef0(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'seconds' / Int32ul)

    @constructor(0x11e831ee, 'channels_get_inactive_channels')
    def struct_0x11e831ee(self):
        return []

    @constructor(0x0b290c69, 'channels_convert_to_gigagroup')
    def struct_0x0b290c69(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0xbeaedb94, 'channels_view_sponsored_message')
    def struct_0xbeaedb94(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'random_id' / TBytes)

    @constructor(0xec210fbf, 'channels_get_sponsored_messages')
    def struct_0xec210fbf(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x0dc770ee, 'channels_get_send_as')
    def struct_0x0dc770ee(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x9021ab67, 'stickers_create_sticker_set')
    def struct_0x9021ab67(self):
        return Struct(
            'sname' / Computed('stickers_create_sticker_set'),
            'signature' / Hex(Const(0x9021ab67, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_masks=1,
                                is_emojis=32,
                                has_thumb=4,
                                has_software=8),
            'user_id' / self.input_user_structures('user_id'),
            'title' / TString,
            'short_name' / TString,
            'thumb' / If(this.flags.has_thumb, self.input_document_structures('thumb')),
            'stickers' / self.vector(self.struct_0xffa0a496(), 'stickers'),
            'software' / If(this.flags.has_software, TString))

    @constructor(0x284b3639, 'stickers_check_short_name')
    def struct_0x284b3639(self):
        return ['short_name' / TString]

    @constructor(0x4dafc503, 'stickers_suggest_short_name')
    def struct_0x4dafc503(self):
        return ['title' / TString]

    @constructor(0x55451fa9, 'phone_get_call_config')
    def struct_0x55451fa9(self):
        return []

    @constructor(0x42ff96ed, 'phone_request_call')
    def struct_0x42ff96ed(self):
        return Struct(
            'sname' / Computed('phone_request_call'),
            'signature' / Hex(Const(0x42ff96ed, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=1),
            'user_id' / self.input_user_structures('user_id'),
            'random_id' / Int32ul,
            'g_a_hash' / TBytes,
            'protocol' / self.struct_0xfc878fc8())

    @constructor(0x3bd2b4a0, 'phone_accept_call')
    def struct_0x3bd2b4a0(self):
        return (
            'peer' / self.struct_0x1e36fded(),
            'g_b' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'))

    @constructor(0x2efe1722, 'phone_confirm_call')
    def struct_0x2efe1722(self):
        return (
            'peer' / self.struct_0x1e36fded(),
            'g_a' / TBytes,
            'key_fingerprint' / Int64ul,
            'protocol' / self.phone_call_protocol_structures('protocol'))

    @constructor(0x17d54f61, 'phone_received_call')
    def struct_0x17d54f61(self):
        return ['peer' / self.struct_0x1e36fded()]

    @constructor(0xb2cbc1c0, 'phone_discard_call')
    def struct_0xb2cbc1c0(self):
        return Struct(
            'sname' / Computed('phone_discard_call'),
            'signature' / Hex(Const(0xb2cbc1c0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=1),
            'peer' / self.struct_0x1e36fded(),
            'duration' / Int32ul,
            'reason' / self.phone_call_discard_reason_structures('reason'),
            'connection_id' / Int64ul)

    @constructor(0x59ead627, 'phone_set_call_rating')
    def struct_0x59ead627(self):
        return Struct(
            'sname' / Computed('phone_set_call_rating'),
            'signature' / Hex(Const(0x59ead627, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_user_initiative=1),
            'peer' / self.struct_0x1e36fded(),
            'rating' / Int32ul,
            'comment' / TString)

    @constructor(0x277add7e, 'phone_save_call_debug')
    def struct_0x277add7e(self):
        return (
            'peer' / self.struct_0x1e36fded(),
            'debug' / self.struct_0x7d748d04())

    @constructor(0xff7a9383, 'phone_send_signaling_data')
    def struct_0xff7a9383(self):
        return (
            'peer' / self.struct_0x1e36fded(),
            'data' / TBytes)

    @constructor(0x48cdc6d8, 'phone_create_group_call')
    def struct_0x48cdc6d8(self):
        return Struct(
            'sname' / Computed('phone_create_group_call'),
            'signature' / Hex(Const(0x48cdc6d8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1,
                                has_schedule_date=2),
            'peer' / self.input_peer_structures('peer'),
            'random_id' / Int32ul,
            'title' / If(this.flags.has_title, TString),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp))

    @constructor(0xb132ff7b, 'phone_join_group_call')
    def struct_0xb132ff7b(self):
        return Struct(
            'sname' / Computed('phone_join_group_call'),
            'signature' / Hex(Const(0xb132ff7b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_muted=1,
                                is_video_stopped=4,
                                has_invite_hash=2),
            'call' / self.struct_0xd8aa840f(),
            'join_as' / self.input_peer_structures('join_as'),
            'invite_hash' / If(this.flags.has_invite_hash, TString),
            'params' / self.struct_0x7d748d04())

    @constructor(0x500377f9, 'phone_leave_group_call')
    def struct_0x500377f9(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'source' / Int32ul)

    @constructor(0x7b393160, 'phone_invite_to_group_call')
    def struct_0x7b393160(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'users' / self.vector(self.input_user_structures('users'), 'users'))

    @constructor(0x7a777135, 'phone_discard_group_call')
    def struct_0x7a777135(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0x74bbb43d, 'phone_toggle_group_call_settings')
    def struct_0x74bbb43d(self):
        return Struct(
            'sname' / Computed('phone_toggle_group_call_settings'),
            'signature' / Hex(Const(0x74bbb43d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_reset_invite_hash=2,
                                has_join_muted=1),
            'call' / self.struct_0xd8aa840f(),
            'join_muted' / If(this.flags.has_join_muted, TBool))

    @constructor(0x041845db, 'phone_get_group_call')
    def struct_0x041845db(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'limit' / Int32ul)

    @constructor(0xc558d8ab, 'phone_get_group_participants')
    def struct_0xc558d8ab(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'ids' / self.vector(self.input_peer_structures('ids'), 'ids'),
            'sources' / self.vector(Int32ul, 'sources'),
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0xb59cf977, 'phone_check_group_call')
    def struct_0xb59cf977(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'sources' / self.vector(Int32ul, 'sources'))

    @constructor(0xf128c708, 'phone_toggle_group_call_record')
    def struct_0xf128c708(self):
        return Struct(
            'sname' / Computed('phone_toggle_group_call_record'),
            'signature' / Hex(Const(0xf128c708, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_start=1,
                                is_video=4,
                                has_title=2),
            'call' / self.struct_0xd8aa840f(),
            'title' / If(this.flags.has_title, TString),
            'video_portrait' / If(this.flags.is_video, TBool))

    @constructor(0xa5273abf, 'phone_edit_group_call_participant')
    def struct_0xa5273abf(self):
        return Struct(
            'sname' / Computed('phone_edit_group_call_participant'),
            'signature' / Hex(Const(0xa5273abf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_muted=1,
                                has_volume=2,
                                has_raise_hand=4,
                                has_video_stopped=8,
                                has_video_paused=16,
                                has_presentation_paused=32),
            'call' / self.struct_0xd8aa840f(),
            'participant' / self.input_peer_structures('participant'),
            'muted' / If(this.flags.has_muted, TBool),
            'volume' / If(this.flags.has_volume, Int32ul),
            'raise_hand' / If(this.flags.has_raise_hand, TBool),
            'video_stopped' / If(this.flags.has_video_stopped, TBool),
            'video_paused' / If(this.flags.has_video_paused, TBool),
            'presentation_paused' / If(this.flags.has_presentation_paused, TBool))

    @constructor(0x1ca6ac0a, 'phone_edit_group_call_title')
    def struct_0x1ca6ac0a(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'title' / TString)

    @constructor(0xef7c213a, 'phone_get_group_call_join_as')
    def struct_0xef7c213a(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xe6aa647f, 'phone_export_group_call_invite')
    def struct_0xe6aa647f(self):
        return Struct(
            'sname' / Computed('phone_export_group_call_invite'),
            'signature' / Hex(Const(0xe6aa647f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_self_unmute=1),
            'call' / self.struct_0xd8aa840f())

    @constructor(0x219c34e6, 'phone_toggle_group_call_start_subscription')
    def struct_0x219c34e6(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'subscribed' / TBool)

    @constructor(0x5680e342, 'phone_start_scheduled_group_call')
    def struct_0x5680e342(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0x575e1f8c, 'phone_save_default_group_call_join_as')
    def struct_0x575e1f8c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'join_as' / self.input_peer_structures('join_as'))

    @constructor(0xcbea6bc4, 'phone_join_group_call_presentation')
    def struct_0xcbea6bc4(self):
        return (
            'call' / self.struct_0xd8aa840f(),
            'params' / self.struct_0x7d748d04())

    @constructor(0x80eb48af, 'phone_group_call_stream_channel')
    def struct_0x80eb48af(self):
        return (
            'channel' / Int32ul,
            'scale' / Int32ul,
            'last_timestamp_ms' / Int64ul)

    @constructor(0xd0e482b2, 'phone_group_call_stream_channels')
    def struct_0xd0e482b2(self):
        return ['channels' / self.vector(self.struct_0x80eb48af(), 'channels')]

    @constructor(0x1c50d144, 'phone_leave_group_call_presentation')
    def struct_0x1c50d144(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0x1ab21940, 'phone_get_group_call_stream_channels')
    def struct_0x1ab21940(self):
        return ['call' / self.struct_0xd8aa840f()]

    @constructor(0xdeb3abbf, 'phone_get_group_call_stream_rtmp_url')
    def struct_0xdeb3abbf(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'revoke' / TBool)

    @constructor(0x37148dbb, 'payments_get_payment_form')
    def struct_0x37148dbb(self):
        return Struct(
            'sname' / Computed('payments_get_payment_form'),
            'signature' / Hex(Const(0x37148dbb, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_theme_params=1),
            'invoice' / self.input_invoice_structures('invoice'),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()))

    @constructor(0x2478d1cc, 'payments_get_payment_receipt')
    def struct_0x2478d1cc(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0xb6c8f12b, 'payments_validate_requested_info')
    def struct_0xb6c8f12b(self):
        return Struct(
            'sname' / Computed('payments_validate_requested_info'),
            'signature' / Hex(Const(0xb6c8f12b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_save=1),
            'invoice' / self.input_invoice_structures('invoice'),
            'info' / self.struct_0x909c3f94())

    @constructor(0x2d03522f, 'payments_send_payment_form')
    def struct_0x2d03522f(self):
        return Struct(
            'sname' / Computed('payments_send_payment_form'),
            'signature' / Hex(Const(0x2d03522f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_requested_info_id=1,
                                has_shipping_option_id=2,
                                has_tip_amount=4),
            'form_id' / Int64ul,
            'invoice' / self.input_invoice_structures('invoice'),
            'requested_info_id' / If(this.flags.has_requested_info_id, TString),
            'shipping_option_id' / If(this.flags.has_shipping_option_id, TString),
            'credentials' / self.input_payment_credentials_structures('credentials'),
            'tip_amount' / If(this.flags.has_tip_amount, Int64ul))

    @constructor(0x8c05f1c9, 'help_support_name')
    def struct_0x8c05f1c9(self):
        return ['name' / TString]

    @constructor(0x8fde504f, 'input_theme_settings')
    def struct_0x8fde504f(self):
        return Struct(
            'sname' / Computed('input_theme_settings'),
            'signature' / Hex(Const(0x8fde504f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_message_colors_animated=4,
                                has_outbox_accent_color=8,
                                has_message_colors=1,
                                has_wallpaper=2),
            'base_theme' / self.base_theme_structures('base_theme'),
            'accent_color' / Int32ul,
            'outbox_accent_color' / If(this.flags.has_outbox_accent_color, Int32ul),
            'message_colors' / If(this.flags.has_message_colors, self.vector(Int32ul, 'message_colors')),
            'wallpaper' / If(this.flags.has_wallpaper, self.input_wall_paper_structures('wallpaper')),
            'wallpaper_settings' / If(this.flags.has_wallpaper, self.wall_paper_settings_structures('wallpaper_settings')))

    @constructor(0xdffd50d3, 'payments_assign_play_market_transaction')
    def struct_0xdffd50d3(self):
        return (
            'receipt' / self.struct_0x7d748d04(),
            'purpose' / self.input_store_payment_purpose_structures('purpose'))

    @constructor(0x227d824b, 'payments_get_saved_info')
    def struct_0x227d824b(self):
        return []

    @constructor(0xd83d70c1, 'payments_clear_saved_info')
    def struct_0xd83d70c1(self):
        return Struct(
            'sname' / Computed('payments_clear_saved_info'),
            'signature' / Hex(Const(0xd83d70c1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_credentials=1,
                                is_info=2))

    @constructor(0x2e79d779, 'payments_get_bank_card_data')
    def struct_0x2e79d779(self):
        return ['number' / TString]

    @constructor(0x9ab5c58e, 'langpack_get_lang_pack')
    def struct_0x9ab5c58e(self):
        return ['lang_code' / TString]

    @constructor(0x2e1ee318, 'langpack_get_strings')
    def struct_0x2e1ee318(self):
        return (
            'lang_code' / TString,
            'keys' / self.vector(TString, 'keys'))

    @constructor(0xcd984aa5, 'langpack_get_difference')
    def struct_0xcd984aa5(self):
        return (
            'lang_pack' / TString,
            'lang_code' / TString,
            'from_version' / Int32ul)

    @constructor(0x800fd57d, 'langpack_get_languages')
    def struct_0x800fd57d(self):
        return []

    @constructor(0x6a596502, 'langpack_get_language')
    def struct_0x6a596502(self):
        return (
            'lang_pack' / TString,
            'lang_code' / TString)

    @constructor(0x6847d0ab, 'folders_edit_peer_folders')
    def struct_0x6847d0ab(self):
        return ['folder_peers' / self.vector(self.struct_0xfbd2c296(), 'folder_peers')]

    @constructor(0x1c295881, 'folders_delete_folder')
    def struct_0x1c295881(self):
        return ['folder_id' / Int32ul]

    @constructor(0xab42441a, 'stats_get_broadcast_stats')
    def struct_0xab42441a(self):
        return Struct(
            'sname' / Computed('stats_get_broadcast_stats'),
            'signature' / Hex(Const(0xab42441a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'channel' / self.input_channel_structures('channel'))

    @constructor(0x621d5fa0, 'stats_load_async_graph')
    def struct_0x621d5fa0(self):
        return Struct(
            'sname' / Computed('stats_load_async_graph'),
            'signature' / Hex(Const(0x621d5fa0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_x=1),
            'token' / TString,
            'x' / If(this.flags.has_x, Int64ul))

    @constructor(0xdcdf8607, 'stats_get_megagroup_stats')
    def struct_0xdcdf8607(self):
        return Struct(
            'sname' / Computed('stats_get_megagroup_stats'),
            'signature' / Hex(Const(0xdcdf8607, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'channel' / self.input_channel_structures('channel'))

    @constructor(0x5f150144, 'stats_get_message_public_forwards')
    def struct_0x5f150144(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'msg_id' / Int32ul,
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0xb6e0a3f5, 'stats_get_message_stats')
    def struct_0xb6e0a3f5(self):
        return Struct(
            'sname' / Computed('stats_get_message_stats'),
            'signature' / Hex(Const(0xb6e0a3f5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'channel' / self.input_channel_structures('channel'),
            'msg_id' / Int32ul)

    @constructor(0xa6437ef6, 'stats_get_story_public_forwards')
    def struct_0xa6437ef6(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x93037e20, 'stats_public_forwards')
    def struct_0x93037e20(self):
        return Struct(
            'sname' / Computed('stats_public_forwards'),
            'signature' / Hex(Const(0x93037e20, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'forwards' / self.vector(self.stats_public_forward_structures('forwards'), 'forwards'),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xf496b0c6, 'channels_send_as_peers')
    def struct_0xf496b0c6(self):
        return (
            'peers' / self.vector(self.struct_0xb81c7034(), 'peers'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb81c7034, 'send_as_peer')
    def struct_0xb81c7034(self):
        return Struct(
            'sname' / Computed('send_as_peer'),
            'signature' / Hex(Const(0xb81c7034, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_premium_required=1),
            'peer' / self.peer_structures('peer'))

    @constructor(0xb304a621, 'upload_save_file_part')
    def struct_0xb304a621(self):
        return (
            'file_id' / Int64ul,
            'file_part' / Int32ul,
            'bytes' / TBytes)

    @constructor(0xd5a5d3a1, 'messages_get_stickers')
    def struct_0xd5a5d3a1(self):
        return (
            'emoticon' / TString,
            'hash' / Int64ul)

    @constructor(0xb8a0a1a8, 'messages_get_all_stickers')
    def struct_0xb8a0a1a8(self):
        return ['hash' / Int64ul]

    @constructor(0xde7b673d, 'upload_save_big_file_part')
    def struct_0xde7b673d(self):
        return (
            'file_id' / Int64ul,
            'file_part' / Int32ul,
            'file_total_parts' / Int32ul,
            'bytes' / TBytes)

    @constructor(0x24e6818d, 'upload_get_web_file')
    def struct_0x24e6818d(self):
        return (
            'location' / self.input_web_file_location_structures('location'),
            'offset' / Int32ul,
            'limit' / Int32ul)

    @constructor(0x395f69da, 'upload_get_cdn_file')
    def struct_0x395f69da(self):
        return (
            'file_token' / TBytes,
            'offset' / Int64ul,
            'limit' / Int32ul)

    @constructor(0x9b2754a8, 'upload_reupload_cdn_file')
    def struct_0x9b2754a8(self):
        return (
            'file_token' / TBytes,
            'request_token' / TBytes)

    @constructor(0x91dc3f31, 'upload_get_cdn_file_hashes')
    def struct_0x91dc3f31(self):
        return (
            'file_token' / TBytes,
            'offset' / Int64ul)

    @constructor(0xc7025931, 'upload_get_file_hashes')
    def struct_0xc7025931(self):
        return (
            'location' / self.input_file_location_structures('location'),
            'offset' / Int32ul)

    @constructor(0x21e753bc, 'upload_web_file')
    def struct_0x21e753bc(self):
        return (
            'size' / Int32ul,
            'mime_type' / TString,
            'file_type' / self.storage_file_type_structures('file_type'),
            'mtime' / Int32ul,
            'bytes' / TBytes)

    @constructor(0x5559481d, 'messages_send_encrypted_file')
    def struct_0x5559481d(self):
        return Struct(
            'sname' / Computed('messages_send_encrypted_file'),
            'signature' / Hex(Const(0x5559481d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=1),
            'peer' / self.struct_0xf141b5e1(),
            'random_id' / Int64ul,
            'data' / TBytes,
            'file' / self.input_encrypted_file_structures('file'))

    @constructor(0xcacacaca, 'messages_send_encrypted_multi_media')
    def struct_0xcacacaca(self):
        return []

    @constructor(0x44fa7a15, 'messages_send_encrypted')
    def struct_0x44fa7a15(self):
        return Struct(
            'sname' / Computed('messages_send_encrypted'),
            'signature' / Hex(Const(0x44fa7a15, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=1),
            'peer' / self.struct_0xf141b5e1(),
            'random_id' / Int64ul,
            'data' / TBytes)

    @constructor(0x32d439a4, 'messages_send_encrypted_service')
    def struct_0x32d439a4(self):
        return (
            'peer' / self.struct_0xf141b5e1(),
            'random_id' / Int64ul,
            'data' / TBytes)

    @constructor(0x9c7f2f10, 'messages_get_search_results_positions')
    def struct_0x9c7f2f10(self):
        return Struct(
            'sname' / Computed('messages_get_search_results_positions'),
            'signature' / Hex(Const(0x9c7f2f10, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_saved_peer_id=4),
            'peer' / self.input_peer_structures('peer'),
            'saved_peer_id' / If(this.flags.has_saved_peer_id, self.input_peer_structures('saved_peer_id')),
            'filter' / self.messages_filter_structures('filter'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xaadf159b, 'messages_web_view_result')
    def struct_0xaadf159b(self):
        return (
            'result' / self.bot_inline_result_structures('result'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x16fcc2cb, 'messages_get_attach_menu_bots')
    def struct_0x16fcc2cb(self):
        return ['hash' / Int64ul]

    @constructor(0x69f59d69, 'messages_toggle_bot_in_attach_menu')
    def struct_0x69f59d69(self):
        return Struct(
            'sname' / Computed('messages_toggle_bot_in_attach_menu'),
            'signature' / Hex(Const(0x69f59d69, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_write_allowed=1),
            'bot' / self.input_user_structures('bot'),
            'enabled' / TBool)

    @constructor(0x0c14557c, 'web_view_result_url')
    def struct_0x0c14557c(self):
        return (
            'query_id' / Int64ul,
            'url' / TString)

    @constructor(0x269dc2c1, 'messages_request_web_view')
    def struct_0x269dc2c1(self):
        return Struct(
            'sname' / Computed('messages_request_web_view'),
            'signature' / Hex(Const(0x269dc2c1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_from_bot_menu=16,
                                is_silent=32,
                                is_compact=128,
                                is_fullscreen=256,
                                has_url=2,
                                has_start_param=8,
                                has_theme_params=4,
                                has_reply_to=1,
                                has_send_as=8192),
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'),
            'url' / If(this.flags.has_url, TString),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString,
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')))

    @constructor(0xb0d81a83, 'messages_prolong_web_view')
    def struct_0xb0d81a83(self):
        return Struct(
            'sname' / Computed('messages_prolong_web_view'),
            'signature' / Hex(Const(0xb0d81a83, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                has_reply_to=1,
                                has_send_as=8192),
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'),
            'query_id' / Int64ul,
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')))

    @constructor(0x34fdc5c3, 'messages_get_bot_app')
    def struct_0x34fdc5c3(self):
        return (
            'app' / self.input_bot_app_structures('app'),
            'hash' / Int64ul)

    @constructor(0x8c5a3b3c, 'messages_request_app_web_view')
    def struct_0x8c5a3b3c(self):
        return Struct(
            'sname' / Computed('messages_request_app_web_view'),
            'signature' / Hex(Const(0x8c5a3b3c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_write_allowed=1,
                                has_start_param=2,
                                has_theme_params=4),
            'peer' / self.input_peer_structures('peer'),
            'app' / self.input_bot_app_structures('app'),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString)

    @constructor(0x1a46500a, 'messages_request_simple_web_view')
    def struct_0x1a46500a(self):
        return Struct(
            'sname' / Computed('messages_request_simple_web_view'),
            'signature' / Hex(Const(0x1a46500a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_from_switch_webview=2,
                                is_from_side_menu=4,
                                has_url=8,
                                has_start_param=16,
                                has_theme_params=1),
            'bot' / self.input_user_structures('bot'),
            'url' / If(this.flags.has_url, TString),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString)

    @constructor(0xddcf50eb, 'messages_send_web_view_result_message')
    def struct_0xddcf50eb(self):
        return ['query_id' / Int64ul]

    @constructor(0xe41cd11d, 'messages_set_web_view_result')
    def struct_0xe41cd11d(self):
        return ['query_id' / Int64ul]

    @constructor(0x22b6c214, 'messages_get_web_view_result')
    def struct_0x22b6c214(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'),
            'query_id' / Int64ul)

    @constructor(0x93bf667f, 'attach_menu_bots_bot')
    def struct_0x93bf667f(self):
        return (
            'bot' / self.attach_menu_bot_structures('bot'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x882f76bb, 'simple_web_view_result_url')
    def struct_0x882f76bb(self):
        return ['url' / TString]

    @constructor(0x0c94511c, 'web_view_message_sent')
    def struct_0x0c94511c(self):
        return Struct(
            'sname' / Computed('web_view_message_sent'),
            'signature' / Hex(Const(0x0c94511c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_msg_id=1),
            'msg_id' / If(this.flags.has_msg_id, self.struct_0x890c3d89()))

    @constructor(0x77216192, 'messages_get_attach_menu_bot')
    def struct_0x77216192(self):
        return ['bot' / self.input_user_structures('bot')]

    @constructor(0x831a83a2, 'account_upload_ringtone')
    def struct_0x831a83a2(self):
        return (
            'file' / self.input_file_structures('file'),
            'file_name' / TString,
            'mime_type' / TString)

    @constructor(0xe1902288, 'account_get_saved_ringtones')
    def struct_0xe1902288(self):
        return ['hash' / Int64ul]

    @constructor(0x3dea5b03, 'account_save_ringtone')
    def struct_0x3dea5b03(self):
        return (
            'id' / self.input_document_structures('id'),
            'unsave' / TBool)

    @constructor(0x4576f3f0, 'attach_menu_bot_icon_color')
    def struct_0x4576f3f0(self):
        return (
            'name' / TString,
            'color' / Int32ul)

    @constructor(0xb2a7386b, 'attach_menu_bot_icon')
    def struct_0xb2a7386b(self):
        return Struct(
            'sname' / Computed('attach_menu_bot_icon'),
            'signature' / Hex(Const(0xb2a7386b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_colors=1),
            'name' / TString,
            'icon' / self.document_structures('icon'),
            'colors' / If(this.flags.has_colors, self.vector(self.struct_0x4576f3f0(), 'colors')))

    @constructor(0x4504d54f, 'bots_set_bot_menu_button')
    def struct_0x4504d54f(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'button' / self.bot_menu_button_structures('button'))

    @constructor(0x9c60eb28, 'bots_get_bot_menu_button')
    def struct_0x9c60eb28(self):
        return ['user_id' / self.input_user_structures('user_id')]

    @constructor(0xeb50adf5, 'messages_bot_app')
    def struct_0xeb50adf5(self):
        return Struct(
            'sname' / Computed('messages_bot_app'),
            'signature' / Hex(Const(0xeb50adf5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inactive=1,
                                is_request_write_access=2),
            'app' / self.bot_app_structures('app'))

    @constructor(0x3c1b4f0d, 'app_web_view_result_url')
    def struct_0x3c1b4f0d(self):
        return ['url' / TString]

    @constructor(0xb57295d5, 'inline_bot_web_view')
    def struct_0xb57295d5(self):
        return (
            'text' / TString,
            'url' / TString)

    @constructor(0xe4cb9580, 'channels_toggle_join_to_send')
    def struct_0xe4cb9580(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0x4c2985b6, 'channels_toggle_join_request')
    def struct_0x4c2985b6(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0x41248786, 'phone_save_call_log')
    def struct_0x41248786(self):
        return (
            'peer' / self.struct_0x1e36fded(),
            'file' / self.input_file_structures('file'))

    @constructor(0xaed0cbd9, 'payments_exported_invoice')
    def struct_0xaed0cbd9(self):
        return ['url' / TString]

    @constructor(0x0f91b065, 'payments_export_invoice')
    def struct_0x0f91b065(self):
        return ['invoice_media' / self.input_media_structures('invoice_media')]

    @constructor(0x269e9a49, 'messages_transcribe_audio')
    def struct_0x269e9a49(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0x7f1d072f, 'messages_rate_transcribed_audio')
    def struct_0x7f1d072f(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'transcription_id' / Int64ul,
            'good' / TBool)

    @constructor(0xcfb9d957, 'messages_transcribed_audio')
    def struct_0xcfb9d957(self):
        return Struct(
            'sname' / Computed('messages_transcribed_audio'),
            'signature' / Hex(Const(0xcfb9d957, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pending=1,
                                has_trial_remains_num=2),
            'transcription_id' / Int64ul,
            'text' / TString,
            'trial_remains_num' / If(this.flags.has_trial_remains_num, Int32ul),
            'trial_remains_until_date' / If(this.flags.has_trial_remains_num, TTimestamp))

    @constructor(0x9fc19eb6, 'payments_can_purchase_premium')
    def struct_0x9fc19eb6(self):
        return ['purpose' / self.input_store_payment_purpose_structures('purpose')]

    @constructor(0x146e958d, 'payments_request_recurring_payment')
    def struct_0x146e958d(self):
        return (
            'user_id' / self.input_user_structures('user_id'),
            'recurring_init_charge' / TString,
            'invoice_media' / self.input_media_structures('invoice_media'))

    @constructor(0xd9ab0f54, 'messages_get_custom_emoji_documents')
    def struct_0xd9ab0f54(self):
        return ['document_id' / self.vector(Int64ul, 'document_id')]

    @constructor(0x61422a48, 'messages_report_reaction')
    def struct_0x61422a48(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'user_id' / self.input_user_structures('user_id'))

    @constructor(0x9dfeefb4, 'messages_clear_recent_reactions')
    def struct_0x9dfeefb4(self):
        return []

    @constructor(0xbb8125ba, 'messages_get_top_reactions')
    def struct_0xbb8125ba(self):
        return (
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x39461db2, 'messages_get_recent_reactions')
    def struct_0x39461db2(self):
        return (
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0xbdf93428, 'messages_get_default_tag_reactions')
    def struct_0xbdf93428(self):
        return ['hash' / Int64ul]

    @constructor(0x367617d3, 'messages_forum_topics')
    def struct_0x367617d3(self):
        return Struct(
            'sname' / Computed('messages_forum_topics'),
            'signature' / Hex(Const(0x367617d3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_order_by_create_date=1),
            'count' / Int32ul,
            'topics' / self.vector(self.forum_topic_structures('topics'), 'topics'),
            'messages' / self.vector(self.message_structures('messages'), 'messages'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'pts' / Int32ul)

    @constructor(0xa4298b29, 'channels_toggle_forum')
    def struct_0xa4298b29(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0xf40c0224, 'channels_create_forum_topic')
    def struct_0xf40c0224(self):
        return Struct(
            'sname' / Computed('channels_create_forum_topic'),
            'signature' / Hex(Const(0xf40c0224, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_icon_color=1,
                                has_icon_emoji_id=8,
                                has_send_as=4),
            'channel' / self.input_channel_structures('channel'),
            'title' / TString,
            'icon_color' / If(this.flags.has_icon_color, Int32ul),
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'random_id' / Int64ul,
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')))

    @constructor(0xf4dfa185, 'channels_edit_forum_topic')
    def struct_0xf4dfa185(self):
        return Struct(
            'sname' / Computed('channels_edit_forum_topic'),
            'signature' / Hex(Const(0xf4dfa185, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1,
                                has_icon_emoji_id=2,
                                has_closed=4,
                                has_hidden=8),
            'channel' / self.input_channel_structures('channel'),
            'topic_id' / Int32ul,
            'title' / If(this.flags.has_title, TString),
            'icon_emoji_id' / If(this.flags.has_icon_emoji_id, Int64ul),
            'closed' / If(this.flags.has_closed, TBool),
            'hidden' / If(this.flags.has_hidden, TBool))

    @constructor(0x6c2d9026, 'channels_update_pinned_forum_topic')
    def struct_0x6c2d9026(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'topic_id' / Int32ul,
            'pinned' / TBool)

    @constructor(0x0de560d1, 'channels_get_forum_topics')
    def struct_0x0de560d1(self):
        return Struct(
            'sname' / Computed('channels_get_forum_topics'),
            'signature' / Hex(Const(0x0de560d1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_q=1),
            'channel' / self.input_channel_structures('channel'),
            'q' / If(this.flags.has_q, TString),
            'offset_date' / TTimestamp,
            'offset_id' / Int32ul,
            'offset_topic' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xb0831eb9, 'channels_get_forum_topics_by_id')
    def struct_0xb0831eb9(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'topics' / self.vector(Int32ul, 'topics'))

    @constructor(0xb4073647, 'username')
    def struct_0xb4073647(self):
        return Struct(
            'sname' / Computed('username'),
            'signature' / Hex(Const(0xb4073647, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_editable=1,
                                is_active=2),
            'username' / TString)

    @constructor(0x34435f2d, 'channels_delete_topic_history')
    def struct_0x34435f2d(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'top_msg_id' / Int32ul)

    @constructor(0x3cd930b7, 'channels_set_emoji_stickers')
    def struct_0x3cd930b7(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'stickerset' / self.input_sticker_set_structures('stickerset'))

    @constructor(0xad399cee, 'channels_set_boosts_to_unblock_restrictions')
    def struct_0xad399cee(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'boosts' / Int32ul)

    @constructor(0xef500eab, 'account_reorder_usernames')
    def struct_0xef500eab(self):
        return ['order' / self.vector(TString, 'order')]

    @constructor(0x58d6b376, 'account_toggle_username')
    def struct_0x58d6b376(self):
        return (
            'username' / TString,
            'active' / TBool)

    @constructor(0xb45ced1d, 'channels_reorder_usernames')
    def struct_0xb45ced1d(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'order' / self.vector(TString, 'order'))

    @constructor(0x50f24105, 'channels_toggle_username')
    def struct_0x50f24105(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'username' / TString,
            'active' / TBool)

    @constructor(0x0a245dd3, 'channels_deactivate_all_usernames')
    def struct_0x0a245dd3(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x2950a18f, 'channels_reorder_pinned_forum_topics')
    def struct_0x2950a18f(self):
        return Struct(
            'sname' / Computed('channels_reorder_pinned_forum_topics'),
            'signature' / Hex(Const(0x2950a18f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force=1),
            'channel' / self.input_channel_structures('channel'),
            'order' / self.vector(Int32ul, 'order'))

    @constructor(0x68f3e4eb, 'channels_toggle_anti_spam')
    def struct_0x68f3e4eb(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0xa850a693, 'channels_report_anti_spam_false_positive')
    def struct_0xa850a693(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'msg_id' / Int32ul)

    @constructor(0x6a6e7854, 'channels_toggle_participants_hidden')
    def struct_0x6a6e7854(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'enabled' / TBool)

    @constructor(0x18afbc93, 'channels_click_sponsored_message')
    def struct_0x18afbc93(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'random_id' / TBytes)

    @constructor(0x9eb51445, 'messages_set_default_history_ttl')
    def struct_0x9eb51445(self):
        return ['period' / Int32ul]

    @constructor(0x658b7188, 'messages_get_default_history_ttl')
    def struct_0x658b7188(self):
        return []

    @constructor(0x43b46b20, 'default_history_ttl')
    def struct_0x43b46b20(self):
        return ['period' / Int32ul]

    @constructor(0x91b2d060, 'messages_send_bot_requested_peer')
    def struct_0x91b2d060(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'button_id' / Int32ul,
            'requested_peers' / self.vector(self.input_peer_structures('requested_peers'), 'requested_peers'))

    @constructor(0xf8654027, 'contacts_export_contact_token')
    def struct_0xf8654027(self):
        return []

    @constructor(0x13005788, 'contacts_import_contact_token')
    def struct_0x13005788(self):
        return ['token' / TString]

    @constructor(0xe14c4a71, 'photos_upload_contact_profile_photo')
    def struct_0xe14c4a71(self):
        return Struct(
            'sname' / Computed('photos_upload_contact_profile_photo'),
            'signature' / Hex(Const(0xe14c4a71, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_suggest=8,
                                is_save=16,
                                has_file=1,
                                has_video=2,
                                has_video_start_ts=4,
                                has_video_emoji_markup=32),
            'user_id' / self.input_user_structures('user_id'),
            'file' / If(this.flags.has_file, self.input_file_structures('file')),
            'video' / If(this.flags.has_video, self.input_file_structures('video')),
            'video_start_ts' / If(this.flags.has_video_start_ts, Double),
            'video_emoji_markup' / If(this.flags.has_video_emoji_markup, self.video_size_structures('video_emoji_markup')))

    @constructor(0xe2750328, 'account_get_default_profile_photo_emojis')
    def struct_0xe2750328(self):
        return ['hash' / Int64ul]

    @constructor(0x915860ae, 'account_get_default_group_photo_emojis')
    def struct_0x915860ae(self):
        return ['hash' / Int64ul]

    @constructor(0x35a9e0d5, 'account_get_channel_restricted_status_emojis')
    def struct_0x35a9e0d5(self):
        return ['hash' / Int64ul]

    @constructor(0xd8aa3671, 'channels_update_color')
    def struct_0xd8aa3671(self):
        return Struct(
            'sname' / Computed('channels_update_color'),
            'signature' / Hex(Const(0xd8aa3671, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_for_profile=2,
                                has_color=4,
                                has_background_emoji_id=1),
            'channel' / self.input_channel_structures('channel'),
            'color' / If(this.flags.has_color, Int32ul),
            'background_emoji_id' / If(this.flags.has_background_emoji_id, Int64ul))

    @constructor(0x7cefa15d, 'account_update_color')
    def struct_0x7cefa15d(self):
        return Struct(
            'sname' / Computed('account_update_color'),
            'signature' / Hex(Const(0x7cefa15d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_for_profile=2,
                                has_color=4,
                                has_background_emoji_id=1),
            'color' / If(this.flags.has_color, Int32ul),
            'background_emoji_id' / If(this.flags.has_background_emoji_id, Int64ul))

    @constructor(0x8ffacae1, 'messages_set_chat_wall_paper')
    def struct_0x8ffacae1(self):
        return Struct(
            'sname' / Computed('messages_set_chat_wall_paper'),
            'signature' / Hex(Const(0x8ffacae1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_for_both=8,
                                is_revert=16,
                                has_wallpaper=1,
                                has_settings=4,
                                has_id=2),
            'peer' / self.input_peer_structures('peer'),
            'wallpaper' / If(this.flags.has_wallpaper, self.input_wall_paper_structures('wallpaper')),
            'settings' / If(this.flags.has_settings, self.wall_paper_settings_structures('settings')),
            'id' / If(this.flags.has_id, Int32ul))

    @constructor(0x94c65c76, 'contacts_set_blocked')
    def struct_0x94c65c76(self):
        return Struct(
            'sname' / Computed('contacts_set_blocked'),
            'signature' / Hex(Const(0x94c65c76, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my_stories_from=1),
            'id' / self.vector(self.input_peer_structures('id'), 'id'),
            'limit' / Int32ul)

    @constructor(0xba6705f0, 'edit_close_friends')
    def struct_0xba6705f0(self):
        return ['id' / self.vector(Int64ul, 'id')]

    @constructor(0x89fdd778, 'input_media_story')
    def struct_0x89fdd778(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul)

    @constructor(0x1359f4e6, 'bots_can_send_message')
    def struct_0x1359f4e6(self):
        return ['bot' / self.input_user_structures('bot')]

    @constructor(0xf132e3ef, 'bots_allow_send_message')
    def struct_0xf132e3ef(self):
        return ['bot' / self.input_user_structures('bot')]

    @constructor(0x087fc5e7, 'bots_invoke_web_view_custom_method')
    def struct_0x087fc5e7(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'custom_method' / TString,
            'params' / self.struct_0x7d748d04())

    @constructor(0xfd5e12bd, 'messages_web_page')
    def struct_0xfd5e12bd(self):
        return (
            'webpage' / self.web_page_structures('webpage'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x257e962b, 'premium_gift_code_option')
    def struct_0x257e962b(self):
        return Struct(
            'sname' / Computed('premium_gift_code_option'),
            'signature' / Hex(Const(0x257e962b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_store_product=1,
                                has_store_quantity=2),
            'users' / Int32ul,
            'months' / Int32ul,
            'store_product' / If(this.flags.has_store_product, TString),
            'store_quantity' / If(this.flags.has_store_quantity, Int32ul),
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0x2757ba54, 'payments_get_premium_gift_code_options')
    def struct_0x2757ba54(self):
        return Struct(
            'sname' / Computed('payments_get_premium_gift_code_options'),
            'signature' / Hex(Const(0x2757ba54, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_boost_peer=1),
            'boost_peer' / If(this.flags.has_boost_peer, self.input_peer_structures('boost_peer')))

    @constructor(0x8e51b4c1, 'payments_check_gift_code')
    def struct_0x8e51b4c1(self):
        return ['slug' / TString]

    @constructor(0xf6e26854, 'payments_apply_gift_code')
    def struct_0xf6e26854(self):
        return ['slug' / TString]

    @constructor(0xf4239425, 'payments_get_giveaway_info')
    def struct_0xf4239425(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0x284a1096, 'payments_checked_gift_code')
    def struct_0x284a1096(self):
        return Struct(
            'sname' / Computed('payments_checked_gift_code'),
            'signature' / Hex(Const(0x284a1096, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_via_giveaway=4,
                                has_from_id=16,
                                has_giveaway_msg_id=8,
                                has_to_id=1,
                                has_used_date=2),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'giveaway_msg_id' / If(this.flags.has_giveaway_msg_id, Int32ul),
            'to_id' / If(this.flags.has_to_id, Int64ul),
            'date' / TTimestamp,
            'months' / Int32ul,
            'used_date' / If(this.flags.has_used_date, TTimestamp),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x5ff58f20, 'payments_launch_prepaid_giveaway')
    def struct_0x5ff58f20(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'giveaway_id' / Int64ul,
            'purpose' / self.input_store_payment_purpose_structures('purpose'))

    @constructor(0xf0d3e6a8, 'channels_update_emoji_status')
    def struct_0xf0d3e6a8(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'emoji_status' / self.emoji_status_structures('emoji_status'))

    @constructor(0x83b70d97, 'channels_get_channel_recommendations')
    def struct_0x83b70d97(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x9738bb15, 'channels_toggle_view_forum_as_messages')
    def struct_0x9738bb15(self):
        return (
            'channel_id' / self.input_channel_structures('channel_id'),
            'enabled' / TBool)

    @constructor(0xb54b5acf, 'peer_color')
    def struct_0xb54b5acf(self):
        return Struct(
            'sname' / Computed('peer_color'),
            'signature' / Hex(Const(0xb54b5acf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_color=1,
                                has_background_emoji_id=2),
            'color' / If(this.flags.has_color, Int32ul),
            'background_emoji_id' / If(this.flags.has_background_emoji_id, Int64ul))

    @constructor(0xadec6ebe, 'help_peer_color_option')
    def struct_0xadec6ebe(self):
        return Struct(
            'sname' / Computed('help_peer_color_option'),
            'signature' / Hex(Const(0xadec6ebe, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_hidden=1,
                                has_colors=2,
                                has_dark_colors=4,
                                has_channel_min_level=8,
                                has_group_min_level=16),
            'color_id' / Int32ul,
            'colors' / If(this.flags.has_colors, self.help_peer_color_set_structures('colors')),
            'dark_colors' / If(this.flags.has_dark_colors, self.help_peer_color_set_structures('dark_colors')),
            'channel_min_level' / If(this.flags.has_channel_min_level, Int32ul),
            'group_min_level' / If(this.flags.has_group_min_level, Int32ul))

    @constructor(0xda80f42f, 'help_get_peer_colors')
    def struct_0xda80f42f(self):
        return ['hash' / Int32ul]

    @constructor(0xabcfa9fd, 'help_get_peer_profile_colors')
    def struct_0xabcfa9fd(self):
        return ['hash' / Int32ul]

    @constructor(0xbd87cb6c, 'saved_dialog')
    def struct_0xbd87cb6c(self):
        return Struct(
            'sname' / Computed('saved_dialog'),
            'signature' / Hex(Const(0xbd87cb6c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=4),
            'peer' / self.peer_structures('peer'),
            'top_message' / Int32ul)

    @constructor(0xd63d94e0, 'messages_get_pinned_saved_dialogs')
    def struct_0xd63d94e0(self):
        return []

    @constructor(0x5381d21a, 'messages_get_saved_dialogs')
    def struct_0x5381d21a(self):
        return Struct(
            'sname' / Computed('messages_get_saved_dialogs'),
            'signature' / Hex(Const(0x5381d21a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_pinned=1),
            'offset_date' / TTimestamp,
            'offset_id' / Int32ul,
            'offset_peer' / self.input_peer_structures('offset_peer'),
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x3d9a414d, 'messages_get_saved_history')
    def struct_0x3d9a414d(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'offset_id' / Int32ul,
            'offset_date' / TTimestamp,
            'add_offset' / Int32ul,
            'limit' / Int32ul,
            'max_id' / Int32ul,
            'min_id' / Int32ul,
            'hash' / Int64ul)

    @constructor(0xac81bbde, 'messages_toggle_saved_dialog_pin')
    def struct_0xac81bbde(self):
        return Struct(
            'sname' / Computed('messages_toggle_saved_dialog_pin'),
            'signature' / Hex(Const(0xac81bbde, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=1),
            'peer' / self.input_dialog_peer_structures('peer'))

    @constructor(0x8b716587, 'messages_reorder_pinned_saved_dialogs')
    def struct_0x8b716587(self):
        return Struct(
            'sname' / Computed('messages_reorder_pinned_saved_dialogs'),
            'signature' / Hex(Const(0x8b716587, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_force=1),
            'order' / self.vector(self.input_dialog_peer_structures('order'), 'order'))

    @constructor(0x3637e05b, 'messages_get_saved_reaction_tags')
    def struct_0x3637e05b(self):
        return Struct(
            'sname' / Computed('messages_get_saved_reaction_tags'),
            'signature' / Hex(Const(0x3637e05b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_peer=1),
            'peer' / If(this.flags.has_peer, self.input_peer_structures('peer')),
            'hash' / Int64ul)

    @constructor(0x60297dec, 'messages_update_saved_reaction_tag')
    def struct_0x60297dec(self):
        return Struct(
            'sname' / Computed('messages_update_saved_reaction_tag'),
            'signature' / Hex(Const(0x60297dec, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_title=1),
            'reaction' / self.reaction_structures('reaction'),
            'title' / If(this.flags.has_title, TString))

    @constructor(0x8c4bfe5d, 'messages_get_outbox_read_date')
    def struct_0x8c4bfe5d(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0x120b1ab9, 'account_business_weekly_open')
    def struct_0x120b1ab9(self):
        return (
            'start_minute' / Int32ul,
            'end_minute' / Int32ul)

    @constructor(0x8c92b098, 'account_business_work_hours')
    def struct_0x8c92b098(self):
        return Struct(
            'sname' / Computed('account_business_work_hours'),
            'signature' / Hex(Const(0x8c92b098, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_open_now=1),
            'timezone_id' / TString,
            'weekly_open' / self.vector(self.struct_0x120b1ab9(), 'weekly_open'))

    @constructor(0xac5c1af7, 'business_location')
    def struct_0xac5c1af7(self):
        return Struct(
            'sname' / Computed('business_location'),
            'signature' / Hex(Const(0xac5c1af7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_geo_point=1),
            'geo_point' / If(this.flags.has_geo_point, self.geo_point_structures('geo_point')),
            'address' / TString)

    @constructor(0xff9289f5, 'timezone')
    def struct_0xff9289f5(self):
        return (
            'id' / TString,
            'name' / TString,
            'utc_offset' / Int32ul)

    @constructor(0x49b30240, 'help_get_timezones_list')
    def struct_0x49b30240(self):
        return ['hash' / Int32ul]

    @constructor(0x4b00e066, 'account_update_business_work_hours')
    def struct_0x4b00e066(self):
        return Struct(
            'sname' / Computed('account_update_business_work_hours'),
            'signature' / Hex(Const(0x4b00e066, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_business_work_hours=1),
            'business_work_hours' / If(this.flags.has_business_work_hours, self.struct_0x8c92b098()))

    @constructor(0x9e6b131a, 'account_update_business_location')
    def struct_0x9e6b131a(self):
        return Struct(
            'sname' / Computed('account_update_business_location'),
            'signature' / Hex(Const(0x9e6b131a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_geo_point=2,
                                has_address=1),
            'geo_point' / If(this.flags.has_geo_point, self.input_geo_point_structures('geo_point')),
            'address' / If(this.flags.has_address, TString))

    @constructor(0x0697102b, 'quick_reply')
    def struct_0x0697102b(self):
        return (
            'shortcut_id' / Int32ul,
            'shortcut' / TString,
            'top_message' / Int32ul,
            'count' / Int32ul)

    @constructor(0xd483f2a8, 'messages_get_quick_replies')
    def struct_0xd483f2a8(self):
        return ['hash' / Int64ul]

    @constructor(0x60331907, 'messages_reorder_quick_replies')
    def struct_0x60331907(self):
        return ['order' / self.vector(Int32ul, 'order')]

    @constructor(0xf1d0fbd3, 'messages_check_quick_reply_shortcut')
    def struct_0xf1d0fbd3(self):
        return ['shortcut' / TString]

    @constructor(0x5c003cef, 'messages_edit_quick_reply_shortcut')
    def struct_0x5c003cef(self):
        return (
            'shortcut_id' / Int32ul,
            'shortcut' / TString)

    @constructor(0x94a495c3, 'messages_get_quick_reply_messages')
    def struct_0x94a495c3(self):
        return Struct(
            'sname' / Computed('messages_get_quick_reply_messages'),
            'signature' / Hex(Const(0x94a495c3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_id=1),
            'shortcut_id' / Int32ul,
            'id' / If(this.flags.has_id, self.vector(Int32ul, 'id')),
            'hash' / Int64ul)

    @constructor(0x33153ad4, 'messages_send_quick_reply_messages')
    def struct_0x33153ad4(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'shortcut_id' / Int32ul)

    @constructor(0xe105e910, 'messages_delete_quick_reply_messages')
    def struct_0xe105e910(self):
        return (
            'shortcut_id' / Int32ul,
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x3cc04740, 'messages_delete_quick_reply_shortcut')
    def struct_0x3cc04740(self):
        return ['shortcut_id' / Int32ul]

    @constructor(0x0194cb3b, 'account_input_business_greeting_message')
    def struct_0x0194cb3b(self):
        return (
            'shortcut_id' / Int32ul,
            'recipients' / self.struct_0x6f8b32aa(),
            'no_activity_days' / Int32ul)

    @constructor(0xe519abab, 'account_business_greeting_message')
    def struct_0xe519abab(self):
        return (
            'shortcut_id' / Int32ul,
            'recipients' / self.struct_0x21108ff7(),
            'no_activity_days' / Int32ul)

    @constructor(0x832175e0, 'account_input_business_away_message')
    def struct_0x832175e0(self):
        return Struct(
            'sname' / Computed('account_input_business_away_message'),
            'signature' / Hex(Const(0x832175e0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_offline_only=1),
            'shortcut_id' / Int32ul,
            'schedule' / self.account_business_away_message_schedule_structures('schedule'),
            'recipients' / self.struct_0x6f8b32aa())

    @constructor(0xef156a5c, 'account_business_away_message')
    def struct_0xef156a5c(self):
        return Struct(
            'sname' / Computed('account_business_away_message'),
            'signature' / Hex(Const(0xef156a5c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_offline_only=1),
            'shortcut_id' / Int32ul,
            'schedule' / self.account_business_away_message_schedule_structures('schedule'),
            'recipients' / self.struct_0x21108ff7())

    @constructor(0xa26a7fa5, 'account_update_business_away_message')
    def struct_0xa26a7fa5(self):
        return Struct(
            'sname' / Computed('account_update_business_away_message'),
            'signature' / Hex(Const(0xa26a7fa5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_message=1),
            'message' / If(this.flags.has_message, self.struct_0x832175e0()))

    @constructor(0x66cdafc4, 'account_update_business_greeting_message')
    def struct_0x66cdafc4(self):
        return Struct(
            'sname' / Computed('account_update_business_greeting_message'),
            'signature' / Hex(Const(0x66cdafc4, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_message=1),
            'message' / If(this.flags.has_message, self.struct_0x0194cb3b()))

    @constructor(0x6f8b32aa, 'account_input_business_recipients')
    def struct_0x6f8b32aa(self):
        return Struct(
            'sname' / Computed('account_input_business_recipients'),
            'signature' / Hex(Const(0x6f8b32aa, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_existing_chats=1,
                                is_new_chats=2,
                                is_contacts=4,
                                is_non_contacts=8,
                                is_exclude_selected=32,
                                has_users=16),
            'users' / If(this.flags.has_users, self.vector(self.input_user_structures('users'), 'users')))

    @constructor(0x21108ff7, 'account_business_recipients')
    def struct_0x21108ff7(self):
        return Struct(
            'sname' / Computed('account_business_recipients'),
            'signature' / Hex(Const(0x21108ff7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_existing_chats=1,
                                is_new_chats=2,
                                is_contacts=4,
                                is_non_contacts=8,
                                is_exclude_selected=32,
                                has_users=16),
            'users' / If(this.flags.has_users, self.vector(Int64ul, 'users')))

    @constructor(0xe7e999e7, 'connected_bot')
    def struct_0xe7e999e7(self):
        return Struct(
            'sname' / Computed('connected_bot'),
            'signature' / Hex(Const(0xe7e999e7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_reply=1),
            'bot_id' / Int64ul,
            'recipients' / self.struct_0x21108ff7())

    @constructor(0x17d7f87b, 'account_connected_bots')
    def struct_0x17d7f87b(self):
        return (
            'connected_bots' / self.vector(self.struct_0xbd068601(), 'connected_bots'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x9c2d527d, 'account_update_connected_bot')
    def struct_0x9c2d527d(self):
        return Struct(
            'sname' / Computed('account_update_connected_bot'),
            'signature' / Hex(Const(0x9c2d527d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_reply=1,
                                is_deleted=2),
            'bot' / self.input_user_structures('bot'),
            'recipients' / self.struct_0x6f8b32aa())

    @constructor(0x4ea4c80f, 'account_get_connected_bots')
    def struct_0x4ea4c80f(self):
        return []

    @constructor(0xfd2dda49, 'messages_toggle_dialog_filter_tags')
    def struct_0xfd2dda49(self):
        return ['enabled' / TBool]

    @constructor(0xf3e0da33, 'input_chatlist_dialog_filter')
    def struct_0xf3e0da33(self):
        return ['filter_id' / Int32ul]

    @constructor(0x10e6e3a6, 'chatlists_exported_chatlist_invite')
    def struct_0x10e6e3a6(self):
        return (
            'filter' / self.dialog_filter_structures('filter'),
            'invite' / self.struct_0x0c5181ac())

    @constructor(0x0c5181ac, 'exported_chatlist_invite')
    def struct_0x0c5181ac(self):
        return Struct(
            'sname' / Computed('exported_chatlist_invite'),
            'signature' / Hex(Const(0x0c5181ac, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1),
            'title' / TString,
            'url' / TString,
            'peers' / self.vector(self.peer_structures('peers'), 'peers'))

    @constructor(0x10ab6dc7, 'chatlists_exported_invites')
    def struct_0x10ab6dc7(self):
        return (
            'invites' / self.vector(self.struct_0x0c5181ac(), 'invites'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x93bd878d, 'chatlists_chatlist_updates')
    def struct_0x93bd878d(self):
        return (
            'missing_peers' / self.vector(self.peer_structures('missing_peers'), 'missing_peers'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x8472478e, 'chatlists_export_chatlist_invite')
    def struct_0x8472478e(self):
        return (
            'chatlist' / self.struct_0xf3e0da33(),
            'title' / TString,
            'peers' / self.vector(self.input_peer_structures('peers'), 'peers'))

    @constructor(0x719c5c5e, 'chatlists_delete_exported_invite')
    def struct_0x719c5c5e(self):
        return (
            'chatlist' / self.struct_0xf3e0da33(),
            'slug' / TString)

    @constructor(0x653db63d, 'chatlists_edit_exported_invite')
    def struct_0x653db63d(self):
        return Struct(
            'sname' / Computed('chatlists_edit_exported_invite'),
            'signature' / Hex(Const(0x653db63d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1,
                                has_title=2,
                                has_peers=4),
            'chatlist' / self.struct_0xf3e0da33(),
            'slug' / TString,
            'title' / If(this.flags.has_title, TString),
            'peers' / If(this.flags.has_peers, self.vector(self.input_peer_structures('peers'), 'peers')))

    @constructor(0xce03da83, 'chatlists_get_exported_invites')
    def struct_0xce03da83(self):
        return ['chatlist' / self.struct_0xf3e0da33()]

    @constructor(0x41c10fff, 'chatlists_check_chatlist_invite')
    def struct_0x41c10fff(self):
        return ['slug' / TString]

    @constructor(0xa6b1e39a, 'chatlists_join_chatlist_invite')
    def struct_0xa6b1e39a(self):
        return (
            'slug' / TString,
            'peers' / self.vector(self.input_peer_structures('peers'), 'peers'))

    @constructor(0x89419521, 'chatlists_get_chatlist_updates')
    def struct_0x89419521(self):
        return ['chatlist' / self.struct_0xf3e0da33()]

    @constructor(0xe089f8f5, 'chatlists_join_chatlist_updates')
    def struct_0xe089f8f5(self):
        return (
            'chatlist' / self.struct_0xf3e0da33(),
            'peers' / self.vector(self.input_peer_structures('peers'), 'peers'))

    @constructor(0x66e486fb, 'chatlists_hide_chatlist_updates')
    def struct_0x66e486fb(self):
        return ['chatlist' / self.struct_0xf3e0da33()]

    @constructor(0xfdbcd714, 'chatlists_get_leave_chatlist_suggestions')
    def struct_0xfdbcd714(self):
        return ['chatlist' / self.struct_0xf3e0da33()]

    @constructor(0x74fae13a, 'chatlists_leave_chatlist')
    def struct_0x74fae13a(self):
        return (
            'chatlist' / self.struct_0xf3e0da33(),
            'peers' / self.vector(self.input_peer_structures('peers'), 'peers'))

    @constructor(0xcae68768, 'stories_peer_stories')
    def struct_0xcae68768(self):
        return (
            'stories' / self.stories_peer_stories_structures('stories'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xc7dfdfdd, 'stories_can_send_story')
    def struct_0xc7dfdfdd(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xe4e6694b, 'stories_send_story')
    def struct_0xe4e6694b(self):
        return Struct(
            'sname' / Computed('stories_send_story'),
            'signature' / Hex(Const(0xe4e6694b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_pinned=4,
                                is_noforwards=16,
                                is_fwd_modified=128,
                                has_media_areas=32,
                                has_caption=1,
                                has_entities=2,
                                has_period=8,
                                has_fwd_from_id=64),
            'peer' / self.input_peer_structures('peer'),
            'media' / self.input_media_structures('media'),
            'media_areas' / If(this.flags.has_media_areas, self.vector(self.stories_media_area_structures('media_areas'), 'media_areas')),
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'privacy_rules' / self.vector(self.input_privacy_rule_structures('privacy_rules'), 'privacy_rules'),
            'random_id' / Int64ul,
            'period' / If(this.flags.has_period, Int32ul),
            'fwd_from_id' / If(this.flags.has_fwd_from_id, self.input_peer_structures('fwd_from_id')),
            'fwd_from_story' / If(this.flags.has_fwd_from_id, Int32ul))

    @constructor(0xae59db5f, 'stories_delete_stories')
    def struct_0xae59db5f(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x9a75a1ef, 'stories_toggle_pinned')
    def struct_0x9a75a1ef(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'pinned' / TBool)

    @constructor(0xb583ba46, 'stories_edit_story')
    def struct_0xb583ba46(self):
        return Struct(
            'sname' / Computed('stories_edit_story'),
            'signature' / Hex(Const(0xb583ba46, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_media=1,
                                has_media_areas=8,
                                has_caption=2,
                                has_privacy_rules=4),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'media' / If(this.flags.has_media, self.input_media_structures('media')),
            'media_areas' / If(this.flags.has_media_areas, self.vector(self.stories_media_area_structures('media_areas'), 'media_areas')),
            'caption' / If(this.flags.has_caption, TString),
            'entities' / If(this.flags.has_caption, self.vector(self.message_entity_structures('entities'), 'entities')),
            'privacy_rules' / If(this.flags.has_privacy_rules, self.vector(self.input_privacy_rule_structures('privacy_rules'), 'privacy_rules')))

    @constructor(0xeeb0d625, 'stories_get_all_stories')
    def struct_0xeeb0d625(self):
        return Struct(
            'sname' / Computed('stories_get_all_stories'),
            'signature' / Hex(Const(0xeeb0d625, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_next=2,
                                is_include_hidden=4,
                                has_state=1),
            'state' / If(this.flags.has_state, TString))

    @constructor(0xbd0415c4, 'stories_toggle_peer_stories_hidden')
    def struct_0xbd0415c4(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'hidden' / TBool)

    @constructor(0x5dd8c3c8, 'stories_stories')
    def struct_0x5dd8c3c8(self):
        return (
            'count' / Int32ul,
            'stories' / self.vector(self.story_item_structures('stories'), 'stories'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x2c4ada50, 'stories_get_peer_stories')
    def struct_0x2c4ada50(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x5821a5dc, 'stories_get_pinned_stories')
    def struct_0x5821a5dc(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xb4352016, 'stories_get_stories_archive')
    def struct_0xb4352016(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0xa556dac8, 'stories_read_stories')
    def struct_0xa556dac8(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'max_id' / Int32ul)

    @constructor(0x7ed23c57, 'stories_get_story_views_list')
    def struct_0x7ed23c57(self):
        return Struct(
            'sname' / Computed('stories_get_story_views_list'),
            'signature' / Hex(Const(0x7ed23c57, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_just_contacts=1,
                                is_reactions_first=4,
                                is_forwards_first=8,
                                has_q=2),
            'peer' / self.input_peer_structures('peer'),
            'q' / If(this.flags.has_q, TString),
            'id' / Int32ul,
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x5774ca74, 'stories_get_stories_by_id')
    def struct_0x5774ca74(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x28e16cc8, 'stories_get_stories_views')
    def struct_0x28e16cc8(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x3fc9053b, 'stories_exported_story_link')
    def struct_0x3fc9053b(self):
        return ['link' / TString]

    @constructor(0x7b8def20, 'stories_export_story_link')
    def struct_0x7b8def20(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul)

    @constructor(0x1923fa8c, 'stories_report')
    def struct_0x1923fa8c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'reason' / self.report_reason_structures('reason'),
            'message' / TString)

    @constructor(0x9b5ae7f9, 'stories_get_all_read_peer_stories')
    def struct_0x9b5ae7f9(self):
        return []

    @constructor(0x535983c3, 'stories_get_peer_max_ids')
    def struct_0x535983c3(self):
        return ['id' / self.vector(self.input_peer_structures('id'), 'id')]

    @constructor(0x712e27fd, 'stories_stealth_mode')
    def struct_0x712e27fd(self):
        return Struct(
            'sname' / Computed('stories_stealth_mode'),
            'signature' / Hex(Const(0x712e27fd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_active_until_date=1,
                                has_cooldown_until_date=2),
            'active_until_date' / If(this.flags.has_active_until_date, TTimestamp),
            'cooldown_until_date' / If(this.flags.has_cooldown_until_date, TTimestamp))

    @constructor(0x57bbd166, 'stories_activate_stealth_mode')
    def struct_0x57bbd166(self):
        return Struct(
            'sname' / Computed('stories_activate_stealth_mode'),
            'signature' / Hex(Const(0x57bbd166, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_past=1,
                                is_future=2))

    @constructor(0x7fd736b2, 'stories_send_reaction')
    def struct_0x7fd736b2(self):
        return Struct(
            'sname' / Computed('stories_send_reaction'),
            'signature' / Hex(Const(0x7fd736b2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_add_to_recent=1),
            'peer' / self.input_peer_structures('peer'),
            'story_id' / Int32ul,
            'reaction' / self.reaction_structures('reaction'))

    @constructor(0xa56a8b60, 'stories_get_chats_to_send')
    def struct_0xa56a8b60(self):
        return []

    @constructor(0xc448415c, 'stories_my_boost')
    def struct_0xc448415c(self):
        return Struct(
            'sname' / Computed('stories_my_boost'),
            'signature' / Hex(Const(0xc448415c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_peer=1,
                                has_cooldown_until_date=2),
            'slot' / Int32ul,
            'peer' / If(this.flags.has_peer, self.peer_structures('peer')),
            'date' / TTimestamp,
            'expires' / Int32ul,
            'cooldown_until_date' / If(this.flags.has_cooldown_until_date, TTimestamp))

    @constructor(0x9ae228e2, 'stories_premium_my_boosts')
    def struct_0x9ae228e2(self):
        return (
            'my_boosts' / self.vector(self.struct_0xc448415c(), 'my_boosts'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x0be77b4a, 'stories_premium_get_my_boosts')
    def struct_0x0be77b4a(self):
        return []

    @constructor(0x4959427a, 'stories_premium_boosts_status')
    def struct_0x4959427a(self):
        return Struct(
            'sname' / Computed('stories_premium_boosts_status'),
            'signature' / Hex(Const(0x4959427a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_my_boost=4,
                                has_gift_boosts=16,
                                has_next_level_boosts=1,
                                has_premium_audience=2,
                                has_prepaid_giveaways=8),
            'level' / Int32ul,
            'current_level_boosts' / Int32ul,
            'boosts' / Int32ul,
            'gift_boosts' / If(this.flags.has_gift_boosts, Int32ul),
            'next_level_boosts' / If(this.flags.has_next_level_boosts, Int32ul),
            'premium_audience' / If(this.flags.has_premium_audience, self.struct_0xcbce2fe0()),
            'boost_url' / TString,
            'prepaid_giveaways' / If(this.flags.has_prepaid_giveaways, self.vector(self.stories_prepaid_giveaway_structures('prepaid_giveaways'), 'prepaid_giveaways')),
            'my_boost_slots' / If(this.flags.is_my_boost, self.vector(Int32ul, 'my_boost_slots')))

    @constructor(0x042f1f61, 'stories_premium_get_boosts_status')
    def struct_0x042f1f61(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x6b7da746, 'stories_premium_apply_boost')
    def struct_0x6b7da746(self):
        return Struct(
            'sname' / Computed('stories_premium_apply_boost'),
            'signature' / Hex(Const(0x6b7da746, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_slots=1),
            'slots' / If(this.flags.has_slots, self.vector(Int32ul, 'slots')),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0x86f8613c, 'stories_premium_boosts_list')
    def struct_0x86f8613c(self):
        return Struct(
            'sname' / Computed('stories_premium_boosts_list'),
            'signature' / Hex(Const(0x86f8613c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'boosts' / self.vector(self.stories_boost_structures('boosts'), 'boosts'),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x60f67660, 'stories_premium_get_boosts_list')
    def struct_0x60f67660(self):
        return Struct(
            'sname' / Computed('stories_premium_get_boosts_list'),
            'signature' / Hex(Const(0x60f67660, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_gifts=1),
            'peer' / self.input_peer_structures('peer'),
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x50cd067c, 'stories_stats_story_stats')
    def struct_0x50cd067c(self):
        return (
            'views_graph' / self.stats_graph_structures('views_graph'),
            'reactions_by_emotion_graph' / self.stats_graph_structures('reactions_by_emotion_graph'))

    @constructor(0x374fef40, 'stories_stats_get_story_stats')
    def struct_0x374fef40(self):
        return Struct(
            'sname' / Computed('stories_stats_get_story_stats'),
            'signature' / Hex(Const(0x374fef40, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul)

    @constructor(0xaa5f789c, 'story_reactions_list')
    def struct_0xaa5f789c(self):
        return Struct(
            'sname' / Computed('story_reactions_list'),
            'signature' / Hex(Const(0xaa5f789c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'reactions' / self.vector(self.story_reaction_structures('reactions'), 'reactions'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @constructor(0xb9b2881f, 'stories_get_story_reactions_list')
    def struct_0xb9b2881f(self):
        return Struct(
            'sname' / Computed('stories_get_story_reactions_list'),
            'signature' / Hex(Const(0xb9b2881f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_forwards_first=4,
                                has_reaction=1,
                                has_offset=2),
            'peer' / self.input_peer_structures('peer'),
            'id' / Int32ul,
            'reaction' / If(this.flags.has_reaction, self.reaction_structures('reaction')),
            'offset' / If(this.flags.has_offset, TString),
            'limit' / Int32ul)

    @constructor(0x405fef0d, 'input_media_invoice')
    def struct_0x405fef0d(self):
        return Struct(
            'sname' / Computed('input_media_invoice'),
            'signature' / Hex(Const(0x405fef0d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_photo=1,
                                has_start_param=2,
                                has_extend_media=4),
            'title' / TString,
            'description' / TString,
            'photo' / If(this.flags.has_photo, self.struct_0x9bed434d()),
            'invoice' / self.invoice_structures('invoice'),
            'payload' / TBytes,
            'provider' / TString,
            'provider_data' / self.struct_0x7d748d04(),
            'start_param' / If(this.flags.has_start_param, TString),
            'extend_media' / If(this.flags.has_extend_media, self.input_media_structures('extend_media')))

    @constructor(0x4d93a990, 'sponsored_message')
    def struct_0x4d93a990(self):
        return Struct(
            'sname' / Computed('sponsored_message'),
            'signature' / Hex(Const(0x4d93a990, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_recommended=32,
                                is_can_report=4096,
                                has_entities=2,
                                has_photo=64,
                                has_media=16384,
                                has_color=8192,
                                has_sponsor_info=128,
                                has_additional_info=256),
            'random_id' / TBytes,
            'url' / TString,
            'title' / TString,
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'photo' / If(this.flags.has_photo, self.photo_structures('photo')),
            'media' / If(this.flags.has_media, self.message_media_structures('media')),
            'color' / If(this.flags.has_color, self.struct_0xb54b5acf()),
            'button_text' / TString,
            'sponsor_info' / If(this.flags.has_sponsor_info, TString),
            'additional_info' / If(this.flags.has_additional_info, TString))

    @constructor(0x430d3150, 'sponsored_message_report_option')
    def struct_0x430d3150(self):
        return (
            'text' / TString,
            'option' / TBytes)

    @constructor(0x1af3dbb8, 'messages_report_sponsored_message')
    def struct_0x1af3dbb8(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'random_id' / TBytes,
            'option' / TBytes)

    @constructor(0x1dd840f5, 'messages_get_emoji_sticker_groups')
    def struct_0x1dd840f5(self):
        return ['hash' / Int32ul]

    @constructor(0xdea20a39, 'messages_get_available_effects')
    def struct_0xdea20a39(self):
        return ['hash' / Int32ul]

    @constructor(0x8e39261e, 'auth_request_firebase_sms')
    def struct_0x8e39261e(self):
        return Struct(
            'sname' / Computed('auth_request_firebase_sms'),
            'signature' / Hex(Const(0x8e39261e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_safety_net_token=1,
                                has_play_integrity_token=4,
                                has_ios_push_secret=2),
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'safety_net_token' / If(this.flags.has_safety_net_token, TString),
            'play_integrity_token' / If(this.flags.has_play_integrity_token, TString),
            'ios_push_secret' / If(this.flags.has_ios_push_secret, TString))

    @constructor(0x983f9745, 'messages_send_message')
    def struct_0x983f9745(self):
        return Struct(
            'sname' / Computed('messages_send_message'),
            'signature' / Hex(Const(0x983f9745, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_reply_markup=4,
                                has_entities=8,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072,
                                has_effect=262144),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'message' / TString,
            'random_id' / Int64ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')),
            'effect' / If(this.flags.has_effect, Int64ul))

    @constructor(0x7852834e, 'messages_send_media')
    def struct_0x7852834e(self):
        return Struct(
            'sname' / Computed('messages_send_media'),
            'signature' / Hex(Const(0x7852834e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_reply_markup=4,
                                has_entities=8,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072,
                                has_effect=262144),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'media' / self.input_media_structures('media'),
            'message' / TString,
            'random_id' / Int64ul,
            'reply_markup' / If(this.flags.has_reply_markup, self.reply_markup_structures('reply_markup')),
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')),
            'effect' / If(this.flags.has_effect, Int64ul))

    @constructor(0x6d74da08, 'messages_forward_messages')
    def struct_0x6d74da08(self):
        return Struct(
            'sname' / Computed('messages_forward_messages'),
            'signature' / Hex(Const(0x6d74da08, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_with_my_score=256,
                                is_drop_author=2048,
                                is_drop_media_captions=4096,
                                is_noforwards=16384,
                                has_top_msg_id=512,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072,
                                has_video_timestamp=1048576),
            'from_peer' / self.input_peer_structures('from_peer'),
            'id' / self.vector(Int32ul, 'id'),
            'random_id' / self.vector(Int64ul, 'random_id'),
            'to_peer' / self.input_peer_structures('to_peer'),
            'top_msg_id' / If(this.flags.has_top_msg_id, Int32ul),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')),
            'video_timestamp' / If(this.flags.has_video_timestamp, Int32ul))

    @constructor(0x7903e3d9, 'message_report_option')
    def struct_0x7903e3d9(self):
        return (
            'text' / TString,
            'option' / TBytes)

    @constructor(0xfc78af9b, 'messages_report')
    def struct_0xfc78af9b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'option' / TBytes,
            'message' / TString)

    @constructor(0x725afbbc, 'contacts_resolve_username')
    def struct_0x725afbbc(self):
        return Struct(
            'sname' / Computed('contacts_resolve_username'),
            'signature' / Hex(Const(0x725afbbc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_referer=1),
            'username' / TString,
            'referer' / If(this.flags.has_referer, TString))

    @constructor(0xcae47523, 'auth_resend_code')
    def struct_0xcae47523(self):
        return Struct(
            'sname' / Computed('auth_resend_code'),
            'signature' / Hex(Const(0xcae47523, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reason=1),
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'reason' / If(this.flags.has_reason, TString))

    @constructor(0xa455de90, 'messages_export_chat_invite')
    def struct_0xa455de90(self):
        return Struct(
            'sname' / Computed('messages_export_chat_invite'),
            'signature' / Hex(Const(0xa455de90, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_legacy_revoke_permanent=4,
                                is_request_needed=8,
                                has_expire_date=1,
                                has_usage_limit=2,
                                has_title=16,
                                has_subscription_pricing=32),
            'peer' / self.input_peer_structures('peer'),
            'expire_date' / If(this.flags.has_expire_date, TTimestamp),
            'usage_limit' / If(this.flags.has_usage_limit, Int32ul),
            'title' / If(this.flags.has_title, TString),
            'subscription_pricing' / If(this.flags.has_subscription_pricing, self.struct_0x05416d58()))

    @constructor(0xd372c5ce, 'messages_save_draft')
    def struct_0xd372c5ce(self):
        return Struct(
            'sname' / Computed('messages_save_draft'),
            'signature' / Hex(Const(0xd372c5ce, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_no_webpage=2,
                                is_invert_media=64,
                                has_reply_to=16,
                                has_entities=8,
                                has_media=32,
                                has_effect=128),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'peer' / self.input_peer_structures('peer'),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'media' / If(this.flags.has_media, self.input_media_structures('media')),
            'effect' / If(this.flags.has_effect, Int64ul))

    @constructor(0x37b74355, 'messages_send_multi_media')
    def struct_0x37b74355(self):
        return Struct(
            'sname' / Computed('messages_send_multi_media'),
            'signature' / Hex(Const(0x37b74355, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_silent=32,
                                is_background=64,
                                is_clear_draft=128,
                                is_noforwards=16384,
                                is_update_stickersets_order=32768,
                                is_invert_media=65536,
                                has_reply_to=1,
                                has_schedule_date=1024,
                                has_send_as=8192,
                                has_quick_reply_shortcut=131072,
                                has_effect=262144),
            'peer' / self.input_peer_structures('peer'),
            'reply_to' / If(this.flags.has_reply_to, self.input_reply_to_structures('reply_to')),
            'multi_media' / self.vector(self.struct_0x1cc6e91f(), 'multi_media'),
            'schedule_date' / If(this.flags.has_schedule_date, TTimestamp),
            'send_as' / If(this.flags.has_send_as, self.input_peer_structures('send_as')),
            'quick_reply_shortcut' / If(this.flags.has_quick_reply_shortcut, self.input_quick_reply_shortcut_structures('quick_reply_shortcut')),
            'effect' / If(this.flags.has_effect, Int64ul))

    @constructor(0x9dd6a67b, 'messages_send_paid_reaction')
    def struct_0x9dd6a67b(self):
        return Struct(
            'sname' / Computed('messages_send_paid_reaction'),
            'signature' / Hex(Const(0x9dd6a67b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_private=1),
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'count' / Int32ul,
            'random_id' / Int64ul,
            'is_private' / If(this.flags.is_private, TBool))

    @constructor(0x472455aa, 'messages_get_paid_reaction_privacy')
    def struct_0x472455aa(self):
        return []

    @constructor(0x849ad397, 'messages_toggle_paid_reaction_privacy')
    def struct_0x849ad397(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'is_private' / TBool)

    @constructor(0x864b2581, 'messages_set_chat_available_reactions')
    def struct_0x864b2581(self):
        return Struct(
            'sname' / Computed('messages_set_chat_available_reactions'),
            'signature' / Hex(Const(0x864b2581, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_reactions_limit=1,
                                has_paid_enabled=2),
            'peer' / self.input_peer_structures('peer'),
            'available_reactions' / self.chat_reactions_structures('available_reactions'),
            'reactions_limit' / If(this.flags.has_reactions_limit, Int32ul),
            'paid_enabled' / If(this.flags.has_paid_enabled, TBool))

    @constructor(0x418d549c, 'channels_toggle_signatures')
    def struct_0x418d549c(self):
        return Struct(
            'sname' / Computed('channels_toggle_signatures'),
            'signature' / Hex(Const(0x418d549c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_signatures_enabled=1,
                                is_profiles_enabled=2),
            'channel' / self.input_channel_structures('channel'))

    @constructor(0xd19f987b, 'channels_search_posts')
    def struct_0xd19f987b(self):
        return (
            'hashtag' / TString,
            'offset_rate' / Int32ul,
            'offset_peer' / self.input_peer_structures('offset_peer'),
            'offset_id' / Int32ul,
            'limit' / Int32ul)

    @constructor(0x673ad8f1, 'messages_view_sponsored_message')
    def struct_0x673ad8f1(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'random_id' / TBytes)

    @constructor(0x9bd2f439, 'messages_get_sponsored_messages')
    def struct_0x9bd2f439(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xf7760f51, 'stickers_remove_sticker_from_set')
    def struct_0xf7760f51(self):
        return ['sticker' / self.input_document_structures('sticker')]

    @constructor(0xffb6d4ca, 'stickers_change_sticker_position')
    def struct_0xffb6d4ca(self):
        return (
            'sticker' / self.input_document_structures('sticker'),
            'position' / Int32ul)

    @constructor(0x8653febe, 'stickers_add_sticker_to_set')
    def struct_0x8653febe(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'sticker' / self.struct_0xffa0a496())

    @constructor(0xa76a5392, 'stickers_set_sticker_set_thumb')
    def struct_0xa76a5392(self):
        return Struct(
            'sname' / Computed('stickers_set_sticker_set_thumb'),
            'signature' / Hex(Const(0xa76a5392, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_thumb=1,
                                has_thumb_document_id=2),
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'thumb' / If(this.flags.has_thumb, self.input_document_structures('thumb')),
            'thumb_document_id' / If(this.flags.has_thumb_document_id, Int64ul))

    @constructor(0xf5537ebc, 'stickers_change_sticker')
    def struct_0xf5537ebc(self):
        return Struct(
            'sname' / Computed('stickers_change_sticker'),
            'signature' / Hex(Const(0xf5537ebc, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_emoji=1,
                                has_mask_coords=2,
                                has_keywords=4),
            'sticker' / self.input_document_structures('sticker'),
            'emoji' / If(this.flags.has_emoji, TString),
            'mask_coords' / If(this.flags.has_mask_coords, self.struct_0xaed6dbb2()),
            'keywords' / If(this.flags.has_keywords, TString))

    @constructor(0x124b1c00, 'stickers_rename_sticker_set')
    def struct_0x124b1c00(self):
        return (
            'stickerset' / self.input_sticker_set_structures('stickerset'),
            'title' / TString)

    @constructor(0x87704394, 'stickers_delete_sticker_set')
    def struct_0x87704394(self):
        return ['stickerset' / self.input_sticker_set_structures('stickerset')]

    @constructor(0x4696459a, 'stickers_replace_sticker')
    def struct_0x4696459a(self):
        return (
            'sticker' / self.input_document_structures('sticker'),
            'new_sticker' / self.struct_0xffa0a496())

    @constructor(0xd0b5e1fc, 'messages_get_my_stickers')
    def struct_0xd0b5e1fc(self):
        return (
            'offset_id' / Int64ul,
            'limit' / Int32ul)

    @constructor(0xfaff629d, 'messages_my_stickers')
    def struct_0xfaff629d(self):
        return (
            'count' / Int32ul,
            'sets' / self.vector(self.sticker_set_covered_structures('sets'), 'sets'))

    @constructor(0x4d22ff98, 'web_view_result_url')
    def struct_0x4d22ff98(self):
        return Struct(
            'sname' / Computed('web_view_result_url'),
            'signature' / Hex(Const(0x4d22ff98, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_fullsize=2,
                                is_fullscreen=4,
                                has_query_id=1),
            'query_id' / If(this.flags.has_query_id, Int64ul),
            'url' / TString)

    @constructor(0xc9e01e7b, 'messages_request_main_web_view')
    def struct_0xc9e01e7b(self):
        return Struct(
            'sname' / Computed('messages_request_main_web_view'),
            'signature' / Hex(Const(0xc9e01e7b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_compact=128,
                                is_fullscreen=256,
                                has_start_param=2,
                                has_theme_params=1),
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString)

    @constructor(0x53618bce, 'messages_request_app_web_view')
    def struct_0x53618bce(self):
        return Struct(
            'sname' / Computed('messages_request_app_web_view'),
            'signature' / Hex(Const(0x53618bce, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_write_allowed=1,
                                is_compact=128,
                                is_fullscreen=256,
                                has_start_param=2,
                                has_theme_params=4),
            'peer' / self.input_peer_structures('peer'),
            'app' / self.input_bot_app_structures('app'),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString)

    @constructor(0x413a3e73, 'messages_request_simple_web_view')
    def struct_0x413a3e73(self):
        return Struct(
            'sname' / Computed('messages_request_simple_web_view'),
            'signature' / Hex(Const(0x413a3e73, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_from_switch_webview=2,
                                is_from_side_menu=4,
                                is_compact=128,
                                is_fullscreen=256,
                                has_url=8,
                                has_start_param=16,
                                has_theme_params=1),
            'bot' / self.input_user_structures('bot'),
            'url' / If(this.flags.has_url, TString),
            'start_param' / If(this.flags.has_start_param, TString),
            'theme_params' / If(this.flags.has_theme_params, self.struct_0x7d748d04()),
            'platform' / TString)

    @constructor(0x0f093465, 'messages_click_sponsored_message')
    def struct_0x0f093465(self):
        return Struct(
            'sname' / Computed('messages_click_sponsored_message'),
            'signature' / Hex(Const(0x0f093465, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_media=1,
                                is_fullscreen=2),
            'peer' / self.input_peer_structures('peer'),
            'random_id' / TBytes)

    @constructor(0x0fb85198, 'update_stars_balance_layer194')
    def struct_0x0fb85198(self):
        return ['balance' / Int64ul]

    @constructor(0x767cde44, 'update_star_gift_upgraded')
    def struct_0x767cde44(self):
        return (
            'gift' / self.struct_0x6056dba5(),
            'to_gift' / self.struct_0x6056dba5())

    @constructor(0x25a71742, 'channels_get_channel_recommendations')
    def struct_0x25a71742(self):
        return Struct(
            'sname' / Computed('channels_get_channel_recommendations'),
            'signature' / Hex(Const(0x25a71742, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_channel=1),
            'channel' / If(this.flags.has_channel, self.input_channel_structures('channel')))

    @constructor(0x6c750de1, 'messages_send_quick_reply_messages')
    def struct_0x6c750de1(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'shortcut_id' / Int32ul,
            'id' / self.vector(Int32ul, 'id'),
            'random_id' / self.vector(Int64ul, 'random_id'))

    @constructor(0x628c9224, 'missing_invitee')
    def struct_0x628c9224(self):
        return Struct(
            'sname' / Computed('missing_invitee'),
            'signature' / Hex(Const(0x628c9224, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_premium_would_allow_invite=1,
                                is_premium_required_for_pm=2),
            'user_id' / Int64ul)

    @constructor(0x7f5defa6, 'messages_invited_users')
    def struct_0x7f5defa6(self):
        return (
            'updates' / self.updates_structures('updates'),
            'missing_invitees' / self.vector(self.struct_0x628c9224(), 'missing_invitees'))

    @constructor(0x9ae91519, 'channels_restrict_sponsored_messages')
    def struct_0x9ae91519(self):
        return (
            'channel' / self.input_channel_structures('channel'),
            'restricted' / TBool)

    @constructor(0xcb9deff6, 'auth_report_missing_code')
    def struct_0xcb9deff6(self):
        return (
            'phone_number' / TString,
            'phone_code_hash' / TString,
            'mnc' / TString)

    @constructor(0x93c3e27e, 'available_effect')
    def struct_0x93c3e27e(self):
        return Struct(
            'sname' / Computed('available_effect'),
            'signature' / Hex(Const(0x93c3e27e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_premium_required=4,
                                has_static_icon_id=1,
                                has_effect_animation_id=2),
            'id' / Int64ul,
            'emoticon' / TString,
            'static_icon_id' / If(this.flags.has_static_icon_id, Int64ul),
            'effect_sticker_id' / Int64ul,
            'effect_animation_id' / If(this.flags.has_effect_animation_id, Int64ul))

    @constructor(0xb89bfccf, 'fact_check')
    def struct_0xb89bfccf(self):
        return Struct(
            'sname' / Computed('fact_check'),
            'signature' / Hex(Const(0xb89bfccf, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_need_check=1,
                                has_country=2),
            'country' / If(this.flags.has_country, TString),
            'text' / If(this.flags.has_country, self.struct_0x751f3146()),
            'hash' / Int64ul)

    @constructor(0x0589ee75, 'edit_fact_check')
    def struct_0x0589ee75(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul,
            'text' / self.struct_0x751f3146())

    @constructor(0xd1da940c, 'delete_fact_check')
    def struct_0xd1da940c(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / Int32ul)

    @constructor(0xb9cdc5ee, 'get_fact_check')
    def struct_0xb9cdc5ee(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'msg_id' / self.vector(Int32ul, 'msg_id'))

    @constructor(0xfebe5491, 'stars_revenue_status')
    def struct_0xfebe5491(self):
        return Struct(
            'sname' / Computed('stars_revenue_status'),
            'signature' / Hex(Const(0xfebe5491, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_withdrawal_enabled=1,
                                has_next_withdrawal_at=2),
            'current_balance' / self.struct_0xbbb6b4a3(),
            'available_balance' / self.struct_0xbbb6b4a3(),
            'overall_revenue' / self.struct_0xbbb6b4a3(),
            'next_withdrawal_at' / If(this.flags.has_next_withdrawal_at, Int32ul))

    @constructor(0xc92bb73b, 'payments_stars_revenue_stats')
    def struct_0xc92bb73b(self):
        return (
            'revenue_graph' / self.stats_graph_structures('revenue_graph'),
            'status' / self.struct_0xfebe5491(),
            'usd_rate' / Double)

    @constructor(0x1dab80b7, 'payments_stars_revenue_withdrawal_url')
    def struct_0x1dab80b7(self):
        return ['url' / TString]

    @constructor(0x394e7f21, 'payments_stars_revenue_ads_account_url')
    def struct_0x394e7f21(self):
        return ['url' / TString]

    @constructor(0xd91ffad6, 'payments_get_stars_revenue_stats')
    def struct_0xd91ffad6(self):
        return Struct(
            'sname' / Computed('payments_get_stars_revenue_stats'),
            'signature' / Hex(Const(0xd91ffad6, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0x13bbe8b3, 'payments_get_stars_revenue_withdrawal_url')
    def struct_0x13bbe8b3(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'stars' / Int64ul,
            'password' / self.input_check_password_srp_structures('password'))

    @constructor(0xd1d7efc5, 'payments_get_stars_revenue_ads_account_url')
    def struct_0xd1d7efc5(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0xea02c27e, 'payment_charge')
    def struct_0xea02c27e(self):
        return (
            'id' / TString,
            'provider_charge_id' / TString)

    @constructor(0xff57708d, 'messages_prepared_inline_message')
    def struct_0xff57708d(self):
        return (
            'query_id' / Int64ul,
            'result' / self.bot_inline_result_structures('result'),
            'peer_types' / self.vector(self.inline_query_peer_type_structures('peer_types'), 'peer_types'),
            'cache_time' / Int32ul,
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x857ebdb8, 'messages_get_prepared_inline_message')
    def struct_0x857ebdb8(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'id' / TString)

    @constructor(0x29b1c66a, 'messages_search_stickers')
    def struct_0x29b1c66a(self):
        return Struct(
            'sname' / Computed('messages_search_stickers'),
            'signature' / Hex(Const(0x29b1c66a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_emojis=1),
            'q' / TString,
            'emoticon' / TString,
            'lang_code' / self.vector(TString, 'lang_code'),
            'offset' / Int32ul,
            'limit' / Int32ul,
            'hash' / Int64ul)

    @constructor(0x5a6d7395, 'report_messages_delivery')
    def struct_0x5a6d7395(self):
        return Struct(
            'sname' / Computed('report_messages_delivery'),
            'signature' / Hex(Const(0x5a6d7395, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_push=1),
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x57e28221, 'account_content_settings')
    def struct_0x57e28221(self):
        return Struct(
            'sname' / Computed('account_content_settings'),
            'signature' / Hex(Const(0x57e28221, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_sensitive_enabled=1,
                                is_sensitive_can_change=2))

    @constructor(0xb574b16b, 'account_set_content_settings')
    def struct_0xb574b16b(self):
        return Struct(
            'sname' / Computed('account_set_content_settings'),
            'signature' / Hex(Const(0xb574b16b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_sensitive_enabled=1))

    @constructor(0x8b9b4dae, 'account_get_content_settings')
    def struct_0x8b9b4dae(self):
        return []

    @constructor(0xb53e8b21, 'account_web_page_preview')
    def struct_0xb53e8b21(self):
        return (
            'media' / self.message_media_structures('media'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x570d6f6f, 'account_get_web_page_preview')
    def struct_0x570d6f6f(self):
        return Struct(
            'sname' / Computed('account_get_web_page_preview'),
            'signature' / Hex(Const(0x570d6f6f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=8),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')))

    @constructor(0xc4e5921e, 'account_input_business_bot_recipients')
    def struct_0xc4e5921e(self):
        return Struct(
            'sname' / Computed('account_input_business_bot_recipients'),
            'signature' / Hex(Const(0xc4e5921e, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_existing_chats=1,
                                is_new_chats=2,
                                is_contacts=4,
                                is_non_contacts=8,
                                is_exclude_selected=32,
                                has_users=16,
                                has_exclude_users=64),
            'users' / If(this.flags.has_users, self.vector(self.input_user_structures('users'), 'users')),
            'exclude_users' / If(this.flags.has_exclude_users, self.vector(self.input_user_structures('exclude_users'), 'exclude_users')))

    @constructor(0xb88cf373, 'account_business_bot_recipients')
    def struct_0xb88cf373(self):
        return Struct(
            'sname' / Computed('account_business_bot_recipients'),
            'signature' / Hex(Const(0xb88cf373, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_existing_chats=1,
                                is_new_chats=2,
                                is_contacts=4,
                                is_non_contacts=8,
                                is_exclude_selected=32,
                                has_users=16,
                                has_exclude_users=64),
            'users' / If(this.flags.has_users, self.vector(Int64ul, 'users')),
            'exclude_users' / If(this.flags.has_exclude_users, self.vector(Int64ul, 'exclude_users')))

    @constructor(0xbd068601, 'account_connected_bot')
    def struct_0xbd068601(self):
        return Struct(
            'sname' / Computed('account_connected_bot'),
            'signature' / Hex(Const(0xbd068601, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_reply=1),
            'bot_id' / Int64ul,
            'recipients' / self.struct_0xb88cf373())

    @constructor(0x43d8521d, 'account_update_connected_bot')
    def struct_0x43d8521d(self):
        return Struct(
            'sname' / Computed('account_update_connected_bot'),
            'signature' / Hex(Const(0x43d8521d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_reply=1,
                                is_deleted=2),
            'bot' / self.input_user_structures('bot'),
            'recipients' / self.struct_0xc4e5921e())

    @constructor(0x646e1097, 'account_toggle_connected_bot_paused')
    def struct_0x646e1097(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'paused' / TBool)

    @constructor(0x5e437ed9, 'account_disable_peer_connected_bot')
    def struct_0x5e437ed9(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x6c8e1e06, 'account_birthday')
    def struct_0x6c8e1e06(self):
        return Struct(
            'sname' / Computed('account_birthday'),
            'signature' / Hex(Const(0x6c8e1e06, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_year=1),
            'day' / Int32ul,
            'month' / Int32ul,
            'year' / If(this.flags.has_year, Int32ul))

    @constructor(0x1d998733, 'account_contact_birthday')
    def struct_0x1d998733(self):
        return (
            'contact_id' / Int64ul,
            'birthday' / self.struct_0x6c8e1e06())

    @constructor(0x114ff30d, 'account_contact_birthdays')
    def struct_0x114ff30d(self):
        return (
            'contacts' / self.vector(self.struct_0x1d998733(), 'contacts'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xcc6e0c11, 'account_update_birthday')
    def struct_0xcc6e0c11(self):
        return Struct(
            'sname' / Computed('account_update_birthday'),
            'signature' / Hex(Const(0xcc6e0c11, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_birthday=1),
            'birthday' / If(this.flags.has_birthday, self.struct_0x6c8e1e06()))

    @constructor(0xdaeda864, 'account_get_birthdays')
    def struct_0xdaeda864(self):
        return []

    @constructor(0x11679fa7, 'account_input_business_chat_link')
    def struct_0x11679fa7(self):
        return Struct(
            'sname' / Computed('account_input_business_chat_link'),
            'signature' / Hex(Const(0x11679fa7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=1,
                                has_title=2),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'title' / If(this.flags.has_title, TString))

    @constructor(0xb4ae666f, 'account_business_chat_link')
    def struct_0xb4ae666f(self):
        return Struct(
            'sname' / Computed('account_business_chat_link'),
            'signature' / Hex(Const(0xb4ae666f, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=1,
                                has_title=2),
            'link' / TString,
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'title' / If(this.flags.has_title, TString),
            'views' / Int32ul)

    @constructor(0xec43a2d1, 'account_business_chat_links')
    def struct_0xec43a2d1(self):
        return (
            'links' / self.vector(self.struct_0xb4ae666f(), 'links'),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x9a23af21, 'account_resolved_business_chat_links')
    def struct_0x9a23af21(self):
        return Struct(
            'sname' / Computed('account_resolved_business_chat_links'),
            'signature' / Hex(Const(0x9a23af21, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_entities=1),
            'peer' / self.peer_structures('peer'),
            'message' / TString,
            'entities' / If(this.flags.has_entities, self.vector(self.message_entity_structures('entities'), 'entities')),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x8851e68e, 'account_create_business_chat_link')
    def struct_0x8851e68e(self):
        return ['link' / self.struct_0x11679fa7()]

    @constructor(0x8c3410af, 'account_edit_business_chat_link')
    def struct_0x8c3410af(self):
        return (
            'slug' / TString,
            'link' / self.struct_0x11679fa7())

    @constructor(0x60073674, 'account_delete_business_chat_link')
    def struct_0x60073674(self):
        return ['slug' / TString]

    @constructor(0x6f70dde1, 'account_get_business_chat_links')
    def struct_0x6f70dde1(self):
        return []

    @constructor(0x5492e5ee, 'account_resolve_business_chat_link')
    def struct_0x5492e5ee(self):
        return ['slug' / TString]

    @constructor(0xb9d9a38d, 'account_toggle_sponsored_messages')
    def struct_0xb9d9a38d(self):
        return ['enabled' / TBool]

    @constructor(0x5a0a066d, 'account_business_intro')
    def struct_0x5a0a066d(self):
        return Struct(
            'sname' / Computed('account_business_intro'),
            'signature' / Hex(Const(0x5a0a066d, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_sticker=1),
            'title' / TString,
            'description' / TString,
            'sticker' / If(this.flags.has_sticker, self.document_structures('sticker')))

    @constructor(0x09c469cd, 'account_input_business_intro')
    def struct_0x09c469cd(self):
        return Struct(
            'sname' / Computed('account_input_business_intro'),
            'signature' / Hex(Const(0x09c469cd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_sticker=1),
            'title' / TString,
            'description' / TString,
            'sticker' / If(this.flags.has_sticker, self.input_document_structures('sticker')))

    @constructor(0xa614d034, 'account_update_business_intro')
    def struct_0xa614d034(self):
        return Struct(
            'sname' / Computed('account_update_business_intro'),
            'signature' / Hex(Const(0xa614d034, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_intro=1),
            'intro' / If(this.flags.has_intro, self.struct_0x09c469cd()))

    @constructor(0xd94305e0, 'account_update_personal_channel')
    def struct_0xd94305e0(self):
        return ['channel' / self.input_channel_structures('channel')]

    @constructor(0x56e34970, 'account_reactions_notify_settings')
    def struct_0x56e34970(self):
        return Struct(
            'sname' / Computed('account_reactions_notify_settings'),
            'signature' / Hex(Const(0x56e34970, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_messages_notify_from=1,
                                has_stories_notify_from=2),
            'messages_notify_from' / If(this.flags.has_messages_notify_from, self.account_reaction_notifications_from_structures('messages_notify_from')),
            'stories_notify_from' / If(this.flags.has_stories_notify_from, self.account_reaction_notifications_from_structures('stories_notify_from')),
            'sound' / self.notification_sound_structures('sound'),
            'show_previews' / TBool)

    @constructor(0x06dd654c, 'account_get_reactions_notify_settings')
    def struct_0x06dd654c(self):
        return []

    @constructor(0x316ce548, 'account_set_reactions_notify_settings')
    def struct_0x316ce548(self):
        return ['settings' / self.struct_0x56e34970()]

    @constructor(0x23e91ba3, 'bot_preview_media')
    def struct_0x23e91ba3(self):
        return (
            'date' / TTimestamp,
            'media' / self.message_media_structures('media'))

    @constructor(0x17aeb75a, 'bots_add_preview_media')
    def struct_0x17aeb75a(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'lang_code' / TString,
            'media' / self.input_media_structures('media'))

    @constructor(0x8525606f, 'bots_edit_preview_media')
    def struct_0x8525606f(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'lang_code' / TString,
            'media' / self.input_media_structures('media'),
            'new_media' / self.input_media_structures('new_media'))

    @constructor(0x2d0135b3, 'bots_delete_preview_media')
    def struct_0x2d0135b3(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'lang_code' / TString,
            'media' / self.vector(self.input_media_structures('media'), 'media'))

    @constructor(0xb627f3aa, 'bots_reorder_preview_medias')
    def struct_0xb627f3aa(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'lang_code' / TString,
            'order' / self.vector(self.input_media_structures('order'), 'order'))

    @constructor(0xa2a5594d, 'bots_get_preview_medias')
    def struct_0xa2a5594d(self):
        return ['bot' / self.input_user_structures('bot')]

    @constructor(0x423ab3ad, 'bots_get_preview_info')
    def struct_0x423ab3ad(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'lang_code' / TString)

    @constructor(0x0ca71d64, 'bots_preview_info')
    def struct_0x0ca71d64(self):
        return (
            'media' / self.vector(self.struct_0x23e91ba3(), 'media'),
            'lang_codes' / self.vector(TString, 'lang_codes'))

    @constructor(0xc2510192, 'bots_get_popular_app_bots')
    def struct_0xc2510192(self):
        return (
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x1991b13b, 'bots_popular_app_bots')
    def struct_0x1991b13b(self):
        return Struct(
            'sname' / Computed('bots_popular_app_bots'),
            'signature' / Hex(Const(0x1991b13b, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xc99b1950, 'bot_app_settings')
    def struct_0xc99b1950(self):
        return Struct(
            'sname' / Computed('bot_app_settings'),
            'signature' / Hex(Const(0xc99b1950, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_placeholder_path=1,
                                has_background_color=2,
                                has_background_dark_color=4,
                                has_header_color=8,
                                has_header_dark_color=16),
            'placeholder_path' / If(this.flags.has_placeholder_path, TBytes),
            'background_color' / If(this.flags.has_background_color, Int32ul),
            'background_dark_color' / If(this.flags.has_background_dark_color, Int32ul),
            'header_color' / If(this.flags.has_header_color, Int32ul),
            'header_dark_color' / If(this.flags.has_header_dark_color, Int32ul))

    @constructor(0x06de6392, 'bots_toggle_user_emoji_status_permission')
    def struct_0x06de6392(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'enabled' / TBool)

    @constructor(0x50077589, 'bots_check_download_file_params')
    def struct_0x50077589(self):
        return (
            'bot' / self.input_user_structures('bot'),
            'file_name' / TString,
            'url' / TString)

    @constructor(0x778b5ab3, 'bots_update_star_ref_program')
    def struct_0x778b5ab3(self):
        return Struct(
            'sname' / Computed('bots_update_star_ref_program'),
            'signature' / Hex(Const(0x778b5ab3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_duration_months=1),
            'bot' / self.input_user_structures('bot'),
            'commission_permille' / Int32ul,
            'duration_months' / If(this.flags.has_duration_months, Int32ul))

    @constructor(0xb0711d83, 'bots_get_admined_bots')
    def struct_0xb0711d83(self):
        return []

    @constructor(0xb0cd6617, 'bot_verifier_settings')
    def struct_0xb0cd6617(self):
        return Struct(
            'sname' / Computed('bot_verifier_settings'),
            'signature' / Hex(Const(0xb0cd6617, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_can_modify_custom_description=2,
                                has_custom_description=1),
            'company' / TString,
            'custom_description' / If(this.flags.has_custom_description, TString))

    @constructor(0xf93cd45c, 'bot_verification')
    def struct_0xf93cd45c(self):
        return (
            'bot_id' / Int64ul,
            'icon' / Int64ul,
            'description' / TString)

    @constructor(0x8b89dfbd, 'bots_set_custom_verification')
    def struct_0x8b89dfbd(self):
        return Struct(
            'sname' / Computed('bots_set_custom_verification'),
            'signature' / Hex(Const(0x8b89dfbd, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_enabled=2,
                                has_bot=1,
                                has_custom_description=4),
            'bot' / If(this.flags.has_bot, self.input_user_structures('bot')),
            'peer' / self.input_peer_structures('peer'),
            'custom_description' / If(this.flags.has_custom_description, TString))

    @constructor(0xa1b70815, 'bots_get_bot_recommendations')
    def struct_0xa1b70815(self):
        return ['bot' / self.input_user_structures('bot')]

    @constructor(0x19a13f71, 'payments_connected_bot_star_ref')
    def struct_0x19a13f71(self):
        return Struct(
            'sname' / Computed('payments_connected_bot_star_ref'),
            'signature' / Hex(Const(0x19a13f71, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=2,
                                has_duration_months=1),
            'url' / TString,
            'date' / TTimestamp,
            'bot_id' / Int64ul,
            'commission_permille' / Int32ul,
            'duration_months' / If(this.flags.has_duration_months, Int32ul),
            'participants' / Int64ul,
            'revenue' / Int64ul)

    @constructor(0x98d5ea1d, 'payments_connected_star_ref_bots')
    def struct_0x98d5ea1d(self):
        return (
            'count' / Int32ul,
            'connected_bots' / self.vector(self.struct_0x19a13f71(), 'connected_bots'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb4d5d859, 'payments_suggested_star_ref_bots')
    def struct_0xb4d5d859(self):
        return Struct(
            'sname' / Computed('payments_suggested_star_ref_bots'),
            'signature' / Hex(Const(0xb4d5d859, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'suggested_bots' / self.vector(self.struct_0xdd0c66f2(), 'suggested_bots'),
            'users' / self.vector(self.user_structures('users'), 'users'),
            'next_offset' / If(this.flags.has_next_offset, TString))

    @constructor(0xdd0c66f2, 'payments_star_ref_program')
    def struct_0xdd0c66f2(self):
        return Struct(
            'sname' / Computed('payments_star_ref_program'),
            'signature' / Hex(Const(0xdd0c66f2, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_duration_months=1,
                                has_end_date=2,
                                has_daily_revenue_per_user=4),
            'bot_id' / Int64ul,
            'commission_permille' / Int32ul,
            'duration_months' / If(this.flags.has_duration_months, Int32ul),
            'end_date' / If(this.flags.has_end_date, TTimestamp),
            'daily_revenue_per_user' / If(this.flags.has_daily_revenue_per_user, self.struct_0xbbb6b4a3()))

    @constructor(0x7ed5348a, 'payments_connect_star_ref_bot')
    def struct_0x7ed5348a(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'))

    @constructor(0x0d6b48f7, 'payments_get_suggested_star_ref_bots')
    def struct_0x0d6b48f7(self):
        return Struct(
            'sname' / Computed('payments_get_suggested_star_ref_bots'),
            'signature' / Hex(Const(0x0d6b48f7, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_order_by_revenue=1,
                                is_order_by_date=2),
            'peer' / self.input_peer_structures('peer'),
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x5869a553, 'payments_get_connected_star_ref_bots')
    def struct_0x5869a553(self):
        return Struct(
            'sname' / Computed('payments_get_connected_star_ref_bots'),
            'signature' / Hex(Const(0x5869a553, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_offset_date=4),
            'peer' / self.input_peer_structures('peer'),
            'offset_date' / If(this.flags.has_offset_date, TTimestamp),
            'offset_link' / If(this.flags.has_offset_date, TString),
            'limit' / Int32ul)

    @constructor(0xb7d998f0, 'payments_get_connected_star_ref_bot')
    def struct_0xb7d998f0(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'bot' / self.input_user_structures('bot'))

    @constructor(0xe4fca4a3, 'payments_edit_connected_star_ref_bot')
    def struct_0xe4fca4a3(self):
        return Struct(
            'sname' / Computed('payments_edit_connected_star_ref_bot'),
            'signature' / Hex(Const(0xe4fca4a3, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_revoked=1),
            'peer' / self.input_peer_structures('peer'),
            'link' / TString)

    @constructor(0xa6c4600c, 'phone_request_call')
    def struct_0xa6c4600c(self):
        return Struct(
            'sname' / Computed('phone_request_call'),
            'signature' / Hex(Const(0xa6c4600c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=1,
                                has_conference_call=2),
            'user_id' / self.input_user_structures('user_id'),
            'conference_call' / If(this.flags.has_conference_call, self.struct_0xd8aa840f()),
            'random_id' / Int32ul,
            'g_a_hash' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'))

    @constructor(0xdfc909ab, 'phone_create_conference_call')
    def struct_0xdfc909ab(self):
        return (
            'peer' / self.struct_0xd8aa840f(),
            'key_fingerprint' / Int64ul)

    @constructor(0xc4563590, 'stars_get_star_gifts')
    def struct_0xc4563590(self):
        return ['hash' / Int32ul]

    @constructor(0x23830de9, 'stars_get_saved_star_gifts')
    def struct_0x23830de9(self):
        return Struct(
            'sname' / Computed('stars_get_saved_star_gifts'),
            'signature' / Hex(Const(0x23830de9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_exclude_unsaved=1,
                                is_exclude_saved=2,
                                is_exclude_unlimited=4,
                                is_exclude_limited=8,
                                is_exclude_unique=16,
                                is_sort_by_value=32),
            'peer' / self.input_peer_structures('peer'),
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0xb455a106, 'stars_get_saved_star_gift')
    def struct_0xb455a106(self):
        return ['stargift' / self.vector(self.stars_input_saved_star_gift_structures('stargift'), 'stargift')]

    @constructor(0x2a2a697c, 'stars_save_star_gift')
    def struct_0x2a2a697c(self):
        return Struct(
            'sname' / Computed('stars_save_star_gift'),
            'signature' / Hex(Const(0x2a2a697c, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_unsave=1),
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'))

    @constructor(0x74bf076b, 'stars_convert_star_gift')
    def struct_0x74bf076b(self):
        return ['stargift' / self.stars_input_saved_star_gift_structures('stargift')]

    @constructor(0xaed6e4f5, 'stars_upgrade_star_gift')
    def struct_0xaed6e4f5(self):
        return Struct(
            'sname' / Computed('stars_upgrade_star_gift'),
            'signature' / Hex(Const(0xaed6e4f5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_keep_original_details=1),
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'))

    @constructor(0x7f18176a, 'stars_transfer_star_gift')
    def struct_0x7f18176a(self):
        return (
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'),
            'to_id' / self.input_peer_structures('to_id'))

    @constructor(0x167bd90b, 'star_gift_upgrade_preview')
    def struct_0x167bd90b(self):
        return ['sample_attributes' / self.vector(self.star_gift_attribute_structures('sample_attributes'), 'sample_attributes')]

    @constructor(0x9c9abcb1, 'stars_get_star_gift_upgrade_preview')
    def struct_0x9c9abcb1(self):
        return ['gift_id' / Int64ul]

    @constructor(0x0bd915c0, 'stars_topup_option')
    def struct_0x0bd915c0(self):
        return Struct(
            'sname' / Computed('stars_topup_option'),
            'signature' / Hex(Const(0x0bd915c0, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_extended=2,
                                has_store_product=1),
            'stars' / Int64ul,
            'store_product' / If(this.flags.has_store_product, TString),
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0x5e0589f1, 'stars_gift_option')
    def struct_0x5e0589f1(self):
        return Struct(
            'sname' / Computed('stars_gift_option'),
            'signature' / Hex(Const(0x5e0589f1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_extended=2,
                                has_store_product=1),
            'stars' / Int64ul,
            'store_product' / If(this.flags.has_store_product, TString),
            'currency' / TString,
            'amount' / Int64ul)

    @constructor(0x54236209, 'stars_giveaway_winners_option')
    def struct_0x54236209(self):
        return Struct(
            'sname' / Computed('stars_giveaway_winners_option'),
            'signature' / Hex(Const(0x54236209, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_default=1),
            'users' / Int32ul,
            'per_user_stars' / Int64ul)

    @constructor(0x94ce852a, 'stars_giveaway_option')
    def struct_0x94ce852a(self):
        return Struct(
            'sname' / Computed('stars_giveaway_option'),
            'signature' / Hex(Const(0x94ce852a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_extended=1,
                                is_default=2,
                                has_store_product=4),
            'stars' / Int64ul,
            'yearly_boosts' / Int32ul,
            'store_product' / If(this.flags.has_store_product, TString),
            'currency' / TString,
            'amount' / Int64ul,
            'winners' / self.vector(self.struct_0x54236209(), 'winners'))

    @constructor(0xbbb6b4a3, 'stars_amount')
    def struct_0xbbb6b4a3(self):
        return (
            'amount' / Int64ul,
            'nanos' / Int32ul)

    @constructor(0xc00ec7d3, 'stars_payments_get_stars_topup_options')
    def struct_0xc00ec7d3(self):
        return []

    @constructor(0xd3c96bc8, 'stars_payments_get_stars_gift_options')
    def struct_0xd3c96bc8(self):
        return Struct(
            'sname' / Computed('stars_payments_get_stars_gift_options'),
            'signature' / Hex(Const(0xd3c96bc8, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_user_id=1),
            'user_id' / If(this.flags.has_user_id, self.input_user_structures('user_id')))

    @constructor(0xbd1efd3e, 'stars_payments_get_stars_giveaway_options')
    def struct_0xbd1efd3e(self):
        return []

    @constructor(0x104fcfa7, 'stars_payments_get_stars_status')
    def struct_0x104fcfa7(self):
        return ['peer' / self.input_peer_structures('peer')]

    @constructor(0x673ac2f9, 'stars_payments_get_stars_transactions')
    def struct_0x673ac2f9(self):
        return Struct(
            'sname' / Computed('stars_payments_get_stars_transactions'),
            'signature' / Hex(Const(0x673ac2f9, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_inbound=1,
                                is_outbound=2),
            'peer' / self.input_peer_structures('peer'),
            'offset' / TString)

    @constructor(0x7998c914, 'stars_payments_send_stars_form')
    def struct_0x7998c914(self):
        return (
            'form_id' / Int64ul,
            'invoice' / self.input_invoice_structures('invoice'))

    @constructor(0x05416d58, 'stars_subscription_pricing')
    def struct_0x05416d58(self):
        return (
            'period' / Int32ul,
            'amount' / Int64ul)

    @constructor(0x032512c5, 'stars_get_stars_subscriptions')
    def struct_0x032512c5(self):
        return Struct(
            'sname' / Computed('stars_get_stars_subscriptions'),
            'signature' / Hex(Const(0x032512c5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_missing_balance=1),
            'peer' / self.input_peer_structures('peer'),
            'offset' / TString)

    @constructor(0xc7770878, 'stars_change_stars_subscription')
    def struct_0xc7770878(self):
        return Struct(
            'sname' / Computed('stars_change_stars_subscription'),
            'signature' / Hex(Const(0xc7770878, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_canceled=1),
            'peer' / self.input_peer_structures('peer'),
            'subscription_id' / TString,
            'canceled' / If(this.flags.is_canceled, TBool))

    @constructor(0xcc5bebb3, 'stars_fulfill_stars_subscription')
    def struct_0xcc5bebb3(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'subscription_id' / TString)

    @constructor(0xcaa2f60b, 'stars_payments_unique_star_gift')
    def struct_0xcaa2f60b(self):
        return (
            'gift' / self.star_gift_structures('gift'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xa1974d72, 'stars_get_unique_star_gift')
    def struct_0xa1974d72(self):
        return ['slug' / TString]

    @constructor(0x6056dba5, 'stars_saved_star_gift')
    def struct_0x6056dba5(self):
        return Struct(
            'sname' / Computed('stars_saved_star_gift'),
            'signature' / Hex(Const(0x6056dba5, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_name_hidden=1,
                                is_unsaved=32,
                                is_refunded=512,
                                is_can_upgrade=1024,
                                has_from_id=2,
                                has_message=4,
                                has_msg_id=8,
                                has_saved_id=2048,
                                has_convert_stars=16,
                                has_upgrade_stars=64,
                                has_can_export_at=128,
                                has_transfer_stars=256),
            'from_id' / If(this.flags.has_from_id, self.peer_structures('from_id')),
            'date' / TTimestamp,
            'gift' / self.star_gift_structures('gift'),
            'message' / If(this.flags.has_message, self.struct_0x751f3146()),
            'msg_id' / If(this.flags.has_msg_id, Int32ul),
            'saved_id' / If(this.flags.has_saved_id, Int64ul),
            'convert_stars' / If(this.flags.has_convert_stars, Int64ul),
            'upgrade_stars' / If(this.flags.has_upgrade_stars, Int64ul),
            'can_export_at' / If(this.flags.has_can_export_at, Int32ul),
            'transfer_stars' / If(this.flags.has_transfer_stars, Int64ul))

    @constructor(0x95f389b1, 'stars_payments_saved_star_gifts')
    def struct_0x95f389b1(self):
        return Struct(
            'sname' / Computed('stars_payments_saved_star_gifts'),
            'signature' / Hex(Const(0x95f389b1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_chat_notifications_enabled=2,
                                has_next_offset=1),
            'count' / Int32ul,
            'chat_notifications_enabled' / If(this.flags.has_chat_notifications_enabled, TBool),
            'gifts' / self.vector(self.struct_0x6056dba5(), 'gifts'),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0x60eaefa1, 'stars_toggle_chat_star_gift_notifications')
    def struct_0x60eaefa1(self):
        return Struct(
            'sname' / Computed('stars_toggle_chat_star_gift_notifications'),
            'signature' / Hex(Const(0x60eaefa1, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_enabled=1),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0x84aa3a9c, 'star_gift_withdrawal_url')
    def struct_0x84aa3a9c(self):
        return ['url' / TString]

    @constructor(0xd06e93a8, 'stars_get_star_gift_withdrawal_url')
    def struct_0xd06e93a8(self):
        return (
            'stargift' / self.stars_input_saved_star_gift_structures('stargift'),
            'password' / self.input_check_password_srp_structures('password'))

    @constructor(0x5407e297, 'stats_broadcast_revenue_stats')
    def struct_0x5407e297(self):
        return (
            'top_hours_graph' / self.stats_graph_structures('top_hours_graph'),
            'revenue_graph' / self.stats_graph_structures('revenue_graph'),
            'balances' / self.broadcast_revenue_balances_structures('balances'),
            'usd_rate' / Double)

    @constructor(0xec659737, 'stats_broadcast_revenue_withdrawal_url')
    def struct_0xec659737(self):
        return ['url' / TString]

    @constructor(0x87158466, 'stats_broadcast_revenue_transactions')
    def struct_0x87158466(self):
        return (
            'count' / Int32ul,
            'transactions' / self.vector(self.stats_broadcast_revenue_transaction_structures('transactions'), 'transactions'))

    @constructor(0xf788ee19, 'stats_get_broadcast_revenue_stats')
    def struct_0xf788ee19(self):
        return Struct(
            'sname' / Computed('stats_get_broadcast_revenue_stats'),
            'signature' / Hex(Const(0xf788ee19, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_dark=1),
            'peer' / self.input_peer_structures('peer'))

    @constructor(0x9df4faad, 'stats_get_broadcast_revenue_withdrawal_url')
    def struct_0x9df4faad(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'password' / self.input_check_password_srp_structures('password'))

    @constructor(0x70990b6d, 'stats_get_broadcast_revenue_transactions')
    def struct_0x70990b6d(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'offset' / Int32ul,
            'limit' / Int32ul)

    @constructor(0x63c3dd0a, 'stories_stories')
    def struct_0x63c3dd0a(self):
        return Struct(
            'sname' / Computed('stories_stories'),
            'signature' / Hex(Const(0x63c3dd0a, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_pinned_to_top=1),
            'count' / Int32ul,
            'stories' / self.vector(self.story_item_structures('stories'), 'stories'),
            'pinned_to_top' / If(this.flags.has_pinned_to_top, self.vector(Int32ul, 'pinned_to_top')),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xb2028afb, 'stories_increment_story_views')
    def struct_0xb2028afb(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0xe87acbc0, 'stories_found_story')
    def struct_0xe87acbc0(self):
        return (
            'peer' / self.peer_structures('peer'),
            'story_item' / self.story_item_structures('story_item'))

    @constructor(0xe2de7737, 'stories_found_stories')
    def struct_0xe2de7737(self):
        return Struct(
            'sname' / Computed('stories_found_stories'),
            'signature' / Hex(Const(0xe2de7737, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_next_offset=1),
            'count' / Int32ul,
            'stories' / self.vector(self.struct_0xe87acbc0(), 'stories'),
            'next_offset' / If(this.flags.has_next_offset, TString),
            'chats' / self.vector(self.chat_structures('chats'), 'chats'),
            'users' / self.vector(self.user_structures('users'), 'users'))

    @constructor(0xd1810907, 'stories_search_posts')
    def struct_0xd1810907(self):
        return Struct(
            'sname' / Computed('stories_search_posts'),
            'signature' / Hex(Const(0xd1810907, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_hashtag=1,
                                has_area=2,
                                has_peer=4),
            'hashtag' / If(this.flags.has_hashtag, TString),
            'area' / If(this.flags.has_area, self.stories_media_area_structures('area')),
            'peer' / If(this.flags.has_peer, self.input_peer_structures('peer')),
            'offset' / TString,
            'limit' / Int32ul)

    @constructor(0x19d8eb45, 'stories_report')
    def struct_0x19d8eb45(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'),
            'option' / TBytes,
            'message' / TString)

    @constructor(0xde4c5d93, 'stories_geo_point_address')
    def struct_0xde4c5d93(self):
        return Struct(
            'sname' / Computed('stories_geo_point_address'),
            'signature' / Hex(Const(0xde4c5d93, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                has_state=1,
                                has_city=2,
                                has_street=4),
            'country_iso2' / TString,
            'state' / If(this.flags.has_state, TString),
            'city' / If(this.flags.has_city, TString),
            'street' / If(this.flags.has_street, TString))

    @constructor(0x0b297e9b, 'stories_toggle_pinned_to_top')
    def struct_0x0b297e9b(self):
        return (
            'peer' / self.input_peer_structures('peer'),
            'id' / self.vector(Int32ul, 'id'))

    @constructor(0x3660c311, 'phone_call_accepted_layer195')
    def struct_0x3660c311(self):
        return Struct(
            'sname' / Computed('phone_call_accepted_layer195'),
            'signature' / Hex(Const(0x3660c311, Int32ul)),
            'flags' / FlagsEnum(Int32ul,
                                is_video=64),
            'id' / Int64ul,
            'access_hash' / Int64ul,
            'date' / TTimestamp,
            'admin_id' / Int64ul,
            'participant_id' / Int64ul,
            'g_b' / TBytes,
            'protocol' / self.phone_call_protocol_structures('protocol'))
